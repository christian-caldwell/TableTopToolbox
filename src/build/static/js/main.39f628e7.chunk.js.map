{"version":3,"sources":["Services/user-services.js","Services/item-services.js","Services/status-services.js","Services/action-services.js","Services/actor-services.js","Services/game-services.js","Components/Shared/Status/Status.js","Components/Shared/Status/StatusWrapperList.js","Components/Shared/Status/StatusWrapperSearch.js","Components/Shared/Items/Item.js","Components/Shared/Items/ItemWrapperList.js","Components/Shared/Items/ItemWrapperSearch.js","Components/Player/Actions/Action.js","Components/Player/Actions/ActionWrapperList.js","Components/Player/Actions/ActionWrapperSearch.js","Components/Player/Actors/Actor.js","Components/Player/Actors/ActorWrapperList.js","Components/Player/Actors/ActorWrapperSearch.js","Components/Util/LinkButton.jsx","Components/Player/Characters/CurrentCharacter.js","Services/character-services.js","Services/AppContext.js","data/user-data.js","data/game-data.js","data/character-data.js","data/actor-data.js","data/action-data.js","data/status-data.js","data/item-data.js","Components/Home.js","Components/Util/About.js","Components/Util/Registration/Register.js","Components/Util/Registration/Login.js","Components/PageNotFound.js","Components/Util/NavBar.js","Components/Util/DataLoader.js","Components/Shared/Items/ItemList.js","Components/Shared/Items/ItemForm.js","Components/Shared/Items/ItemSearch.js","Components/Shared/Items/ItemWrapperForm.js","Components/Shared/Items/ItemPage.js","Components/Player/Actors/ActorList.js","Components/Player/Actors/ActorForm.js","Components/Player/Actors/ActorSearch.js","Components/Player/Actors/ActorWrapperForm.js","Components/Player/Actors/ActorPage.js","Components/Player/Actions/ActionList.js","Components/Player/Actions/ActionForm.js","Components/Player/Actions/ActionSearch.js","Components/Player/Actions/ActionWrapperForm.js","Components/Player/Actions/ActionPage.js","Components/Shared/Status/StatusList.js","Components/Shared/Status/StatusForm.js","Components/Shared/Status/StatusSearch.js","Components/Shared/Status/StatusWrapperForm.js","Components/Shared/Status/StatusPage.js","Components/Player/Characters/CharacterList.js","Components/Player/Characters/CharacterForm.js","Components/Player/Characters/CharacterSearch.js","Components/Player/Characters/CurrentCharacterForm.js","Components/Player/Characters/CharacterPage.js","App.js","reportWebVitals.js","index.js"],"names":["isLoggedIn","localStorage","getItem","register","user","a","fetch","method","body","JSON","stringify","headers","result","json","login","setToken","token","getUser","getHeader","updateUser","deleteUser","deleteAllUsers","userId","getUsername","decodeToken","username","getUserId","id","Authorization","jwt","decode","setItem","createItem","item","auth","getDefaultItems","getCustomItems","getCharacterItems","characterId","updateItem","_id","deleteAllItems","createStatus","status","getDefaultStatus","getCustomStatus","getCharacterStatus","updateStatus","deleteCustomStatus","statusId","deleteAllStatus","createAction","action","getDefaultActions","getCustomActions","getCharacterActions","updateAction","deleteCustomAction","actionId","deleteAllActions","createActor","actor","getDefaultActors","getCustomActors","getCharacterActors","getGameActors","gameId","updateActor","deleteCustomActor","actorId","deleteAllActors","isInGame","getGameId","createGame","game","getGames","deleteAllGames","Status","className","name","isDefault","defaultConditions","map","condition","index","customConditions","duration","description","StatusWrapperList","dropStatus","deleteStatus","editStatus","wrapper","endDate","onClick","StatusWrapperSearch","orderBy","orderDir","changeOrder","searchStatus","showCustom","showDefault","showActive","showExpired","changeShow","type","aria-label","onChange","e","target","value","data-toggle","aria-haspopup","aria-expanded","href","role","Item","wrapperFormat","weight","goldValue","actionType","uses","isConsumed","ItemWrapperList","items","dropItem","deleteItem","editItem","use","active","usesLeft","recoveryDate","ItemWrapperSearch","searchItems","showEquiped","showNotEquiped","showConsume","showNonConsume","Action","class","rollType","needsSight","needsSound","needsMovement","ActionWrapperList","actions","dropAction","deleteAction","editAction","ActionSearch","searchActions","Actor","title","actorType","initMod","initRaw","ActorWrapperList","actors","dropActor","deleteActor","editActor","initActual","isHidden","ActorWrapperSearch","searchActors","showFriendly","showPlayer","showHostile","showNeutral","withRouter","props","history","to","location","match","staticContext","rest","event","push","CurrentCharacter","actionOrder","dropCharacter","deleteCharacter","editCharacter","characterData","contextData","useContext","AppContext","character","currentActions","currentItems","currentActors","currentStatus","useState","itemQuery","setItemQuery","statusQuery","setStatusQuery","actorQuery","setActorQuery","actionQuery","setActionQuery","itemOrderBy","setItemOrderBy","itemOrderDir","setItemOrderDir","statusOrderBy","setStatusOrderBy","statusOrderDir","setStatusOrderDir","actionOrderBy","setActorOrderBy","actionOrderDir","setActorOrderDir","actorOrderBy","setActionOrderBy","actorOrderDir","setActionOrderDir","actionShowCustom","setActionShowCustom","actionShowDefault","setActionShowDefault","actorShowCustom","setActorShowCustom","actorShowDefault","setActorShowDefault","actorShowFriendly","setActorShowFriendly","actorShowHostile","setActorShowHostile","actorShowNeutral","setActorShowNeutral","actorShowPlayer","setActorShowPlayer","itemShowCustom","setItemShowCustom","itemShowDefault","setItemShowDefault","itemShowConsume","setItemShowConsume","itemShowNonConsume","setItemShowNonConsume","itemShowEquiped","setItemShowEquiped","itemShowNotEquiped","setItemShowNotEquiped","statusShowCustom","setStatusShowCustom","statusShowDefault","setStatusShowDefault","statusShowExpired","setStatusShowExpired","statusShowActive","setStatusShowActive","actionFilteredActions","find","sort","b","toLowerCase","filter","eachAction","includes","statusOrder","statusFilteredStatus","eachStatus","itemOrder","itemFilteredItems","itemId","eachItem","actorOrder","actorFilteredActors","eachActor","characterClass","gold","age","order","dir","query","hasCurrCharacter","getCharId","clearCharacter","removeItem","createCharacter","getCharacters","getGameCharacters","updateCharacter","deleteAllCharacters","createContext","AppProvider","children","gameCharacters","setGameCharacters","gameActors","setGameActors","setGame","charActions","setCharActions","charStatus","setCharStatus","charItems","setCharItems","charActors","setCharActors","setCharacter","userActions","setUserActions","userStatus","setUserStatus","userItems","setUserItems","userActors","setUserActors","userCharacters","setUserCharacters","userGames","setUserGames","setUser","defaultActions","setDefaultActions","defaultStatus","setDefaultStatus","defaultItems","setDefaultItems","appData","characters","games","default","Provider","userData","password","email","gameData","hostId","characterIds","gameTitle","initTitle","currentActor","currentTime","roundCounter","currentInit","joinCode","actorData","actorDefaultData","actionData","actionDefaultData","statusData","statusDefaultData","itemData","itemDefaultData","Home","resetUsers","userServices","resetGames","gameServices","resetCharacters","characterServices","resetItems","itemServices","resetStatus","statusServices","resetActors","actorServices","resetActions","actionServices","populateUser","i","newUser","console","log","populate","j","newItem","newActor","newAction","newStatus","newCharacter","newGame","update","index1","itemIds","actionIds","actorIds","statusIds","gameIds","populateDefault","initialize","prod","Register","setUsername","setPassword","passConfirm","setPassConfirm","submitUser","preventDefault","loginBody","noValidate","onSubmit","htmlFor","readOnly","placeholder","Login","loginFailed","setLoginFailed","length","PageNotFound","NavBar","signOut","clear","DataLoader","defaultActors","setDefaultActors","useEffect","fetchDefaultData","fetchedUser","fetchedActions","fetchedItems","fetchedStatus","fetchedActors","fetchedCharacters","fetchedGames","fetchUserData","fetchGameData","fetchCharacterData","ItemList","selectItem","ItemForm","formDisplay","toggleForm","editData","cancelForm","setId","setName","setIsDefault","setGoldValue","setWeight","setDescription","setActionType","setIsConsumed","setUses","resetForm","makeNewItem","createPressed","updatePressed","createdItem","cancelPressed","updateActionType","newValue","checked","rows","cols","ItemSearch","ItemWrapperForm","updateWrapper","wrapperData","setActive","setUsesLeft","setRecoveryDate","isActive","makeNewWrapper","newWrapper","updateWrapperPressed","ItemPage","userOrder","setItems","characterItems","setCharacterItems","userFormDisplay","setUserFormDisplay","characterFormDisplay","setCharacterFormDisplay","bottomHidden","setBottomHidden","topHidden","setTopHidden","userQuery","setUserQuery","characterQuery","setCharacterQuery","userOrderBy","setUserOrderBy","userOrderDir","setUserOrderDir","characterOrderBy","setCharacterOrderBy","characterOrderDir","setCharacterOrderDir","userShowCustom","setUserShowCustom","userShowDefault","setUserShowDefault","userShowConsume","setUserShowConsume","userShowNonConsume","setUserShowNonConsume","characterShowCustom","setCharacterShowCustom","characterShowDefault","setCharacterShowDefault","characterShowConsume","setCharacterShowConsume","characterShowNonConsume","setCharacterShowNonConsume","characterShowEquiped","setCharacterShowEquiped","characterShowNotEquiped","setCharacterShowNotEquiped","setEditData","setWrapperData","updatedItem","userIndex","findIndex","updateCharacterItem","updatedWrapper","originalWrapper","itemIndex","createCharacterItem","newCharacterItem","newItemWrapper","deletedItem","itemWrapperIndex","itemIdIndex","indexOf","newIdList","without","itemsIndex","newList","charItemsIndex","newCharList","itemWrapper","userFilteredItems","characterOrder","characterFilteredItems","ActorList","selectActor","ActorForm","setTitle","setActorType","setInitMod","setInitRaw","createNewActor","createdActor","updateActorType","ActorSearch","ActorWrapperForm","setIsHidden","setInitActual","makeNewActor","ActorPage","setActors","characterActors","setCharacterActors","userShowFriendly","setUserShowFriendly","userShowHostile","setUserShowHostile","userShowNeutral","setUserShowNeutral","userShowPlayer","setUserShowPlayer","characterShowFriendly","setCharacterShowFriendly","characterShowHostile","setCharacterShowHostile","characterShowNeutral","setCharacterShowNeutral","characterShowPlayer","setCharacterShowPlayer","updatedActor","updateCharacterActor","actorIndex","createCharacterActor","newCharacterActor","newActorWrapper","deletedActor","actorWrapperIndex","actorIdIndex","actorsIndex","charActorsIndex","actorWrapper","userFilteredActors","characterFilteredActors","isTop","ActionList","selectAction","ActionForm","actionClass","setActionClass","setRollType","setNeedsSight","setNeedsSound","setNeedsMovement","makeNewAction","updateClassType","updateRollType","ActionWrapperSearch","ActionWrapperForm","ActionPage","setActions","characterActions","setCharacterActions","updatedAction","updateCharacterAction","actionIndex","createdAction","createCharacterAction","newCharacterAction","newActionWrapper","deletedAction","actionWrapperIndex","actionIdIndex","actionsIndex","charActionsIndex","actionWrapper","userFilteredActions","characterFilteredActions","StatusList","selectStatus","StatusForm","setDuration","setDefaultConditons","setCustomConditons","newCondition","setNewCondition","selectedCondition","setSelectedCondition","createNewStatus","createdStatus","updateConditionType","pop","StatusWrapperForm","setEndDate","makeNewStatus","StatusPage","setStatus","characterStatus","setCharacterStatus","characterShowExpired","setCharacterShowExpired","characterShowActive","setCharacterShowActive","updatedStatus","updateCharacterStatus","statusIndex","createCharacterStatus","newCharacterStatus","newStatusWrapper","deletedStatus","statusWrapperIndex","statusIdIndex","charStatusIndex","statusWrapper","userFilteredStatus","characterFilteredStatus","StatusSearch","CharacterList","selectCharacter","CharacterForm","setGold","setAge","setCharacterClass","updateCharacterClass","CharacterSearch","searchCharacters","CurrentCharacterForm","CharacterPage","setCurrentActions","setCurrentItems","setCurrentActors","setCurrentStatus","setCharacters","currentCharacter","setCurrentCharacter","currentFormDisplay","setCurrentFormDisplay","updateCurrentCharacter","updatedCharacter","newCurrentCharacter","newActions","o","newActors","newItems","deletedCharacter","userFilteredCharacters","App","path","component","exact","AboutPage","Items","Actors","Actions","Characters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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W,EACXO,YAAa,iBACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,SACT,CACFD,MAAO,iBACPxE,WAAW,EACXO,YAAa,wBACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,SACT,CACFD,MAAO,mBACPxE,WAAW,EACXO,YAAa,mCACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,QACT,CACFD,MAAO,OACPxE,WAAW,EACXO,YAAa,4BACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,QACT,CACFD,MAAO,OACPxE,WAAW,EACXO,YAAa,0DACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,SACT,CACFD,MAAO,cACPxE,WAAW,EACXO,YAAa,0BACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,QACT,CACFD,MAAO,UACPxE,WAAW,EACXO,YAAa,8CACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,eACT,CACFD,MAAO,OACPxE,WAAW,EACXO,YAAa,mEACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,cACT,CACFD,MAAO,cACPxE,WAAW,EACXO,YAAa,qFACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,OACT,CACFD,MAAO,aACPxE,WAAW,EACXO,YAAa,0DACbmE,QAAS,IACTC,QAAS,IACTF,UAAW,QCxJN8L,GAAa,CACtB,CACIxQ,KAAM,SACNC,WAAW,EACXO,YAAa,cACboD,MAAO,UACPnB,WAAY,QACZoB,SAAU,UACVC,YAAY,EACZC,YAAY,EACZC,eAAe,GAEnB,CACIhE,KAAM,OACNC,WAAW,EACXO,YAAa,eACboD,MAAO,UACPnB,WAAY,SACZoB,SAAU,SACVC,YAAY,EACZC,YAAY,EACZC,eAAe,GAEnB,CACIhE,KAAM,QACNC,WAAW,EACXO,YAAa,mBACboD,MAAO,MACPnB,WAAY,OACZoB,SAAU,UACVC,YAAY,EACZC,YAAY,EACZC,eAAe,GAEnB,CACIhE,KAAM,WACNC,WAAW,EACXO,YAAa,mBACboD,MAAO,YACPnB,WAAY,SACZoB,SAAU,QACVC,YAAY,EACZC,YAAY,EACZC,eAAe,GAEnB,CACIhE,KAAM,OACNC,WAAW,EACX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","file":"static/js/main.39f628e7.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nexport function isLoggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return token != null;\r\n}\r\n\r\nexport async function register(user) {\r\n    const result = await fetch(`/api/register`,  {\r\n        method: 'post',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\nexport async function login(user) {\r\n    try {\r\n        const result = await fetch(`/api/auth`,  {\r\n            method: 'post',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setToken(body.token);\r\n        return body;\r\n    } catch (e) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport async function getUser() {\r\n    const result = await fetch(`/api/user`, {\r\n        method: 'get',\r\n        headers: getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getName(username) {\r\n    const result = await fetch(`/api/user/check/${username}`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\n\r\nexport async function updateUser(user) {\r\n    const result = await fetch(`/api/user`, {\r\n        method: 'put',\r\n        body: JSON.stringify(user),\r\n        headers: getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteUser() {\r\n    const result = await fetch(`/api/user`, {\r\n        method: 'delete',\r\n        headers: getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllUsers(userId) {\r\n    const result = await fetch(`/api/user/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport function logout() {\r\n    console.log(\"Auth Token Cleared.\")\r\n    localStorage.clear();\r\n}\r\n\r\nexport function getToken() {\r\n    return localStorage.getItem('token');\r\n}\r\n\r\nexport function getUsername() {\r\n    const token = decodeToken();\r\n    if (!token) {\r\n        return null;\r\n    }\r\n    return token.user.username;\r\n}\r\n\r\nexport function getUserId() {\r\n    const token = decodeToken();\r\n    if (!token) {\r\n        return null;\r\n    }\r\n    return token.user.id;\r\n}\r\n\r\nexport function getHeader() {\r\n    return  {\r\n        'Content-Type': 'application/json',\r\n        Authorization: getToken()\r\n    }\r\n}\r\n\r\nfunction decodeToken() {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        return null;\r\n    }\r\n    return jwt.decode(token);\r\n}\r\n\r\nfunction setToken(token) {\r\n    localStorage.setItem('token', token);\r\n}","import * as auth from './user-services';\r\n\r\nexport async function createItem(item) {\r\n    const result = await fetch(`/api/item`, {\r\n        method: 'post',\r\n        body: JSON.stringify(item),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getDefaultItems() {\r\n    const result = await fetch(`/api/item`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCustomItems(userId) {\r\n    const result = await fetch(`/api/item/custom/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCharacterItems(characterId) {\r\n    const result = await fetch(`/api/item/${characterId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateItem(item) {\r\n    const result = await fetch(`/api/item/${item._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(item),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function addItem(characterId, item) {\r\n    const result = await fetch(`/api/item/add/${characterId}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(item),\r\n        header: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteCustomItem(itemId) {\r\n    const result = await fetch(`/api/item/${itemId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllItems(userId) {\r\n    const result = await fetch(`/api/item/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}","import * as auth from './user-services';\r\n\r\nexport async function createStatus(status) {\r\n    const result = await fetch(`/api/status`, {\r\n        method: 'post',\r\n        body: JSON.stringify(status),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getDefaultStatus() {\r\n    const result = await fetch(`/api/status`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCustomStatus(userId) {\r\n    const result = await fetch(`/api/status/custom/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCharacterStatus(characterId) {\r\n    const result = await fetch(`/api/status/${characterId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateStatus(status) {\r\n    const result = await fetch(`/api/status/${status._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(status),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function addStatus(characterId, status) {\r\n    const result = await fetch(`/api/status/add/${characterId}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(status),\r\n        header: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteCustomStatus(statusId) {\r\n    const result = await fetch(`/api/status/${statusId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllStatus(userId) {\r\n    const result = await fetch(`/api/status/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}","import * as auth from './user-services';\r\n\r\nexport async function createAction(action) {\r\n    const result = await fetch(`/api/action`, {\r\n        method: 'post',\r\n        body: JSON.stringify(action),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getDefaultActions() {\r\n    const result = await fetch(`/api/action`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCustomActions(userId) {\r\n    const result = await fetch(`/api/action/custom/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCharacterActions(characterId) {\r\n    const result = await fetch(`/api/action/${characterId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateAction(action) {\r\n    const result = await fetch(`/api/action/${action._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(action),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function addAction(characterId, action) {\r\n    const result = await fetch(`/api/action/add/${characterId}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(action),\r\n        header: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteCustomAction(actionId) {\r\n    const result = await fetch(`/api/action/${actionId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllActions(userId) {\r\n    const result = await fetch(`/api/action/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}","import { deleteCustomAction, getCharacterActions } from './action-services';\r\nimport * as auth from './user-services';\r\n\r\nexport async function createActor(actor) {\r\n    const result = await fetch(`/api/actor`, {\r\n        method: 'post',\r\n        body: JSON.stringify(actor),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getDefaultActors() {\r\n    const result = await fetch(`/api/actor`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCustomActors(userId) {\r\n    const result = await fetch(`/api/actor/custom/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCharacterActors(characterId) {\r\n    const result = await fetch(`/api/actor/${characterId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getGameActors(gameId) {\r\n    const result = await fetch(`/api/actor/game/${gameId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateActor(actor) {\r\n    const result = await fetch(`/api/actor/${actor._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(actor),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function submitActor(gameId, actor) {\r\n    const result = await fetch(`/api/actor/submit/${gameId}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(actor),\r\n        header: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteCustomActor(actorId) {\r\n    const result = await fetch(`/api/actor/${actorId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllActors(userId) {\r\n    const result = await fetch(`/api/actor/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n} \r\n\r\n","import * as auth from './user-services';\r\n\r\nexport function isInGame() {\r\n    const currGame = localStorage.getItem('game');\r\n    return currGame != null;\r\n}\r\n\r\nexport function getGameId () {\r\n    return localStorage.getItem('game');\r\n}\r\n\r\nexport function setGameId (gameId) {\r\n    localStorage.setItem('game', gameId);\r\n}\r\n\r\nexport function clearGameId() {\r\n    localStorage.removeItem('game');\r\n}\r\n\r\nexport function isHost() {\r\n    return localStorage.getItem('host');\r\n}\r\n\r\nexport function setIsHost(isHost) {\r\n    localStorage.setItem('host', isHost);\r\n}\r\n\r\nexport function clearIsHost () {\r\n    localStorage.removeItem('host');\r\n}\r\n\r\nexport async function createGame(game) {\r\n    const result = await fetch(`/api/game`, {\r\n        method: 'post',\r\n        body: JSON.stringify(game),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getGames(userId) {\r\n    const result = await fetch(`/api/game/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function joinGame(joinCode) {\r\n    const result = await fetch(`/api/game/join/${joinCode}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateGame(game) {\r\n    const result = await fetch(`/api/game/${game._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(game),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllGames(userId) {\r\n    const result = await fetch(`/api/game/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}","import React from 'react';\r\nimport { FaHourglassHalf } from 'react-icons/fa';\r\n\r\nconst Status = ({status}) => {\r\n    return (\r\n        <>\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-head d-flex col-sm-9\">\r\n                <FaHourglassHalf className=\"card-icon mr-2 col-sm-2\"/> \r\n                <span className=\"card-name\">  Status Effect Name: {status.name}</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Source: </span>\r\n                {status.isDefault ? \"Default\" : \"Custom\"}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Default Conditions: </span>\r\n                {status.defaultConditions.map((condition, index) => {\r\n                    return (\r\n                        <>\r\n                        <div className=\"\"></div>\r\n                        <div key={index} className=\"card-desc col-sm-6\">\r\n                            {condition}\r\n                        </div>\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Custom Conditions: </span>\r\n                {status.customConditions.map((condition, index) => {\r\n                    return (\r\n                        <div key={index} className=\"card-desc\">\r\n                            {condition}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            \r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\"> Duration: </span>\r\n                {status.duration}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card-desc py-1\">\r\n            <span className=\"label-item\">Description: </span>\r\n            <div className=\"px-3 py-1\">{status.description}</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Status\r\n\r\n","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTimesCircle } from 'react-icons/fa';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Status from './Status'; \r\nconst StatusWrapperList = ({status, dropStatus, deleteStatus, editStatus}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {status.map((status, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Status status={status.status} />\r\n\r\n                    <div>\r\n                        <div className=\"card-details\">\r\n                            <span className=\"label-item\">End Date: </span>\r\n                            {status.wrapper.endDate}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2\">\r\n                        <button onClick={() => deleteStatus(status.status)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \" +\r\n                            ((!status.status.isDefault && deleteStatus)? \"\":\"hidden-button\")}  >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \"+(editStatus? \"\":\"hidden-button\")}\r\n                            onClick={() => editStatus(status.status, status.wrapper)} >\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-secondary \"+(dropStatus? \"\":\"hidden-button\")}\r\n                            onClick={() => dropStatus(status.status, status.wrapper)} >\r\n                            Deselect <FaTimesCircle />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StatusWrapperList;","import React from 'react';\r\n\r\nconst StatusWrapperSearch = ({orderBy, orderDir, changeOrder, searchStatus, \r\n    showCustom, showDefault, showActive, showExpired, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchStatus form-control col-md-6 text-md-right\" aria-label=\"Search Status\"\r\n                onChange={e => searchStatus(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Status Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'duration' ? 'active' : '')}\r\n                        onClick={e => changeOrder('duration', orderDir)} href=\"#\">\r\n                        Duration\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'endDate' ? 'active' : '')}\r\n                        onClick={e => changeOrder('endDate', orderDir)} href=\"#\">\r\n                        Time Remaining\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault, showExpired, showActive)} href=\"#\">\r\n                        Default Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault, showExpired, showActive)} href=\"#\">\r\n                        Custom Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showExpired ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, !showExpired, showActive)} href=\"#\">\r\n                        Show Expired\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showActive ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showExpired, !showActive)} href=\"#\">\r\n                        Show Active\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusWrapperSearch;","import React from 'react';\r\nimport { FaQuidditch } from 'react-icons/fa';\r\n\r\nconst Item = ({item, wrapperFormat}) => {\r\n    return (\r\n        <>\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-head d-flex col-sm-9\">\r\n                <FaQuidditch className=\"card-icon mr-2 col-sm-2\"/> \r\n                <span className=\"card-name\"> Item Name: {item.name} </span>\r\n            </div>\r\n            \r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Source: </span>\r\n                {item.isDefault ? \"Default\" : \"Custom\"}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Weight: </span>\r\n                {item.weight}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Gold Value: </span>\r\n                {item.goldValue}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-5\">\r\n                <span className=\"label-item\">Action Type: </span>\r\n                {item.actionType}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n\r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Item Uses: </span>\r\n                {item.uses}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\"> Destroyed By Use: </span>\r\n                 {item.isConsumed ? \"Yes\" : \"No\"}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card-desc py-1\">\r\n            <span className=\"label-item\">Description: </span>\r\n            <div className=\"px-3 py-1\">{item.description}</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTimesCircle, FaHammer } from 'react-icons/fa';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Item from './Item';\r\n \r\nconst ItemWrapperList = ({items, dropItem, deleteItem, editItem, use}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {items.map((item, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n            <div className=\"card-info media-body\">\r\n                <Item item={item.item}/>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"card-details col-sm-3\">\r\n                        <span className=\"label-item\"> Is Equipped: </span>\r\n                        {item.wrapper.active? \"Yes\" : \"No\"}\r\n                    </div>\r\n\r\n                    <div className=\"card-details col-sm-4\">\r\n                        <span className=\"label-item\">Uses Left: </span>\r\n                        {item.wrapper.usesLeft}\r\n                    </div>\r\n\r\n                    <div className=\"card-details col-sm-4\">\r\n                        <span className=\"label-item\">Recovery Date: </span>\r\n                        {item.wrapper.recoveryDate}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2\">\r\n                    <button onClick={() => deleteItem(item.item)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \" +\r\n                        ((!item.item.isDefault && deleteItem)? \"\":\"hidden-button\")}  >\r\n                        Delete <FaTrashAlt />\r\n                    </button>\r\n                    <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \"+(editItem? \"\":\"hidden-button\")}\r\n                        onClick={() => editItem(item.item, item.wrapper)} >\r\n                        Edit <FaPencilAlt />\r\n                    </button>\r\n                    <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-secondary \"+(dropItem? \"\":\"hidden-button\")}\r\n                        onClick={() => dropItem(item.item, item.wrapper)} >\r\n                        Deselect  <FaTimesCircle />\r\n                    </button>\r\n                    <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-success \"+(use? \"\":\"hidden-button\")}\r\n                        onClick={() => use(item.item, item.wrapper)} >\r\n                        Use <FaHammer />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemWrapperList;","import React, {useState, useContext} from 'react';\r\n\r\nconst ItemWrapperSearch = ({orderBy, orderDir, changeOrder, searchItems, \r\n    showEquiped, showNotEquiped, showCustom, showDefault, showConsume, showNonConsume, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchAction form-control col-md-6 text-md-right\" aria-label=\"Search Actions\"\r\n                onChange={e => searchItems(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actionType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actionType', orderDir)} href=\"#\">\r\n                        Action Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'goldValue' ? 'active' : '')}\r\n                        onClick={e => changeOrder('goldValue', orderDir)} href=\"#\">\r\n                        Gold Value\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'weight' ? 'active' : '')}\r\n                        onClick={e => changeOrder('weight', orderDir)} href=\"#\">\r\n                        Weight\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showEquiped ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showConsume, showNonConsume, !showEquiped, showNotEquiped)} href=\"#\">\r\n                        Equiped\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showNotEquiped ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showConsume, showNonConsume, showEquiped, !showNotEquiped)} href=\"#\">\r\n                        Not Equiped\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault, showConsume, showNonConsume, showEquiped, showNotEquiped)} href=\"#\">\r\n                        Default Items\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault, showConsume, showNonConsume, showEquiped, showNotEquiped)} href=\"#\">\r\n                        Custom Items\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showConsume ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, !showConsume, showNonConsume, showEquiped, showNotEquiped)} href=\"#\">\r\n                        Consumables\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showNonConsume ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showConsume, !showNonConsume, showEquiped, showNotEquiped)} href=\"#\">\r\n                        Non-Consumables\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemWrapperSearch;","import React, {useState, useContext} from 'react';\r\nimport { FaMagic } from 'react-icons/fa';\r\n\r\nconst Action = ({action}) => {\r\n    return (\r\n        <>\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-head d-flex col-sm-9\">\r\n                <FaMagic className=\"card-icon mr-2 col-sm-2\"/> \r\n                <span className=\"card-name\"> Action Name: {action.name} </span>\r\n            </div>\r\n            \r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Source: </span>\r\n                {action.isDefault ? \"Default\" : \"Custom\"}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Class: </span>\r\n                {action.class}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Action Type: </span>\r\n                {action.actionType}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-5\">\r\n                <span className=\"label-item\">Roll Type: </span>\r\n                {action.rollType}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Needs Sight: </span>\r\n                {action.needsSight ? \"Yes\" : \"No\"}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Needs Sound: </span>\r\n                {action.needsSound ? \"Yes\" : \"No\"}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-5\">\r\n                <span className=\"label-item\">Needs Movement: </span>\r\n                {action.needsMovement ? \"Yes\" : \"No\"}\r\n            </div>\r\n\r\n            <div className=\"card-desc py-1\">\r\n                <span className=\"label-item\">Description: </span>\r\n                <div className=\"px-3 py-1\">{action.description}</div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Action;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTimesCircle, FaHammer } from 'react-icons/fa';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Action from './Action'\r\n \r\nconst ActionWrapperList = ({actions, dropAction, deleteAction, editAction, use}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {actions.map((action, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Action action={action.action} />\r\n                    \r\n                    <div className=\"mr-3\">\r\n                        <button onClick={() => deleteAction(action.action)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \" +\r\n                            ((!action.action.isDefault && deleteAction)? \"\":\"hidden-button\")}  >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \"+(editAction? \"\":\"hidden-button\")}\r\n                            onClick={() => editAction(action.action, action.wrapper)} >\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-secondary \"+(dropAction? \"\":\"hidden-button\")}\r\n                            onClick={() => dropAction(action.action, action.wrapper)} >\r\n                            Deselect <FaTimesCircle />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-success \"+(use? \"\":\"hidden-button\")}\r\n                            onClick={() => use(action.action, action.wrapper)} >\r\n                            Use Action <FaHammer />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActionWrapperList;","import React, {useState, useContext} from 'react';\r\n\r\nconst ActionSearch = ({orderBy, orderDir, changeOrder, searchActions, \r\n    showCustom, showDefault, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchAction form-control col-md-6 text-md-right\" aria-label=\"Search Actions\"\r\n                onChange={e => searchActions(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actionType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actionType', orderDir)} href=\"#\">\r\n                        Action Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'description' ? 'active' : '')}\r\n                        onClick={e => changeOrder('description', orderDir)} href=\"#\">\r\n                        Description\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault)} href=\"#\">\r\n                        Default Actions\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault)} href=\"#\">\r\n                        Custom Actions\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionSearch;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext} from 'react';\r\nimport { FaHorse } from 'react-icons/fa';\r\n\r\nconst Actor = ({actor, name}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-head d-flex col-sm-9\">\r\n                <FaHorse className=\"card-icon mr-2 col-sm-2\"/> \r\n                <span className=\"card-name\"> {name? \"Name: \" + name + \" -- \" : \"\"} Title: {actor.title}</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Source: </span>\r\n                {actor.isDefault ? \"Default\" : \"Custom\"}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row py-1\">\r\n            <div className=\"card-details col-sm-3\">\r\n                <span className=\"label-item\">Character Type: </span>\r\n                {actor.actorType}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-4\">\r\n                <span className=\"label-item\">Initiative Modifier: </span>\r\n                {actor.initMod}\r\n            </div>\r\n\r\n            <div className=\"card-details col-sm-5\">\r\n                <span className=\"label-item\">Initiative Default: </span>\r\n                {actor.initRaw}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card-desc py-1\">\r\n            <span className=\"label-item\">Description: </span>\r\n            <div className=\"px-3 py-1\">{actor.description}</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTimesCircle } from 'react-icons/fa';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Actor from './Actor';\r\n \r\nconst ActorWrapperList = ({actors, dropActor, deleteActor, editActor}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {actors.map((actor, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Actor actor={actor.actor} name={actor.wrapper.name}/>\r\n\r\n                    <div className=\"row py-1\">\r\n                        <div className=\"card-details col-sm-4\">\r\n                            <span className=\"label-item\">Initiative Score: </span>\r\n                        {actor.wrapper.initActual}\r\n                        </div>\r\n\r\n                        <div className=\"card-details col-sm-5\">\r\n                            <span className=\"label-item\">Is Hidden To Others: </span>\r\n                            {actor.wrapper.isHidden ? \"Yes\" : \"No\"}\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div className=\"p-2\">\r\n                        <button onClick={() => deleteActor(actor.actor)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \" +\r\n                            ((!actor.actor.isDefault && deleteActor)? \"\":\"hidden-button\")}  >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \"+(editActor? \"\":\"hidden-button\")}\r\n                            onClick={() => editActor(actor.actor, actor.wrapper)} >\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-secondary \"+(dropActor? \"\":\"hidden-button\")}\r\n                            onClick={() => dropActor(actor.actor, actor.wrapper)} >\r\n                            Deselect <FaTimesCircle />\r\n                        </button>\r\n                    </div>         \r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActorWrapperList;\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"card-info media-body\">\r\n\r\n            </div>","import React, {useState, useContext} from 'react';\r\n\r\nconst ActorWrapperSearch = ({orderBy, orderDir, changeOrder, searchActors, \r\n    showCustom, showDefault, showFriendly, showPlayer, showHostile, showNeutral, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchActor form-control col-md-6 text-md-right\" aria-label=\"Search Actors\"\r\n                onChange={e => searchActors(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'title' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('title', orderDir)} href=\"#\">\r\n                        Creature Title\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actorType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actorType', orderDir)} href=\"#\">\r\n                        Creature Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'initMod' ? 'active' : '')}\r\n                        onClick={e => changeOrder('initMod', orderDir)} href=\"#\">\r\n                        Initiative Modifier\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'initActual' ? 'active' : '')}\r\n                        onClick={e => changeOrder('initActual', orderDir)} href=\"#\">\r\n                        Initiative Score\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e => changeOrder('name', orderDir)} href=\"#\">\r\n                        Creature Name\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault, showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Default Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault, showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Custom Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showPlayer ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, !showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Player Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showFriendly ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, !showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Friendly Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showHostile ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, showPlayer, !showHostile, showNeutral)} href=\"#\">\r\n                        Hostile Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showNeutral ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, showPlayer, showHostile, !showNeutral)} href=\"#\">\r\n                        Neutral Characters\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorWrapperSearch;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router'\r\n\r\nconst LinkButton = (props) => {\r\n  const {\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <button\r\n      {...rest} // `children` is just another prop!\r\n      onClick={(event) => {\r\n        onClick && onClick(event)\r\n        history.push(to)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nLinkButton.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default withRouter(LinkButton)\r\n","import React, {useContext, useState} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport StatusWrapperList from './../../Shared/Status/StatusWrapperList';\r\nimport StatusWrapperSearch from './../../Shared/Status/StatusWrapperSearch';\r\nimport ItemWrapperList from './../../Shared/Items/ItemWrapperList';\r\nimport ItemWrapperSearch from './../../Shared/Items/ItemWrapperSearch';\r\nimport ActionWrapperList from './../../Player/Actions/ActionWrapperList';\r\nimport ActionWrapperSearch from './../../Player/Actions/ActionWrapperSearch';\r\nimport ActorWrapperList from './../../Player/Actors/ActorWrapperList';\r\nimport ActorWrapperSearch from './../../Player/Actors/ActorWrapperSearch';\r\nimport { FaHiking, FaTrashAlt, FaHourglassHalf, FaMagic, FaHorse, FaQuidditch, FaPencilAlt, FaTimes} from 'react-icons/fa';\r\nimport LinkButton from '../../Util/LinkButton';\r\nimport { find, findIndex, without } from 'lodash';\r\n \r\nconst CurrentCharacter = ({dropCharacter, deleteCharacter, editCharacter, characterData}) => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [character, setCharacter] = contextData.character.character;\r\n    const [currentActions, setCurrentActions] = contextData.character.actions;\r\n    const [currentItems, setCurrentItems] = contextData.character.items;\r\n    const [currentActors, setCurrentActors] = contextData.character.actors;\r\n    const [currentStatus, setCurrentStatus] = contextData.character.status;\r\n\r\n    const [itemQuery, setItemQuery] = useState('');\r\n    const [statusQuery, setStatusQuery] = useState('');\r\n    const [actorQuery, setActorQuery] = useState('');\r\n    const [actionQuery, setActionQuery] = useState('');\r\n    const itemSearch = (query) => {\r\n        setItemQuery(query);\r\n    }\r\n    const statusSearch = (query) => {\r\n        setStatusQuery(query);\r\n    }\r\n    const actorSearch = (query) => {\r\n        setActorQuery(query);\r\n    }\r\n    const actionSearch = (query) => {\r\n        setActionQuery(query);\r\n    }\r\n\r\n\r\n    const [itemOrderBy, setItemOrderBy] = useState('name');\r\n    const [itemOrderDir, setItemOrderDir] = useState('asc');\r\n    const [statusOrderBy, setStatusOrderBy] = useState('name');\r\n    const [statusOrderDir, setStatusOrderDir] = useState('asc');\r\n    const [actionOrderBy, setActorOrderBy] = useState('name');\r\n    const [actionOrderDir, setActorOrderDir] = useState('asc');\r\n    const [actorOrderBy, setActionOrderBy] = useState('title');\r\n    const [actorOrderDir, setActionOrderDir] = useState('asc');\r\n    const itemChangeOrder = (order, dir) => {\r\n        setItemOrderBy(order);\r\n        setItemOrderDir(dir);\r\n    }\r\n    const statusChangeOrder = (order, dir) => {\r\n        setStatusOrderBy(order);\r\n        setStatusOrderDir(dir);\r\n    }\r\n    const actionChangeOrder = (order, dir) => {\r\n        setActorOrderBy(order);\r\n        setActorOrderDir(dir);\r\n    }\r\n    const actorChangeOrder = (order, dir) => {\r\n        setActionOrderBy(order);\r\n        setActionOrderDir(dir);\r\n    }\r\n\r\n\r\n    const [actionShowCustom, setActionShowCustom] = useState(true);\r\n    const [actionShowDefault, setActionShowDefault] = useState(true);\r\n    const actionChangeShow = (showCustom, showDefault) => {\r\n        setActionShowCustom(showCustom);\r\n        setActionShowDefault(showDefault);\r\n    }\r\n    const [actorShowCustom, setActorShowCustom] = useState(true);\r\n    const [actorShowDefault, setActorShowDefault] = useState(true);\r\n    const [actorShowFriendly, setActorShowFriendly] = useState(true);\r\n    const [actorShowHostile, setActorShowHostile] = useState(true);\r\n    const [actorShowNeutral, setActorShowNeutral] = useState(true);\r\n    const [actorShowPlayer, setActorShowPlayer] = useState(true);\r\n    const actorChangeShow = (showCustom, showDefault,\r\n        showFriendly, showPlayer, showHostile, showNeutral) => {\r\n        setActorShowCustom(showCustom);\r\n        setActorShowDefault(showDefault);\r\n        setActorShowFriendly(showFriendly);\r\n        setActorShowPlayer(showPlayer);\r\n        setActorShowHostile(showHostile);\r\n        setActorShowNeutral(showNeutral);\r\n    }\r\n    const [itemShowCustom, setItemShowCustom] = useState(true);\r\n    const [itemShowDefault, setItemShowDefault] = useState(true);\r\n    const [itemShowConsume, setItemShowConsume] = useState(true);\r\n    const [itemShowNonConsume, setItemShowNonConsume] = useState(true);\r\n    const [itemShowEquiped, setItemShowEquiped] = useState(true);\r\n    const [itemShowNotEquiped, setItemShowNotEquiped] = useState(true);\r\n    const itemChangeShow = (showCustom, showDefault, showConsume, showNonConsume, showEquiped, showNotEquiped) => {\r\n        setItemShowCustom(showCustom);\r\n        setItemShowDefault(showDefault);\r\n        setItemShowConsume(showConsume);\r\n        setItemShowNonConsume(showNonConsume);\r\n        setItemShowEquiped(showEquiped);\r\n        setItemShowNotEquiped(showNotEquiped);\r\n    }\r\n    const [statusShowCustom, setStatusShowCustom] = useState(true);\r\n    const [statusShowDefault, setStatusShowDefault] = useState(true);\r\n    const [statusShowExpired, setStatusShowExpired] = useState(true);\r\n    const [statusShowActive, setStatusShowActive] = useState(true);\r\n    const statusChangeShow = (showCustom, showDefault, showExpired, showActive) => {\r\n        setStatusShowCustom(showCustom);\r\n        setStatusShowDefault(showDefault);\r\n        setStatusShowActive(showActive);\r\n        setStatusShowExpired(showExpired);\r\n    }\r\n    \r\n    let actionFilteredActions = [];\r\n    if(character) {\r\n        let actionOrder;\r\n        actionFilteredActions = character.actions.map(action => {\r\n            const combinedAction = {\r\n                action: find(currentActions, ['_id', action.actionId]),\r\n                wrapper: action\r\n            }\r\n            return combinedAction\r\n        });\r\n        if (actionOrderDir === 'asc') {\r\n            actionOrder = 1;\r\n        } else {\r\n            actionOrder = -1;\r\n        }\r\n        actionFilteredActions = actionFilteredActions.sort((a, b) => {\r\n            if (!a.action || !b.action) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.action[actionOrderBy].toLowerCase() <\r\n                b.action[actionOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * actionOrder;\r\n            } else {\r\n                return 1 * actionOrder;\r\n            }\r\n            }).filter(eachAction => {\r\n                if (!eachAction.action) {\r\n                    return false;\r\n                }\r\n                return ((actionShowCustom && !eachAction.action.isDefault) || \r\n                    (actionShowDefault && eachAction.action.isDefault))\r\n            }).filter(eachAction => {\r\n            return (\r\n                eachAction.action['name']\r\n                .toLowerCase()\r\n                .includes(actionQuery.toLowerCase()) ||\r\n                eachAction.action['actionType']\r\n                .toLowerCase()\r\n                .includes(actionQuery.toLowerCase()) ||\r\n                eachAction.action['description']\r\n                .toLowerCase()\r\n                .includes(actionQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    let statusFilteredStatus = [];\r\n    if(character) {\r\n        let statusOrder;\r\n        statusFilteredStatus = character.status.map(status => {\r\n            const combinedStatus = {\r\n                status: find(currentStatus, ['_id', status.statusId]),\r\n                wrapper: status\r\n            }\r\n            return combinedStatus\r\n        });\r\n        if (statusOrderDir === 'asc') {\r\n            statusOrder = 1;\r\n        } else {\r\n            statusOrder = -1;\r\n        }\r\n        statusFilteredStatus = statusFilteredStatus.sort((a, b) => {\r\n            if (!a.status || !b.status) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.status[statusOrderBy].toLowerCase() <\r\n                b.status[statusOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * statusOrder;\r\n            } else {\r\n                return 1 * statusOrder;\r\n            }\r\n            }).filter(eachStatus => {\r\n                if (!eachStatus.status) {\r\n                    return false;\r\n                }\r\n                return ((statusShowCustom && !eachStatus.status.isDefault) || \r\n                    (statusShowDefault && eachStatus.status.isDefault)) && (\r\n                    (statusShowExpired && eachStatus.wrapper.endDate >\r\n                        eachStatus.status.duration) ||\r\n                    (statusShowActive && eachStatus.wrapper.endDate < \r\n                        eachStatus.status.duration))\r\n            }).filter(eachStatus => {\r\n            return (\r\n                eachStatus.status['name']\r\n                .toLowerCase()\r\n                .includes(statusQuery.toLowerCase()) ||\r\n                eachStatus.status['duration']\r\n                .toLowerCase()\r\n                .includes(statusQuery.toLowerCase()) ||\r\n                eachStatus.wrapper['endDate']\r\n                .toLowerCase()\r\n                .includes(statusQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    let itemFilteredItems = [];\r\n    if(character) {\r\n        let itemOrder;\r\n        itemFilteredItems = character.items.map(item => {\r\n            const combinedItem = {\r\n                item: find(currentItems, ['_id', item.itemId]),\r\n                wrapper: item\r\n            }\r\n            return combinedItem\r\n        });\r\n        if (itemOrderDir === 'asc') {\r\n            itemOrder = 1;\r\n        } else {\r\n            itemOrder = -1;\r\n        }\r\n        itemFilteredItems = itemFilteredItems.sort((a, b) => {\r\n            if (!a.item || !b.item) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.item[itemOrderBy].toLowerCase() <\r\n                b.item[itemOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * itemOrder;\r\n            } else {\r\n                return 1 * itemOrder;\r\n            }\r\n            }).filter(eachItem => {\r\n                if (!eachItem.item) {\r\n                    return false;\r\n                }\r\n                return ((itemShowCustom && !eachItem.item.isDefault) || \r\n                    (itemShowDefault && eachItem.item.isDefault)) &&\r\n                    ((itemShowConsume && eachItem.item.isConsumed) ||\r\n                    (itemShowNonConsume && !eachItem.item.isConsumed)) &&\r\n                    ((itemShowEquiped && eachItem.wrapper.active) ||\r\n                    (itemShowNotEquiped && !eachItem.wrapper.active))\r\n            }).filter(eachItem => {\r\n            return (\r\n                eachItem.item['name']\r\n                .toLowerCase()\r\n                .includes(itemQuery.toLowerCase()) ||\r\n                eachItem.item['goldValue']\r\n                .toLowerCase()\r\n                .includes(itemQuery.toLowerCase()) ||\r\n                eachItem.item['weight']\r\n                .toLowerCase()\r\n                .includes(itemQuery.toLowerCase()) ||\r\n                eachItem.item['actionType']\r\n                .toLowerCase()\r\n                .includes(itemQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    let actorFilteredActors = [];\r\n    if(character) {\r\n        let actorOrder;\r\n        actorFilteredActors = character.actors.map(actor => {\r\n            const combinedActor = {\r\n                actor: find(currentActors, ['_id', actor.actorId]),\r\n                wrapper: actor\r\n            }\r\n            return combinedActor\r\n        });\r\n        if (actorOrderDir === 'asc') {\r\n            actorOrder = 1;\r\n        } else {\r\n            actorOrder = -1;\r\n        }\r\n        \r\n        actorFilteredActors = actorFilteredActors.sort((a, b) => {\r\n            if (!a.actor || !b.actor) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.actor[actorOrderBy].toLowerCase() <\r\n                b.actor[actorOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * actorOrder;\r\n            } else {\r\n                return 1 * actorOrder;\r\n            }\r\n            }).filter(eachActor => {\r\n                if (!eachActor.actor) {\r\n                    return false;\r\n                }\r\n                return ((actorShowCustom && !eachActor.actor.isDefault) || \r\n                    (actorShowDefault && eachActor.actor.isDefault)) && (\r\n                    (actorShowFriendly && eachActor.actor.actorType === \"Friendly\") ||\r\n                    (actorShowFriendly && eachActor.actor.actorType === \"Friendly\") ||\r\n                    (actorShowHostile && eachActor.actor.actorType === \"Enemy\") ||\r\n                    (actorShowHostile && eachActor.actor.actorType === \"LegendaryAction\") ||\r\n                    (actorShowHostile && eachActor.actor.actorType === \"LegendaryEnemy\") ||\r\n                    (actorShowHostile && eachActor.actor.actorType === \"Lair\") ||\r\n                    (actorShowNeutral && eachActor.actor.actorType === \"NPC\") ||\r\n                    (actorShowNeutral && eachActor.actor.actorType === \"Environment\") ||\r\n                    (actorShowPlayer && eachActor.actor.actorType === \"PC\") ||\r\n                    (actorShowPlayer && eachActor.actor.actorType === \"Pet\") ||\r\n                    (actorShowPlayer && eachActor.actor.actorType === \"Companion\"))\r\n            }).filter(eachActor => {\r\n            return (\r\n                eachActor.actor['title']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase()) ||\r\n                eachActor.actor['actorType']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase()) ||\r\n                eachActor.actor['initMod']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase()) ||\r\n                eachActor.actor['actionType']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase()) ||\r\n                eachActor.actor['initActual']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase()) ||\r\n                eachActor.actor['name']\r\n                .toLowerCase()\r\n                .includes(actorQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"card-item col media py-3\">\r\n        <div className=\"card-info media-body\">\r\n            <div className=\"card-head d-flex\">\r\n                <span className=\"card-name\">\r\n                    <FaHiking />ID: {characterData ? characterData._id: \"\"} -- Name: {characterData ? characterData.name: \"\"}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"card-desc\">\r\n                <span className=\"label-item\">description: </span>\r\n                {characterData ? characterData.description: \"\"}\r\n            </div>\r\n\r\n            <div className=\"card-details\">\r\n                <span className=\"label-item\">Character Class: </span>\r\n                {characterData ? characterData.characterClass: \"\"}\r\n            </div>\r\n\r\n            <div className=\"card-details\">\r\n                <span className=\"label-item\">Gold: </span>\r\n                {characterData ? characterData.gold: \"\"}\r\n            </div>\r\n\r\n            <div className=\"card-details\">\r\n                <span className=\"label-item\">Age: </span>\r\n                {characterData ? (characterData.age): \"\"}\r\n            </div>\r\n\r\n            <ActorWrapperSearch \r\n                orderBy={actorOrderBy}\r\n                orderDir={actorOrderDir}\r\n                changeOrder={actorChangeOrder}\r\n                searchActors={actorSearch}\r\n                showCustom={actorShowCustom}\r\n                showDefault={actorShowDefault}\r\n                showFriendly={actorShowFriendly}\r\n                showHostile={actorShowHostile}\r\n                showNeutral={actorShowNeutral}\r\n                showPlayer={actorShowPlayer}\r\n                changeShow={actorChangeShow}/>\r\n            <ActorWrapperList \r\n                actors={actorFilteredActors}/>\r\n            \r\n            <ActionWrapperSearch \r\n                orderBy={actionOrderBy}\r\n                orderDir={actionOrderDir}\r\n                changeOrder={actionChangeOrder}\r\n                searchActions={actionSearch}\r\n                changeShow={actionChangeShow}\r\n                showCustom={actionShowCustom}\r\n                showDefault={actionShowDefault}/>\r\n            <ActionWrapperList \r\n                actions={actionFilteredActions}/>\r\n\r\n            <ItemWrapperSearch \r\n                orderBy={itemOrderBy}\r\n                orderDir={itemOrderDir}\r\n                changeOrder={itemChangeOrder}\r\n                searchItems={itemSearch}\r\n                showCustom={itemShowCustom}\r\n                showDefault={itemShowDefault}\r\n                showConsume={itemShowConsume}\r\n                showNonConsume={itemShowNonConsume}\r\n                showEquiped={itemShowEquiped}\r\n                showNotEquiped={itemShowNotEquiped}\r\n                changeShow={itemChangeShow}/>\r\n            <ItemWrapperList \r\n                items={itemFilteredItems}/>\r\n\r\n            <StatusWrapperSearch \r\n                orderBy={statusOrderBy}\r\n                orderDir={statusOrderDir}\r\n                changeOrder={statusChangeOrder}\r\n                searchStatus={statusSearch}\r\n                showCustom={statusShowCustom}\r\n                showDefault={statusShowDefault}\r\n                showExpired={statusShowExpired}\r\n                showActive={statusShowActive}\r\n                changeShow={statusChangeShow}/>\r\n            <StatusWrapperList \r\n                status={statusFilteredStatus}/>\r\n            \r\n            <div className=\"mr-3\">\r\n                <button className=\"card-delete btn btn-sm btn-danger\" onClick={() => deleteCharacter(characterData)} >\r\n                    Delete <FaTrashAlt />\r\n                </button>\r\n                <button className=\"card-delete btn btn-sm btn-warning\" onClick={() => editCharacter(characterData)} >\r\n                    Edit <FaPencilAlt />\r\n                </button>\r\n                <button className=\"card-delete btn btn-sm btn-secondary\" onClick={() => dropCharacter(characterData)} >\r\n                    Deselect <FaTimes /> \r\n                </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div>\r\n            <LinkButton\r\n                to='/items'\r\n                className=\"card-delete btn btn-sm btn-danger\"\r\n                > <FaQuidditch /> Update Inventory\r\n            </LinkButton>\r\n            <LinkButton\r\n                className=\"card-delete btn btn-sm btn-warning\"\r\n                to='/actors'\r\n                > <FaHorse /> Update Creatures\r\n            </LinkButton>\r\n            <LinkButton\r\n                className=\"card-delete btn btn-sm btn-secondary\"\r\n                to='/actions'\r\n                > <FaMagic /> Update Actions\r\n            </LinkButton>\r\n            <LinkButton\r\n                className=\"card-delete btn btn-sm btn-secondary\"\r\n                to='/status'\r\n                > <FaHourglassHalf /> Update Status Effects\r\n            </LinkButton>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CurrentCharacter;","import CurrentCharacter from '../Components/Player/Characters/CurrentCharacter';\r\nimport * as auth from './user-services';\r\n\r\nexport function hasCurrCharacter() {\r\n    const currCharacter = localStorage.getItem('character');\r\n    return currCharacter != null;\r\n}\r\n\r\nexport function getCharId () {\r\n    return localStorage.getItem('character');\r\n}\r\n\r\nexport function setCharId (characterId) {\r\n    localStorage.setItem('character', characterId);\r\n}\r\n\r\nexport function clearCharacter () {\r\n    localStorage.removeItem('character');\r\n}\r\n\r\nexport async function createCharacter(character) {\r\n    const result = await fetch(`/api/character`, {\r\n        method: 'post',\r\n        body: JSON.stringify(character),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getCharacters(userId) {\r\n    const result = await fetch(`/api/character/${userId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function getGameCharacters(gameId) {\r\n    const result = await fetch(`/api/character/game/${gameId}`, {\r\n        method: 'get',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function updateCharacter(character) {\r\n    const result = await fetch(`/api/character/${character._id}`, {\r\n        method: 'put',\r\n        body: JSON.stringify(character),\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteCharacter(characterId) {\r\n    const result = await fetch(`/api/character/${characterId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}\r\n\r\nexport async function deleteAllCharacters(userId) {\r\n    const result = await fetch(`/api/character/all/${userId}`, {\r\n        method: 'delete',\r\n        headers: auth.getHeader()\r\n    });\r\n    const body = await result.json();\r\n    return body;\r\n}","import React, {useState, createContext, useEffect} from 'react';\r\nimport * as itemServices from './item-services';\r\nimport * as statusServices from './status-services';\r\nimport * as actorServices from './actor-services';\r\nimport * as actionServices from './action-services';\r\nimport * as userServices from './user-services';\r\nimport * as gameServices from './game-services';\r\nimport * as characterServices from './character-services';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [gameCharacters, setGameCharacters] = useState([]);\r\n    const [gameActors, setGameActors] = useState([]);\r\n    const [game, setGame] = useState();\r\n\r\n    const [charActions, setCharActions] = useState([]);\r\n    const [charStatus, setCharStatus] = useState([]);\r\n    const [charItems, setCharItems] = useState([]);\r\n    const [charActors, setCharActors] = useState([]);\r\n    const [character, setCharacter] = useState();\r\n\r\n    const [userActions, setUserActions] = useState([]);\r\n    const [userStatus, setUserStatus] = useState([]);\r\n    const [userItems, setUserItems] = useState([]);\r\n    const [userActors, setUserActors] = useState([]);\r\n    const [userCharacters, setUserCharacters] = useState([]);\r\n    const [userGames, setUserGames] = useState([]);\r\n    const [user, setUser] = useState();\r\n\r\n    const [defaultActions, setDefaultActions] = useState([]);\r\n    const [defaultStatus, setDefaultStatus] = useState([]);\r\n    const [defaultItems, setDefaultItems] = useState([]);\r\n    const [defaultActors, setDefaultActors] = useState([]);\r\n\r\n    const appData = { \r\n        game: {\r\n            characters: [gameCharacters, setGameCharacters],\r\n            actors: [gameActors, setGameActors], \r\n            game: [game, setGame]\r\n        },\r\n        character: {\r\n            actions: [charActions, setCharActions],\r\n            status: [charStatus, setCharStatus],\r\n            items: [charItems, setCharItems],\r\n            actors: [charActors, setCharActors],\r\n            character: [character, setCharacter]\r\n        }, \r\n        user: {\r\n            actions: [userActions, setUserActions],\r\n            status: [userStatus, setUserStatus],\r\n            items: [userItems, setUserItems],\r\n            actors: [userActors, setUserActors],\r\n            characters: [userCharacters, setUserCharacters],\r\n            games: [userGames, setUserGames],\r\n            user: [user, setUser]\r\n        },\r\n        default: {\r\n            actions: [defaultActions, setDefaultActions],\r\n            status: [defaultStatus, setDefaultStatus],\r\n            items: [defaultItems, setDefaultItems],\r\n            actors: [defaultActors, setDefaultActors]\r\n        }\r\n    }\r\n    return(\r\n        <AppContext.Provider value={[appData]}>      \r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}","export const userData = [\r\n    {\r\n        username: 'mach',\r\n        password: 'mach',\r\n        email: 'mach@hotmach.com'\r\n    },    {\r\n        username: 'kup',\r\n        password: 'kup',\r\n        email: 'kup@gkupmail.com'\r\n    },    {\r\n        username: 'doot',\r\n        password: 'doot',\r\n        email: 'doot@dootlook.com'\r\n    },\r\n]","export const gameData = [\r\n    {\r\n        hostId: '',\r\n        characterIds: [],\r\n        status: 'inactive',\r\n        gameTitle: 'The Last Star',\r\n        initTitle: '',\r\n        actors: [],\r\n        currentActor: '',\r\n        currentTime: '',\r\n        roundCounter: '',\r\n        currentInit: '',\r\n        joinCode: ''\r\n    },    {\r\n        hostId: '',\r\n        characterIds: [],\r\n        status: 'inactive',\r\n        gameTitle: 'The Black Raven Campaign',\r\n        initTitle: '',\r\n        actors: [],\r\n        currentActor: '',\r\n        currentTime: '',\r\n        roundCounter: '',\r\n        currentInit: '',\r\n        joinCode: ''\r\n    },    {\r\n        hostId: '',\r\n        characterIds: [],\r\n        status: 'deleted',\r\n        gameTitle: 'The Repository',\r\n        initTitle: '',\r\n        actors: [],\r\n        currentActor: '',\r\n        currentTime: '',\r\n        roundCounter: '',\r\n        currentInit: '',\r\n        joinCode: ''\r\n    }\r\n]","export const characterData = [\r\n    {\r\n        userId: '',\r\n        name: 'Mach',\r\n        username: 'Mach',\r\n        description: 'he has a wicked campaign',\r\n        items: [],\r\n        actions: [],\r\n        status: [],\r\n        actors: [],\r\n        characterClass: 'Fighter',\r\n        gold: '1000',\r\n        age: '20'\r\n    },     {\r\n        userId: '',\r\n        username: 'kup',\r\n        name: 'Al Harms',\r\n        description: 'That might not be his real name',\r\n        items: [],\r\n        actions: [],\r\n        status: [],\r\n        actors: [],\r\n        characterClass: 'Warlock',\r\n        gold: '1',\r\n        age: '5'\r\n    },    {\r\n        userId: '',\r\n        username: 'doot',\r\n        name: 'Kevin the Invincible',\r\n        description: 'gone but not forgotten',\r\n        items: [],\r\n        actions: [],\r\n        status: [],\r\n        actors: [],\r\n        characterClass: 'Ranger',\r\n        gold: '10000',\r\n        age: '1000'\r\n    }\r\n]","export const actorData = [\r\n    {\r\n        title: 'Mr. Jeeves',\r\n        isDefault: false,\r\n        description: 'A very dangerous butler',\r\n        initMod: '7',\r\n        initRaw:'0',\r\n        actorType: 'Ally'\r\n    },\r\n    {\r\n        title: 'Captain Mike',\r\n        isDefault: false,\r\n        description: 'A disgraced gaurd captain',\r\n        initMod: '2',\r\n        initRaw: '0',\r\n        actorType: 'PC'\r\n    },\r\n    {\r\n        title: 'Spot',\r\n        isDefault: false,\r\n        description: \"Mike's faithful dog\",\r\n        initMod: '3',\r\n        initRaw: '0',\r\n        actorType: 'PC'\r\n    },\r\n    {\r\n        title: 'Marvin',\r\n        isDefault: false,\r\n        description: 'The worlds worst wizard',\r\n        initMod: '-2',\r\n        initRaw: '0',\r\n        actorType: 'PC' \r\n    },\r\n    {\r\n        title: 'Speckles',\r\n        isDefault: false,\r\n        description: 'Marvins crow familiar',\r\n        initMod: '1',\r\n        initRaw: '0',\r\n        actorType: 0\r\n    },\r\n    {\r\n        title: 'Bookie',\r\n        isDefault: false,\r\n        description: 'Mavrins sentient, talking and strangely competent book',\r\n        initMod: '+10',\r\n        initRaw: '20',\r\n        actorType: 'PC'\r\n    },\r\n    {\r\n        title: 'Nester',\r\n        isDefault: false,\r\n        description: 'A legendary beastmaster ranger/druid with an unconventional wildshape',\r\n        initMod: '4',\r\n        initRaw: '0',\r\n        actorType: 'PC'\r\n    },\r\n    {\r\n        title: 'Mach',\r\n        isDefault: false,\r\n        description: 'a small, tamed dragon',\r\n        initMod: '1',\r\n        initRaw: '0',\r\n        actorType: 'Ally' \r\n    },\r\n    {\r\n        title: 'Doot',\r\n        isDefault: false,\r\n        description: 'a very smart birb',\r\n        initMod: '3',\r\n        initRaw: '0',\r\n        actorType: 'Ally'\r\n    },\r\n]\r\n\r\nexport const actorDefaultData = [\r\n    {\r\n        title: 'Goblin',\r\n        isDefault: true,\r\n        description: 'Cute little goblin. Kill it.',\r\n        initMod: '2',\r\n        initRaw: '0',\r\n        actorType: 'Enemy'\r\n    },    {\r\n        title: 'Bandit',\r\n        isDefault: true,\r\n        description: 'Nasty criminal',\r\n        initMod: '1',\r\n        initRaw: '0',\r\n        actorType: 'Enemy'\r\n    },    {\r\n        title: 'Bandit Captain',\r\n        isDefault: true,\r\n        description: 'The best of the worst',\r\n        initMod: '3',\r\n        initRaw: '0',\r\n        actorType: 'Enemy'\r\n    },    {\r\n        title: 'Adult Red Dragon',\r\n        isDefault: true,\r\n        description: 'A great starting encounter enemy',\r\n        initMod: '5',\r\n        initRaw: '0',\r\n        actorType: 'Boss'\r\n    },    {\r\n        title: 'Lich',\r\n        isDefault: true,\r\n        description: 'A veryyyy spooky skeleton',\r\n        initMod: '3',\r\n        initRaw: '0',\r\n        actorType: 'Boss'\r\n    },    {\r\n        title: 'Wolf',\r\n        isDefault: true,\r\n        description: 'Has very sharp fangs and no intention to be a good boy.',\r\n        initMod: '2',\r\n        initRaw: '0',\r\n        actorType: 'Enemy' \r\n    },    {\r\n        title: 'Dragon Lair',\r\n        isDefault: true,\r\n        description: 'You shouldnt be here...',\r\n        initMod: '0',\r\n        initRaw: '0',\r\n        actorType: 'Lair'\r\n    },    {\r\n        title: 'Volcano',\r\n        isDefault: true,\r\n        description: 'This area is geologically active! Look out!',\r\n        initMod: '0',\r\n        initRaw: '0',\r\n        actorType: 'Environment'\r\n    },    {\r\n        title: 'Tide',\r\n        isDefault: true,\r\n        description: 'Every round it rises a little and things get just a bit worse...',\r\n        initMod: '0',\r\n        initRaw: '0',\r\n        actorType: 'Enviroment'\r\n    },    {\r\n        title: 'Shop Keeper',\r\n        isDefault: true,\r\n        description: 'This is not the first time someone has tried to cause trouble in this persons shop',\r\n        initMod: '2',\r\n        initRaw: '0',\r\n        actorType: 'NPC'\r\n    },    {\r\n        title: 'City Gaurd',\r\n        isDefault: true,\r\n        description: 'A member of the notably competent local arm of the law.',\r\n        initMod: '3',\r\n        initRaw: '0',\r\n        actorType: 'NPC' \r\n    },\r\n]","export const actionData = [\r\n    {\r\n        name: 'Charge',\r\n        isDefault: false,\r\n        description: 'Charge them',\r\n        class: 'Martial',\r\n        actionType: 'Bonus',\r\n        rollType: 'Contest',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: true\r\n    }, \r\n    {\r\n        name: 'Trip',\r\n        isDefault: false,\r\n        description: 'Trip Someone',\r\n        class: 'Martial',\r\n        actionType: 'Attack',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Taunt',\r\n        isDefault: false,\r\n        description: 'Make fun of them',\r\n        class: 'All',\r\n        actionType: 'Free',\r\n        rollType: 'Contest',\r\n        needsSight: false,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    }, \r\n    {\r\n        name: 'Set Trap',\r\n        isDefault: false,\r\n        description: 'Set a trap there',\r\n        class: 'Artificer',\r\n        actionType: 'Object',\r\n        rollType: 'Skill',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false \r\n    }, \r\n    {\r\n        name: 'Pray',\r\n        isDefault: false,\r\n        description: 'pray to your god',\r\n        class: 'All',\r\n        actionType: 'Free',\r\n        rollType: 'Skill',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false \r\n    }, \r\n    {\r\n        name: 'Summon Patron',\r\n        isDefault: false,\r\n        description: 'Get that patron out here',\r\n        class: 'Warlock',\r\n        actionType: 'Free',\r\n        rollType: 'Skill',\r\n        needsSight: true,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    }, \r\n    {\r\n        name: 'Pole Arm Mastery',\r\n        isDefault: false,\r\n        description: 'Smack em as they get in range',\r\n        class: 'Martial',\r\n        actionType: 'Reaction',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    }, \r\n    {\r\n        name: 'Warcaster Cantrip',\r\n        isDefault: false,\r\n        description: 'Cast a cantrip for attack of opportunity',\r\n        class: 'Caster',\r\n        actionType: 'Reaction',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    }, \r\n    {\r\n        name: 'Magic Aura',\r\n        isDefault: false,\r\n        description: 'Icy magic wind freezes the people around you',\r\n        class: 'Caster',\r\n        actionType: 'Free',\r\n        rollType: 'Save',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n]\r\n\r\nexport const actionDefaultData = [\r\n    {\r\n        name: 'Move',\r\n        isDefault: true,\r\n        description: 'Travel your movement speed',\r\n        class: 'All',\r\n        actionType: 'Movement',\r\n        rollType: 'None',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: true\r\n    },\r\n    {\r\n        name: 'Unarmed Attack',\r\n        isDefault: true,\r\n        description: 'Barehanded punch',\r\n        class: 'All',\r\n        actionType: 'Attack',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Jump',\r\n        isDefault: true,\r\n        description: 'Jump a distance based on your STR',\r\n        class: 'All',\r\n        actionType: 'Movement',\r\n        rollType: 'Skill',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: true\r\n    },\r\n    {\r\n        name: 'Grappel',\r\n        isDefault: true,\r\n        description: 'Grab a creature',\r\n        class: 'All',\r\n        actionType: 'Attack',\r\n        rollType: 'Check',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Martial Weapon Attack',\r\n        isDefault: true,\r\n        description: 'Use a skilled weapon in an attack',\r\n        class: 'Martial',\r\n        actionType: 'Attack',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Cast Firebolt',\r\n        isDefault: true,\r\n        description: 'Cast a spell',\r\n        class: 'Caster',\r\n        actionType: 'Action',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Cast Fireball',\r\n        isDefault: true,\r\n        description: 'Kill your teammates',\r\n        class: 'Caster',\r\n        actionType: 'Action',\r\n        rollType: 'Save',\r\n        needsSight: true,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Rage',\r\n        isDefault: true,\r\n        description: 'Rage and become tough and stronk',\r\n        class: 'Barbarian',\r\n        actionType: 'Bonus',\r\n        rollType: 'None',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Smite',\r\n        isDefault: true,\r\n        description: 'SMITE!!!',\r\n        class: 'Paladin',\r\n        actionType: 'Free',\r\n        rollType: 'None',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Inspiration',\r\n        isDefault: true,\r\n        description: 'Sing a magic ditty',\r\n        class: 'Bard',\r\n        actionType: 'Bonus',\r\n        rollType: 'None',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Ritual Cast',\r\n        isDefault: true,\r\n        description: 'Cast a spell without using a slot',\r\n        class: 'Wizard',\r\n        actionType: 'Free',\r\n        rollType: 'Save',\r\n        needsSight: true,\r\n        needsSound: true,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Simple Weapon Attack',\r\n        isDefault: true,\r\n        description: 'Use a simple weapon',\r\n        class: 'All',\r\n        actionType: 'Attack',\r\n        rollType: 'Attack',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Dodge',\r\n        isDefault: true,\r\n        description: 'Be hard to hit',\r\n        class: 'All',\r\n        actionType: 'Action',\r\n        rollType: 'None',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Dodge',\r\n        isDefault: true,\r\n        description: 'Be hard to hit',\r\n        class: 'Rogue',\r\n        actionType: 'Bonus',\r\n        rollType: 'None',\r\n        needsSight: false,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Protection Style',\r\n        isDefault: true,\r\n        description: 'Shield an ally',\r\n        class: 'Fighter',\r\n        actionType: 'Reaction',\r\n        rollType: 'None',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n    {\r\n        name: 'Protection Style',\r\n        isDefault: true,\r\n        description: 'Sheild an ally',\r\n        class: 'Paladin',\r\n        actionType: 'Reaction',\r\n        rollType: 'None',\r\n        needsSight: true,\r\n        needsSound: false,\r\n        needsMovement: false\r\n    },\r\n]","export const statusData = [\r\n    {\r\n        name: 'Werewolf Curse I',\r\n        isDefault: false,\r\n        description: 'You are feeling some animalistic impulse. You are fine...probably.',\r\n        duration: '14400',\r\n        defaultConditions: [\"YourSkill\", \"YourSkill\", \"TheirSkill\"],\r\n        customConditions: '+2 Skill Checks Perception'\r\n    },     {\r\n        name: 'Werewolf Curse II',\r\n        isDefault: false,\r\n        description: 'Dont worry! You are going to be fine. Keep it together.',\r\n        duration: '144000',\r\n        defaultConditions: [\"YourAttack\", \"Health\", \"Movement\",\"Sight\"],\r\n        customConditions: [\r\n            '+2 Ability Scores STR', \r\n            'DEX -2 Ability Scores CHA', \r\n            'INT +10 To Movement'\r\n        ] \r\n    },    {\r\n        name: 'Werewolf Curse III',\r\n        isDefault: false,\r\n        description: 'Woof',\r\n        duration: '0',\r\n        defaultConditions: [\"Ability\",\"Hands\",\"Speech\",],\r\n        customConditions: [\r\n            '+2 Attack Rolls Unarmed Weapon Attacks',\r\n            '+3 Saving Throws CON, STR',\r\n            '-3 Saving Throws WIS, CHA, INT'\r\n        ]\r\n    },    {\r\n        name: 'Vampirism',\r\n        isDefault: false,\r\n        description: 'You are a vampire',\r\n        duration: '0',\r\n        defaultConditions: [\"Ability\",\"YourSkill\",\"YourSave\"],\r\n        customConditions: [\r\n            '+2 Saving Throws CHA',\r\n            'WIS -2 Armor Class When In Sunlight',\r\n            '-2 All Ability Scores When In Sunlight'\r\n        ]\r\n    },    {\r\n        name: 'Stubbed Toe',\r\n        isDefault: false,\r\n        description: 'ouch',\r\n        duration: '10',\r\n        defaultConditions: [\"Health\",\"YourSkill\",\"Movement\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Aura Buff',\r\n        isDefault: false,\r\n        description: 'filled with energizing energy',\r\n        duration: '1',\r\n        defaultConditions: [\"Armor\", \"YourAttack\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Shield of Faith',\r\n        isDefault: false,\r\n        description: 'surrounded by a holy aura',\r\n        duration: '10',\r\n        defaultConditions: [\"Armor\"],\r\n        customConditions: [\r\n            '+2 Armor Class '\r\n        ]\r\n    },    {\r\n        name: 'Holy Weapon',\r\n        isDefault: false,\r\n        description: 'Your weapon glows with holy light',\r\n        duration: '10',\r\n        defaultConditions: [\"YourAttack\", \"YourDamage\"],\r\n        customConditions: [\r\n            '+2 Attack Rolls '\r\n        ]\r\n    },    {\r\n        name: 'Empowered Attack',\r\n        isDefault: false,\r\n        description: 'Your next attack has been filled with energy',\r\n        duration: '1',\r\n        defaultConditions: [\"YourDamage\"],\r\n        customConditions: [\r\n            '+1 Attack Rolls '\r\n        ]\r\n    },\r\n]\r\n\r\nexport const statusDefaultData = [\r\n    {\r\n        name: 'Stunned',\r\n        isDefault: true,\r\n        description: 'you are stunned',\r\n        duration: '1',\r\n        defaultConditions: [\"Movement\",\"Action\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Grappeled',\r\n        isDefault: true,\r\n        description: 'Someone is grapping you',\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Silenced',\r\n        isDefault: true,\r\n        description: 'you cannot hear nor speak',\r\n        duration: '10',\r\n        defaultConditions: [\"Speech\"],\r\n        customConditions: []\r\n    },    {\r\n        name: \"Restrained\",\r\n        isDefault: true,\r\n        description: \"Your on the ground and all bound up.\",\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\",\"TheirAttack\",\"YourAttack\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Prone',\r\n        isDefault: true,\r\n        description: \"you are on the ground\",\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\",\"TheirAttack\",\"YourAttack\"],\r\n        customConditions: []\r\n    },    {\r\n        name: \"Half Cover\",\r\n        isDefault: true,\r\n        description: \"You are half protected behind something\",\r\n        duration: '0',\r\n        defaultConditions: [\"Armor\",\"Save\"],\r\n        customConditions: [\r\n            '+2 Armor Class',\r\n            '+2 Dice Checks'\r\n        ]\r\n    },    {\r\n        name: \"Full Cover\",\r\n        isDefault: true,\r\n        description: \"You are getting full protection from something\",\r\n        duration: '0',\r\n        defaultConditions: [\"Armor\",\"Save\"],\r\n        customConditions: [\r\n            '+5 Armor Class',\r\n            '+5 Dice Checks '\r\n        ]\r\n    },    {\r\n        name: \"Helped\",\r\n        isDefault: true,\r\n        description: 'someone is helping you do something',\r\n        duration: '1',\r\n        defaultConditions: [\"YourSkill\",\"Check\",\"YourAttack\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Difficult terrain',\r\n        isDefault: true,\r\n        description: \"you are standing in something that makes it difficult to move\",\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Exhaustion I',\r\n        isDefault: true,\r\n        description: \"You are slightly tired\",\r\n        duration: '0',\r\n        defaultConditions: [\"YourSkill\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Exhaustion III',\r\n        isDefault: true,\r\n        description: \"You are very tired\",\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Exhaustion II',\r\n        isDefault: true,\r\n        description: \"You are pretty tired\",\r\n        duration: '0',\r\n        defaultConditions: [\"YourAttack\",\"YourSave\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Exhaustion IV',\r\n        isDefault: true,\r\n        description: \"You are extremely tired\",\r\n        duration: '0',\r\n        defaultConditions: [\"Health\"],\r\n        customConditions: []\r\n    },    {\r\n        name: 'Exhaustion V',\r\n        isDefault: true,\r\n        description: \"You are deathly tired\",\r\n        duration: '0',\r\n        defaultConditions: [\"Movement\"],\r\n        customConditions: []\r\n    },\r\n]","export const itemData = [\r\n    {\r\n        name: 'Phantom Phist',\r\n        isDefault: false,\r\n        description: 'you can now ghost punch',\r\n        goldValue: '1000',\r\n        weight: '5',\r\n        actionType: 'Attack',\r\n        isConsumed: false,\r\n        uses: '0' \r\n    },\r\n    {\r\n        name: 'Hand Wrap',\r\n        isDefault: false,\r\n        description: '+1 punches',\r\n        goldValue: '100',\r\n        weight: '.5',\r\n        actionType: 'Attack',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Last Star Mask',\r\n        isDefault: false,\r\n        description: 'Change into a huminoid of another race',\r\n        goldValue: '100000',\r\n        weight: '2',\r\n        actionType: 'Action',\r\n        isConsumed: false,\r\n        uses: '2'\r\n    },\r\n    {\r\n        name: 'Last Star Ring',\r\n        isDefault: false,\r\n        description: 'Make many snek. Become snek.',\r\n        goldValue: '10000000',\r\n        weight: '.1',\r\n        actionType: 'Object',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Last Star Gauntlets',\r\n        isDefault: false,\r\n        description: 'Cast shatter or fireball',\r\n        goldValue: '100000',\r\n        weight: '3',\r\n        actionType: 'Action',\r\n        isConsumed: false,\r\n        uses: '3'\r\n    },\r\n    {\r\n        name: 'Magic Pizza',\r\n        isDefault: false,\r\n        description: 'What it says on the tin',\r\n        goldValue: '50',\r\n        weight: '5',\r\n        actionType: 'Bonus',\r\n        isConsumed: true,\r\n        uses: '3'\r\n    },\r\n    {\r\n        name: 'Mana Potion',\r\n        isDefault: false,\r\n        description: 'Restores a first or second level spell slot',\r\n        goldValue: '200',\r\n        weight: '1',\r\n        actionType: 'Bonus',\r\n        isConsumed: true,\r\n        uses: '1'\r\n    },\r\n    {\r\n        name: 'Ring of wishes',\r\n        isDefault: false,\r\n        description: 'Grants 3 wishes',\r\n        goldValue: '1000000',\r\n        weight: '.1',\r\n        actionType: 'Action',\r\n        isConsumed: true,\r\n        uses: '3'\r\n    },\r\n    {\r\n        name: 'Staff of lifestealing',\r\n        isDefault: false,\r\n        description: 'Heals for 1d4 health on a successful melee attack',\r\n        goldValue: '2000',\r\n        weight: '3',\r\n        actionType: 'Attack',\r\n        isConsumed: false,\r\n        uses: '5'\r\n    },\r\n]\r\n\r\nexport const itemDefaultData = [\r\n    {\r\n        name: 'Health Potion',\r\n        isDefault: true,\r\n        description: 'heals 2d4+2',\r\n        goldValue: '50',\r\n        weight: '1',\r\n        actionType: 'Bonus',\r\n        isConsumed: true,\r\n        uses: '1'\r\n    },\r\n    {\r\n        name: 'Greater Health Potion',\r\n        isDefault: true,\r\n        description: 'heals 4d4+4',\r\n        goldValue: '500',\r\n        weight: '2',\r\n        actionType: 'Bonus',\r\n        isConsumed: true,\r\n        uses: '1'\r\n    },\r\n    {\r\n        name: 'Superior Health Potion',\r\n        isDefault: true,\r\n        description: 'heals 8d4+8',\r\n        goldValue: '2500',\r\n        weight: '3',\r\n        actionType: 'Bonus',\r\n        isConsumed: true,\r\n        uses: '1'\r\n    },\r\n    {\r\n        name: 'Fireball Necklace',\r\n        isDefault: true,\r\n        description: 'Casts fireball',\r\n        goldValue: '5000',\r\n        weight: '.2',\r\n        actionType: 'Action',\r\n        isConsumed: true,\r\n        uses: '6'\r\n    },\r\n    {\r\n        name: 'Prayer Beads',\r\n        isDefault: true,\r\n        description: 'An assortment of cleric spells',\r\n        goldValue: '1000',\r\n        weight: '1',\r\n        actionType: 'Action',\r\n        isConsumed: false,\r\n        uses: '6'\r\n    },\r\n    {\r\n        name: 'Sword of Sharpness',\r\n        isDefault: true,\r\n        description: 'A pretty good sword, +1',\r\n        goldValue: '1000',\r\n        weight: '5',\r\n        actionType: 'Attack',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Sword of Very Sharpness',\r\n        isDefault: true,\r\n        description: 'A pretty darn good sword, +2',\r\n        goldValue: '50000',\r\n        weight: '5',\r\n        actionType: 'Attack',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Bag of Holding',\r\n        isDefault: true,\r\n        description: 'Holds a lot more than you think it could. Be careful with what you put in it.',\r\n        goldValue: '1000',\r\n        weight: '5',\r\n        actionType: 'Object',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Rod of the Pact Keeper',\r\n        isDefault: true,\r\n        description: 'This rod makes your patron happy.',\r\n        goldValue: '1000',\r\n        weight: '2',\r\n        actionType: 'None',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n    {\r\n        name: 'Magic Plate Armor',\r\n        isDefault: true,\r\n        description: '+1 plate armor',\r\n        goldValue: '5000',\r\n        weight: '20',\r\n        actionType: 'None',\r\n        isConsumed: false,\r\n        uses: '0'\r\n    },\r\n]","import React, {useContext} from 'react';\r\nimport {AppContext} from '../Services/AppContext';\r\nimport * as userServices from './../Services/user-services';\r\nimport * as characterServices from './../Services/character-services';\r\nimport * as gameServices from './../Services/game-services';\r\nimport * as itemServices from './../Services/item-services';\r\nimport * as actorServices from './../Services/actor-services';\r\nimport * as actionServices from './../Services/action-services';\r\nimport * as statusServices from './../Services/status-services';\r\nimport {userData} from './../data/user-data';\r\nimport {gameData} from './../data/game-data';\r\nimport {characterData} from './../data/character-data';\r\nimport {actorData, actorDefaultData} from './../data/actor-data';\r\nimport {actionData, actionDefaultData} from './../data/action-data';\r\nimport {statusData, statusDefaultData} from './../data/status-data';\r\nimport {itemData, itemDefaultData} from './../data/item-data';\r\n\r\nconst Home = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [userActions, setUserActions] = contextData.user.actions;\r\n    const [userStatus, setUserStatus] = contextData.user.status;\r\n    const [userItems, setUserItems] = contextData.user.items;\r\n    const [userActors, setUserActors] = contextData.user.actors;\r\n    const [userCharacters, setUserCharacters] = contextData.user.characters;\r\n    const [userGames, setUserGames] = contextData.user.games;\r\n    const [user, setUser] = contextData.user.user;\r\n\r\n    const [defaultActions, setDefaultActions] = contextData.default.actions;\r\n    const [defaultStatus, setDefaultStatus] = contextData.default.status;\r\n    const [defaultActors, setDefaultActors] = contextData.default.actors;\r\n    const [defaultItems, setDefaultItems] = contextData.default.items;\r\n\r\n    const resetUsers = async () => {\r\n        await userServices.deleteAllUsers(userServices.getUserId());\r\n        await userServices.deleteUser(userServices.getUserId());\r\n    }\r\n    const resetGames = async () => {\r\n        await gameServices.deleteAllGames(userServices.getUserId());\r\n    }\r\n    const resetCharacters = async () => {\r\n        await characterServices.deleteAllCharacters(userServices.getUserId());\r\n    }\r\n    const resetItems = async () => {\r\n        await itemServices.deleteAllItems(userServices.getUserId());\r\n    }\r\n    const resetStatus = async () => {\r\n        await statusServices.deleteAllStatus(userServices.getUserId());\r\n    }\r\n    const resetActors = async () => {\r\n        await actorServices.deleteAllActors(userServices.getUserId());\r\n    }\r\n    const resetActions = async () => {\r\n        await actionServices.deleteAllActions(userServices.getUserId());\r\n    }\r\n\r\n    const populateUser = async () => {\r\n        for (let i = 0; i < 3; i++) {\r\n            const newUser = await userServices.register(userData[i]);\r\n            userData[i] = newUser.user;\r\n        }\r\n        console.log(userData);\r\n    }\r\n\r\n    const populate = async () => {\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                const newItem = await itemServices.createItem(itemData[j+i*3])\r\n                itemData[j+i*3] =  newItem.item;\r\n            }\r\n            console.log(itemData);\r\n\r\n            for (let j = 0; j < 3; j++) {\r\n                const newActor = await actorServices.createActor(actorData[j+i*3]);\r\n                actorData[j+i*3] = newActor.actor;\r\n            }\r\n            console.log(actorData);\r\n\r\n            for (let j = 0; j < 3; j++) {\r\n                const newAction = await actionServices.createAction(actionData[j+i*3]);\r\n                actionData[j+i*3] = newAction.action;\r\n            }\r\n            console.log(actionData);\r\n\r\n            for (let j = 0; j < 3; j++) {\r\n                const newStatus = await statusServices.createStatus(statusData[j+i*3]);\r\n                statusData[j+i*3] = newStatus.status;\r\n            }\r\n            console.log(statusData);\r\n\r\n            characterData[i].userId = userData[i]._id;\r\n            const newCharacter = await characterServices.createCharacter(characterData[i]);\r\n            characterData[i] = newCharacter.character;\r\n            console.log(characterData);\r\n\r\n            gameData[i].userId = userData[i]._id;\r\n            const newGame = await gameServices.createGame(gameData[i]);\r\n            gameData[i] = newGame.game;\r\n            \r\n            console.log(gameData);\r\n        }\r\n    }\r\n\r\n    const update = async () => {\r\n        for (let i = 0; i < 3; i++) {\r\n            const index = i*3;\r\n            const index1 = i*3+1;\r\n            const index2 = 1*3+2;\r\n            userData[i].itemIds = [\r\n                itemData[index]._id,\r\n                itemData[index1]._id,\r\n                itemData[index2]._id\r\n            ];\r\n            userData[i].actionIds = [\r\n                actionData[index]._id,\r\n                actionData[index1]._id,\r\n                actionData[index2]._id\r\n            ];\r\n            userData[i].actorIds = [\r\n                actorData[index]._id,\r\n                actorData[index1]._id,\r\n                actorData[index2]._id\r\n            ];\r\n            userData[i].statusIds = [\r\n                statusData[index]._id,\r\n                statusData[index1]._id,\r\n                statusData[index2]._id\r\n            ];\r\n            userData[i].characterIds = [characterData[i]._id];\r\n            userData[i].gameIds = [gameData[i]._id]\r\n            userServices.updateUser(userData[i]);\r\n        }\r\n        userServices.updateUser(user);\r\n\r\n    }\r\n\r\n    const resetAll = () => {\r\n        resetCharacters();\r\n        resetGames();\r\n        resetActions();\r\n        resetActors();\r\n        resetItems();\r\n        resetStatus();\r\n        resetUsers();\r\n    }\r\n\r\n    const populateDefault = async () => {\r\n        for (let item of itemDefaultData) {\r\n            await itemServices.createItem(item);\r\n        }\r\n        for (let actor of actorDefaultData) {\r\n            await actorServices.createActor(actor);\r\n        }\r\n        for (let action of actionDefaultData) {\r\n            await actionServices.createAction(action);\r\n        }\r\n        for (let status of statusDefaultData) {\r\n            await statusServices.createStatus(status);\r\n        }\r\n    }\r\n\r\n    const initialize = async () =>{\r\n        await populateUser();\r\n        await populate();\r\n        await update();\r\n    }\r\n\r\n    const prod = async () => {\r\n        await populateDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Home Page</h1>\r\n\r\n            <p>\r\n                Basic Greeting\r\n\r\n                Pellentesque habitant morbi tristique senectus et netus et. Dictum varius duis at consectetur lorem.\r\n                Posuere lorem ipsum dolor sit. Nisl suscipit adipiscing bibendum est ultricies integer.\r\n                Eu non diam phasellus vestibulum lorem sed. Amet massa vitae tortor condimentum lacinia quis vel.\r\n                Lacus viverra vitae congue eu consequat ac felis donec. Ultrices dui sapien eget mi proin sed libero.\r\n                Nunc consequat interdum varius sit amet mattis vulputate enim.\r\n                Accumsan lacus vel facilisis volutpat est velit egestas dui id. Gravida cum sociis natoque penatibus et magnis dis parturient montes.\r\n            </p>\r\n\r\n            <h3>How This Site Works:</h3>\r\n\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </p>\r\n\r\n            <p>\r\n                Cras tincidunt lobortis feugiat vivamus at augue eget. Felis imperdiet proin fermentum leo vel orci porta. \r\n                Etiam tempor orci eu lobortis elementum nibh tellus molestie. Fusce id velit ut tortor. Volutpat consequat mauris nunc congue nisi vitae suscipit. \r\n                Leo in vitae turpis massa sed. Velit laoreet id donec ultrices tincidunt arcu non sodales neque. \r\n                Fames ac turpis egestas maecenas pharetra convallis posuere morbi leo. Ut sem nulla pharetra diam sit. Id nibh tortor id aliquet lectus proin. \r\n                Eget nulla facilisi etiam dignissim diam quis enim. Sit amet nulla facilisi morbi tempus iaculis urna id volutpat.\r\n            </p>\r\n\r\n            <div className={userServices.getUsername() === 'admin' ? \"\" : \"hidden-list\"}>\r\n                <button className=\"btn btn-secondary\" onClick={prod}>Set Production Data</button>\r\n                <button className=\"btn btn-warning\" onClick={initialize}>Set Test Data</button>\r\n                <button className=\"btn btn-danger\" onClick={resetAll}>Clear Database</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <h1>Frequently Asked Questions:</h1>\r\n\r\n            <h3>Question 1:</h3>\r\n            <p>\r\n            Pellentesque habitant morbi tristique senectus et netus et. Dictum varius duis at consectetur lorem.\r\n            Posuere lorem ipsum dolor sit. Nisl suscipit adipiscing bibendum est ultricies integer.\r\n            </p>\r\n\r\n            <h3>Question 2:</h3>\r\n            <p>\r\n            Eu non diam phasellus vestibulum lorem sed. Amet massa vitae tortor condimentum lacinia quis vel.\r\n            Lacus viverra vitae congue eu consequat ac felis donec. Ultrices dui sapien eget mi proin sed libero.\r\n            </p>\r\n\r\n            <h3>Question 3:</h3>\r\n            <p>\r\n            Nunc consequat interdum varius sit amet mattis vulputate enim.\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            </p>\r\n\r\n            <h3>Question 4:</h3>\r\n            <p>\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            </p>\r\n\r\n            <h3>Question 5:</h3>\r\n            <p>\r\n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            Cras tincidunt lobortis feugiat vivamus at augue eget. Felis imperdiet proin fermentum leo vel orci porta. \r\n            </p>\r\n\r\n            <h3>Question 6:</h3>\r\n            <p>\r\n            Etiam tempor orci eu lobortis elementum nibh tellus molestie. Fusce id velit ut tortor. Volutpat consequat mauris nunc congue nisi vitae suscipit. \r\n            Leo in vitae turpis massa sed. Velit laoreet id donec ultrices tincidunt arcu non sodales neque. \r\n            </p>\r\n\r\n            <h3>Question 7:</h3>\r\n            <p>\r\n            Fames ac turpis egestas maecenas pharetra convallis posuere morbi leo. Ut sem nulla pharetra diam sit. Id nibh tortor id aliquet lectus proin. \r\n            Eget nulla facilisi etiam dignissim diam quis enim. Sit amet nulla facilisi morbi tempus iaculis urna id volutpat.\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useContext} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport * as userServices from '../../../Services/user-services';\r\nimport LinkButton from '../../Util/LinkButton';\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n\r\n    const [user, setUser] = useContext(AppContext)[0].user.user;\r\n\r\n\r\n    const updateUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const updatePassConfirm = (e) => {\r\n        setPassConfirm(e.target.value);\r\n    }\r\n\r\n    const submitUser = async (e) => {\r\n        e.preventDefault();\r\n        const regBody = await userServices.register({\r\n            username: username,\r\n            email: \"\",\r\n            password: password\r\n        });\r\n        const loginBody = await userServices.login({\r\n            username: username,\r\n            password: password\r\n        })\r\n        console.log(\"New User Registered: \", loginBody);\r\n        setUser(loginBody.user);\r\n    }\r\n\r\n    return (\r\n        <div className={'card textcenter mt-3'}>\r\n            <div className=\"card-addheading card-header bg-primary text-white\">\r\n                Register:\r\n            </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate onSubmit={submitUser}>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"username\" readOnly>\r\n                    Username:\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input className=\"form-control\" placeholder=\"Username\" \r\n                        type='text' name='username' value={username} onChange={updateUsername}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"password\" readOnly>\r\n                    Password:\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input className=\"form-control\" placeholder=\"Password\" \r\n                        type='password' name='password' value={password} onChange={updatePassword}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"confirm\" readOnly>\r\n                    Password:\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input className=\"form-control\" placeholder=\"confirm\" \r\n                        type='password' name='confirm' value={passConfirm} onChange={updatePassConfirm}/>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <div>\r\n                    <LinkButton\r\n                        className=\"btn btn-primary\"\r\n                        to='/'\r\n                        onClick={submitUser}\r\n                        > Register As New User\r\n                    </LinkButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React, {useState, useContext} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport * as userServices from '../../../Services/user-services';\r\nimport * as gameServices from '../../../Services/game-services';\r\nimport * as characterServices from '../../../Services/character-services';\r\nimport * as itemServices from '../../../Services/item-services';\r\nimport * as actorServices from '../../../Services/actor-services';\r\nimport * as actionServices from '../../../Services/action-services';\r\nimport * as statusServices from '../../../Services/status-services';\r\nimport LinkButton from '../../Util/LinkButton';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n\r\n    const contextData = useContext(AppContext)[0];\r\n\r\n    const [userActions, setUserActions] = contextData.user.actions;\r\n    const [userStatus, setUserStatus] = contextData.user.status;\r\n    const [userItems, setUserItems] = contextData.user.items;\r\n    const [userActors, setUserActors] = contextData.user.actors;\r\n    const [userCharacters, setUserCharacters] = contextData.user.characters;\r\n    const [userGames, setUserGames] = contextData.user.games;\r\n    const [user, setUser] = contextData.user.user;\r\n\r\n    const updateUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const submitUser = async (e) => {\r\n        e.preventDefault();\r\n        let loginBody = null;\r\n        if (password.length > 0 && username.length > 0) {\r\n            loginBody = await userServices.login({\r\n                username: username,\r\n                password: password\r\n            })\r\n        }\r\n        if (loginBody) {\r\n            setLoginFailed(false);\r\n            console.log(\"User Logged In: \", loginBody);\r\n            setUser(loginBody.user);\r\n            setUserActions( (await actionServices.getCustomActions(userServices.getUserId())).actions );\r\n            setUserActors( (await actorServices.getCustomActors(userServices.getUserId())).actors );\r\n            setUserCharacters( (await characterServices.getCharacters(userServices.getUserId())).characters );\r\n            setUserItems( (await itemServices.getCustomItems(userServices.getUserId())).items );\r\n            setUserStatus( (await statusServices.getCustomStatus(userServices.getUserId())).status );\r\n            setUserGames( (await gameServices.getGames(userServices.getUserId())).actions );\r\n        } else {\r\n            setLoginFailed(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'card textcenter mt-3'}>\r\n            <div className=\"card-addheading card-header bg-primary text-white\">\r\n                Login:\r\n            </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate onSubmit={submitUser}>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"username\" readOnly>\r\n                    Username:\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input className=\"form-control\" placeholder=\"Username\" \r\n                        type='text' name='username' value={username} onChange={updateUsername}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"password\" readOnly>\r\n                    Password:\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input className=\"form-control\" placeholder=\"Password\" \r\n                        type='password' name='password' value={password} onChange={updatePassword}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary\" onClick={submitUser}>\r\n                    Sign In\r\n                </button>\r\n                <LinkButton\r\n                    className=\"btn btn-primary\"\r\n                    to='/register'> \r\n                    I Don't Have An Account\r\n                </LinkButton>\r\n            </form>\r\n        </div>\r\n            <div className={loginFailed ? \"\" : \"hidden-button\"}>\r\n                Login Attempt Failed\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <>\r\n            <h1>404 - Page Not Found</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as userServices from '../../Services/user-services';\r\nimport * as gameServices from '../../Services/game-services';\r\nimport * as characterServices from '../../Services/character-services';\r\nimport LinkButton from '../Util/LinkButton';\r\nimport {AppContext} from '../../Services/AppContext';\r\nimport {FaDiceD20, FaHiking, FaLayerGroup, FaQuidditch, FaHorse, \r\n    FaMagic, FaHourglassHalf, FaInfoCircle, FaDoorOpen, FaHome} from 'react-icons/fa';\r\n\r\nconst NavBar = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n\r\n    const [gameCharacters, setGameCharacters] = contextData.game.characters;\r\n    const [gameActors, setGameActors] = contextData.game.actors;\r\n    const [game, setGame] = contextData.game.game;\r\n\r\n    const [charActions, setCharActions] = contextData.character.actions;\r\n    const [charStatus, setCharStatus] = contextData.character.status;\r\n    const [charItems, setCharItems] = contextData.character.items;\r\n    const [charActors, setCharActors] = contextData.character.actors;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userActions, setUserActions] = contextData.user.actions;\r\n    const [userStatus, setUserStatus] = contextData.user.status;\r\n    const [userItems, setUserItems] = contextData.user.items;\r\n    const [userActors, setUserActors] = contextData.user.actors;\r\n    const [userCharacters, setUserCharacters] = contextData.user.characters;\r\n    const [userGames, setUserGames] = contextData.user.games;\r\n    const [user, setUser] = contextData.user.user;\r\n\r\n    const signOut = () => {\r\n        userServices.logout();\r\n        setGameCharacters([]);\r\n        setGameActors([]);\r\n        setGame();\r\n        \r\n        setCharActions([]);\r\n        setCharStatus([]);\r\n        setCharItems([]);\r\n        setCharActors([]);\r\n        setCharacter();\r\n\r\n        setUserActions([]);\r\n        setUserStatus([]);\r\n        setUserItems([]);\r\n        setUserActors([]);\r\n        setUserCharacters([]);\r\n        setUserGames([]);\r\n        setUser();\r\n        gameServices.clearGameId();\r\n        gameServices.clearIsHost();\r\n        characterServices.clearCharacter();\r\n    }\r\n\r\n    const getNavBar = () => {\r\n        if (userServices.isLoggedIn()) {\r\n            return (\r\n                <>\r\n                <nav>\r\n                    <ul>\r\n                        {/* <li>\r\n                            <Link to=\"/games\">Games<FaDiceD20 /></Link>\r\n                        </li> */}\r\n                        <li>\r\n                            <Link to=\"/characters\">Characters    <FaHiking /></Link>\r\n                        </li>\r\n                        <li>\r\n                            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"collectionList\" readOnly>\r\n                            </label>\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"aria-expanded=\"false\"> User Collections    <FaLayerGroup/> <span className=\"caret\" />\r\n                            </button>\r\n                            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                                <LinkButton\r\n                                    to='/items'\r\n                                    className=\"sort-by dropdown-item \"\r\n                                    > Update Inventory    <FaQuidditch />\r\n                                </LinkButton>\r\n                                <LinkButton\r\n                                    className=\"sort-by dropdown-item \"\r\n                                    to='/actors'\r\n                                    > Update Creatures    <FaHorse />\r\n                                </LinkButton>\r\n                                <LinkButton\r\n                                    className=\"sort-by dropdown-item \"\r\n                                    to='/actions'\r\n                                    > Update Actions    <FaMagic />\r\n                                </LinkButton>\r\n                                <LinkButton\r\n                                    className=\"sort-by dropdown-item\"\r\n                                    to='/status'\r\n                                    > Update Status Effects    <FaHourglassHalf />\r\n                                </LinkButton>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/\">Home    <FaHome /></Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/about\">FAQ's    <FaInfoCircle/> </Link>\r\n                        </li>\r\n                        <li>\r\n                            <LinkButton\r\n                                className=\"btn btn-primary\"\r\n                                to='/'\r\n                                onClick={signOut}\r\n                                > Sign Out    <FaDoorOpen />\r\n                            </LinkButton>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                </>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home<FaHome /></Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\">FAQ's<FaInfoCircle/></Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/register\">Register</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/login\">Sign In</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        getNavBar()\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, {useEffect, useContext} from 'react';\r\nimport {AppContext} from '../../Services/AppContext';\r\nimport * as itemServices from './../../Services/item-services';\r\nimport * as statusServices from './../../Services/status-services';\r\nimport * as actorServices from './../../Services/actor-services';\r\nimport * as actionServices from './../../Services/action-services';\r\nimport * as userServices from './../../Services/user-services';\r\nimport * as gameServices from './../../Services/game-services';\r\nimport * as characterServices from './../../Services/character-services';\r\nimport { find } from 'lodash';\r\n\r\nconst DataLoader = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [defaultActions, setDefaultActions] = contextData.default.actions;\r\n    const [defaultStatus, setDefaultStatus] = contextData.default.status;\r\n    const [defaultActors, setDefaultActors] = contextData.default.actors;\r\n    const [defaultItems, setDefaultItems] = contextData.default.items;\r\n\r\n    const [gameCharacters, setGameCharacters] = contextData.game.characters\r\n    const [gameActors, setGameActors] = contextData.game.actors;\r\n    const [game, setGame] = contextData.game.game;\r\n\r\n    const [charActions, setCharActions] = contextData.character.actions;\r\n    const [charStatus, setCharStatus] = contextData.character.status;\r\n    const [charItems, setCharItems] = contextData.character.items;\r\n    const [charActors, setCharActors] = contextData.character.actors;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userActions, setUserActions] = contextData.user.actions;\r\n    const [userStatus, setUserStatus] = contextData.user.status;\r\n    const [userItems, setUserItems] = contextData.user.items;\r\n    const [userActors, setUserActors] = contextData.user.actors;\r\n    const [userCharacters, setUserCharacters] = contextData.user.characters;\r\n    const [userGames, setUserGames] = contextData.user.games;\r\n    const [user, setUser] = contextData.user.user;\r\n\r\n    useEffect(() => {\r\n        const fetchDefaultData = async () => {\r\n            if (userServices.isLoggedIn() && defaultActions.length === 0){\r\n                console.log('loading default actions');\r\n                const actions = await actionServices.getDefaultActions();\r\n                console.log(actions.actions);\r\n                setDefaultActions(actions.actions);\r\n            }\r\n            if (userServices.isLoggedIn() && defaultActors.length === 0){\r\n                console.log('loading default actors');\r\n                const actors = await actorServices.getDefaultActors();\r\n                console.log(actors.actors);\r\n                setDefaultActors(actors.actors);\r\n            }\r\n            if (userServices.isLoggedIn() && defaultItems.length === 0){\r\n                console.log('loading default items');\r\n                const items = await itemServices.getDefaultItems();\r\n                console.log(items.items);\r\n                setDefaultItems(items.items);\r\n            }\r\n            if (userServices.isLoggedIn() && defaultStatus.length === 0){\r\n                console.log('loading default status');\r\n                const status = await statusServices.getDefaultStatus()\r\n                console.log(status.status);\r\n                setDefaultStatus(status.status);\r\n            }\r\n        }\r\n        fetchDefaultData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            if (userServices.isLoggedIn() && !user) {\r\n                const fetchedUser = await userServices.getUser()\r\n                setUser(fetchedUser.user);\r\n                const fetchedActions = await actionServices.getCustomActions(userServices.getUserId());\r\n                setUserActions([...fetchedActions.actions]);\r\n                const fetchedItems =  await itemServices.getCustomItems(userServices.getUserId());\r\n                setUserItems(fetchedItems.items);\r\n                const fetchedStatus = await statusServices.getCustomStatus(userServices.getUserId());\r\n                setUserStatus(fetchedStatus.status);\r\n                const fetchedActors = await actorServices.getCustomActors(userServices.getUserId());\r\n                setUserActors(fetchedActors.actors);\r\n                const fetchedCharacters = await characterServices.getCharacters(userServices.getUserId());\r\n                setUserCharacters(fetchedCharacters.characters);\r\n                const fetchedGames = await gameServices.getGames(userServices.getUserId());\r\n                setUserGames(fetchedGames.games);\r\n            }  \r\n        }\r\n        fetchUserData()\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const fetchCharacterData = async () => {\r\n            if (characterServices.hasCurrCharacter()) {\r\n                setCharacter(find(userCharacters, {'_id': characterServices.getCharId()}));\r\n                const fetchedActions = await actionServices.getCharacterActions(characterServices.getCharId());\r\n                setCharActions(fetchedActions.actions);\r\n                const fetchedStatus = await statusServices.getCharacterStatus(characterServices.getCharId());\r\n                setCharStatus(fetchedStatus.status);\r\n                const fetchedItems = await itemServices.getCharacterItems(characterServices.getCharId());\r\n                setCharItems(fetchedItems.items);\r\n                const fetchedActors = await actorServices.getCharacterActors(characterServices.getCharId());\r\n                setCharActors(fetchedActors.actors);\r\n                console.log(fetchedActors);\r\n                fetchGameData();\r\n            }\r\n        }       \r\n        fetchCharacterData();\r\n        const fetchGameData = async () => {\r\n            if (gameServices.isInGame()) {\r\n                setGame(find(userGames, {'_id': gameServices.getGameId()}));\r\n                const fetchedActors = await actorServices.getGameActors(gameServices.getGameId());\r\n                setGameActors(fetchedActors.actors);\r\n                const fetchedCharacters = await characterServices.getGameCharacters(gameServices.getGameId());\r\n                setGameCharacters(fetchedCharacters.characters);\r\n            }\r\n        } \r\n        fetchGameData();\r\n    }, [userCharacters, characterServices.hasCurrCharacter(), userGames, gameServices.isInGame()])\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataLoader;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTag } from 'react-icons/fa';\r\nimport Item from './Item';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\n \r\nconst ItemList = ({items, selectItem, deleteItem, editItem}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {items.map((item, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body card-holder\">\r\n                    <Item item={item} />\r\n                \r\n                    <div  className=\"p-2\">\r\n                        <button onClick={() => deleteItem(item)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \"+\r\n                            ((item.isDefault || gameServices.isInGame())?\"hidden-button\":\"\")} >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button onClick={() => editItem(item)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \" + \r\n                            (gameServices.isInGame()?\"hidden-button\":\"\")}>\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button onClick={() => selectItem(item)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-primary \"+\r\n                            ((characterServices.hasCurrCharacter() && !gameServices.isInGame())?\"\":\"hidden-button\")} >\r\n                            Select <FaTag />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemList;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaTimesCircle} from 'react-icons/fa';\r\n\r\nconst ItemForm = ({formDisplay, toggleForm, createItem, updateItem, \r\n    editData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [goldValue, setGoldValue] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actionType, setActionType] = useState(\"Action\");\r\n    const [isConsumed, setIsConsumed] = useState(false);\r\n    const [uses, setUses] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setGoldValue(editData.goldValue);\r\n            setWeight(editData.weight);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActionType(editData.actionType);\r\n            setIsConsumed(editData.isConsumed);\r\n            setUses(editData.uses);\r\n        }\r\n    }, [editData])\r\n\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setGoldValue(\"\");\r\n        setWeight(\"\");\r\n        setIsDefault(false)\r\n        setDescription(\"\");\r\n        setActionType(\"Action\");\r\n        setIsConsumed(false);\r\n        setUses(\"\")\r\n    }\r\n\r\n    const makeNewItem = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            goldValue: goldValue,\r\n            weight: weight,\r\n            description: description,\r\n            actionType: actionType,\r\n            isConsumed: isConsumed,\r\n            uses: uses\r\n        }\r\n    }\r\n\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newItem = makeNewItem();\r\n        if (createItem) {\r\n            newItem._id = await createItem(newItem);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        if (isDefault) {\r\n            const newItem = makeNewItem();\r\n            if (createItem) {\r\n                newItem._id = await createItem(newItem);\r\n            }\r\n        } else {\r\n            const createdItem = makeNewItem();\r\n            createdItem._id = _id;\r\n            if (updateItem) {\r\n               updateItem(createdItem);\r\n            }\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const updateActionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionType(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header  bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle className=\"mr-3\" />Create Item\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Item Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"goldValue\" readOnly>\r\n                    Gold Value\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"goldValue\" placeholder=\"Gold Value\"\r\n                    value={goldValue} onChange={(e) => setGoldValue(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"weight\" readOnly>\r\n                    Weight\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"weight\" placeholder=\"Item Weight\"\r\n                    value={weight} onChange={(e) => setWeight(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-3 col-form-label text-md-right\" htmlFor=\"actionType\" readOnly>\r\n                    Item Action Type:\r\n                </label>\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                    {actionType} <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Action' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Action\")} href=\"#\">\r\n                        Action\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Bonus' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Bonus\")} href=\"#\">\r\n                        Bonus Action\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Attack' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Attack\")} href=\"#\">\r\n                        Attack Action\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Movement' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Movement\")} href=\"#\">\r\n                        Movement\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Reaction' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Reaction\")} href=\"#\">\r\n                        Reaction\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Object' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Object\")} href=\"#\">\r\n                        Object Interaction\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionType === 'Free' ? 'active' : '')}\r\n                        onClick={(e) => updateActionType(e, \"Free\")} href=\"#\" >\r\n                        Free Action\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-check form-group form-row\" onClick={() => setIsConsumed(!isConsumed)}>\r\n                <label className=\"form-check-label col-sm-2\" htmlFor=\"flexCheckChecked\">\r\n                    Is Consumed: \r\n                </label>\r\n                <input className=\"form-check-input col-sm-3\" type=\"checkbox\"\r\n                    checked={isConsumed} onChange={(e) => setIsConsumed(e.target.checked)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-3 col-form-label\" htmlFor=\"uses\" readOnly>\r\n                    Number of Uses:\r\n                </label>\r\n                <div className=\"col-md-\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"uses\" placeholder=\"Number of Uses\"\r\n                    value={uses} onChange={(e) => setUses(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Action Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <div className={\"col-md-3 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        Create Item <FaPlusCircle />\r\n                    </button>\r\n                </div>\r\n                <div className={\"col-md-3 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        Update Item <FaCheck />\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel <FaTimesCircle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemForm;","import React, {useState, useContext} from 'react';\r\n\r\nconst ItemSearch = ({orderBy, orderDir, changeOrder, searchItems, \r\n    showCustom, showDefault, showConsume, showNonConsume, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchAction form-control col-md-6 text-md-right\" aria-label=\"Search Actions\"\r\n                onChange={e => searchItems(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actionType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actionType', orderDir)} href=\"#\">\r\n                        Action Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'goldValue' ? 'active' : '')}\r\n                        onClick={e => changeOrder('goldValue', orderDir)} href=\"#\">\r\n                        Gold Value\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'weight' ? 'active' : '')}\r\n                        onClick={e => changeOrder('weight', orderDir)} href=\"#\">\r\n                        Weight\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault, showConsume, showNonConsume)} href=\"#\">\r\n                        Default Items\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault, showConsume, showNonConsume)} href=\"#\">\r\n                        Custom Items\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showConsume ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, !showConsume, showNonConsume)} href=\"#\">\r\n                        Consumables\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showNonConsume ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showConsume, !showNonConsume)} href=\"#\">\r\n                        Non-Consumables\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemSearch;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaWindowClose} from 'react-icons/fa';\r\n\r\nconst ItemWrapperForm = ({formDisplay, toggleForm, createItem, updateItem,\r\n    editData, updateWrapper, wrapperData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [goldValue, setGoldValue] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actionType, setActionType] = useState(\"Action\");\r\n    const [isConsumed, setIsConsumed] = useState(false);\r\n    const [uses, setUses] = useState(\"\");\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [usesLeft, setUsesLeft] = useState(\"\");\r\n    const [recoveryDate, setRecoveryDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setGoldValue(editData.goldValue);\r\n            setWeight(editData.weight);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActionType(editData.actionType);\r\n            setIsConsumed(editData.isConsumed);\r\n            setUses(editData.uses);\r\n        }\r\n        if(wrapperData) {\r\n            setActive(wrapperData.isActive);\r\n            setUsesLeft(wrapperData.usesLeft);\r\n            setRecoveryDate(wrapperData.recoveryDate);\r\n        }\r\n    }, [editData, wrapperData])\r\n\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setGoldValue(\"\");\r\n        setWeight(\"\");\r\n        setIsDefault(false)\r\n        setDescription(\"\");\r\n        setActionType(\"Action\");\r\n        setIsConsumed(false);\r\n        setUses(\"\")\r\n\r\n        setActive(false);\r\n        setUsesLeft(\"\");\r\n        setRecoveryDate(\"\");\r\n    }\r\n    const makeNewItem = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            goldValue: goldValue,\r\n            weight: weight,\r\n            description: description,\r\n            actionType: actionType,\r\n            isConsumed: isConsumed,\r\n            uses: uses\r\n        }\r\n    }\r\n    const makeNewWrapper = () => {\r\n        return {\r\n            active: active,\r\n            usesLeft: usesLeft,\r\n            recoveryDate: recoveryDate,\r\n            itemId: \"\"\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newItem = makeNewItem();\r\n        const newWrapper = makeNewWrapper();\r\n        if (createItem) {\r\n            newWrapper.itemId = await createItem(newItem, newWrapper);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        const newItem = makeNewItem();\r\n        const newWrapper = makeNewWrapper();\r\n        if (isDefault) {\r\n            if (createItem) {\r\n                newItem._id = await createItem(newItem, newWrapper);\r\n            }\r\n        } else {\r\n            if (updateItem) {\r\n                newItem._id = _id;\r\n                newWrapper.itemId = _id;\r\n                updateItem(newItem, newWrapper, wrapperData);\r\n            }\r\n        }\r\n        resetForm();\r\n    } \r\n    const updateWrapperPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newWrapper = makeNewWrapper();\r\n        newWrapper.itemId= _id;\r\n        if (newWrapper.itemId && updateWrapper) {\r\n            updateWrapper(newWrapper, wrapperData);\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n    const updateActionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionType(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create  Item\r\n        </div>\r\n        <div className=\"card-body\">            \r\n            <form className=\"cardForm\" noValidate>\r\n                \r\n            <div className=\"form-group form-row\">\r\n            <div className=\"form-check col-md-3 text-md-right\" onClick={() => setActive(!active)}>\r\n                <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                Is Equiped/Active: \r\n                </label>\r\n                <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                    checked={active} onChange={(e) => setActive(e.target.checked)}/>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"usesLeft\" readOnly>\r\n                    Uses Left:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"usesLeft\" placeholder=\"Uses Left\"\r\n                    value={usesLeft} onChange={(e) => setUsesLeft(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"recoveryDate\" readOnly>\r\n                    Recovery Date:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"recoveryDate\" placeholder=\"Recovery Date\"\r\n                    value={recoveryDate} onChange={(e) => setRecoveryDate(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                    onClick={updateWrapperPressed}>\r\n                    <FaCheck /> Update Item\r\n                </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Item Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"goldValue\" readOnly>\r\n                    Gold Value\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"goldValue\" placeholder=\"Gold Value\"\r\n                    value={goldValue} onChange={(e) => setGoldValue(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"weight\" readOnly>\r\n                    Weight\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"weight\" placeholder=\"Item Weight\"\r\n                    value={weight} onChange={(e) => setWeight(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"actionType\" readOnly>\r\n                Item Action Type:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {actionType} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Action' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Action\")} href=\"#\">\r\n                    Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Bonus' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Bonus\")} href=\"#\">\r\n                    Bonus Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Attack' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Attack\")} href=\"#\">\r\n                    Attack Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Reaction' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Movement\")} href=\"#\">\r\n                    Movement\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Movement' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Reaction\")} href=\"#\">\r\n                    Reaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Object' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Object\")} href=\"#\">\r\n                    Object Interaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Free' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Free\")} href=\"#\" >\r\n                    Free Action\r\n                </button>\r\n            </div>\r\n            \r\n            <div className=\"form-group form-row\">\r\n                <div className=\"form-check col-md-3 text-md-right\" onClick={() => setIsConsumed(!isConsumed)}>\r\n                    <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                       Is Consumed: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={isConsumed} onChange={(e) => setIsConsumed(e.target.checked)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"uses\" readOnly>\r\n                        Number of Uses\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"uses\" placeholder=\"Number of Uses\"\r\n                        value={uses} onChange={(e) => setUses(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Action Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        <FaPlusCircle /> Create Item\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        <FaCheck /> Update Item\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        <FaWindowClose /> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemWrapperForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport ItemList from './ItemList';\r\nimport ItemForm from './ItemForm';\r\nimport ItemSearch from './ItemSearch';\r\nimport ItemWrapperForm from './ItemWrapperForm';\r\nimport ItemWrapperList from './ItemWrapperList';\r\nimport ItemWrapperSearch from './ItemWrapperSearch';\r\nimport * as itemServices from './../../../Services/item-services';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as userServices from './../../../Services/user-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport { find, findIndex, without } from 'lodash';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst ItemPage = () => {  \r\n    const contextData = useContext(AppContext)[0];\r\n    const [items, setItems] = contextData.user.items;\r\n    const [characterItems, setCharacterItems] = contextData.character.items;\r\n    const [defaultItems, setDefaultItems] = contextData.default.items;\r\n\r\n    const [user, setUser] = contextData.user.user;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userFormDisplay, setUserFormDisplay] = useState(false);\r\n    const [characterFormDisplay, setCharacterFormDisplay] = useState(false);\r\n    const [bottomHidden, setBottomHidden] = useState(false);\r\n    const [topHidden, setTopHidden] = useState(false);\r\n    const toggleTopList = () => {\r\n        setTopHidden(!topHidden);\r\n    }\r\n    const toggleBottomList = () => {\r\n        setBottomHidden(!bottomHidden);\r\n    }\r\n    const userToggleForm = () => {\r\n        setUserFormDisplay(!userFormDisplay);\r\n    }\r\n    const characterToggleForm = () => {\r\n        setCharacterFormDisplay(!characterFormDisplay);\r\n    }\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n    const [characterQuery, setCharacterQuery] = useState('');\r\n    const userSearch = (query) => {\r\n        setUserQuery(query);\r\n    }\r\n    const characterSearch = (query) => {\r\n        setCharacterQuery(query);\r\n    }\r\n\r\n    const [userOrderBy, setUserOrderBy] = useState('name');\r\n    const [userOrderDir, setUserOrderDir] = useState('asc');\r\n    const [characterOrderBy, setCharacterOrderBy] = useState('name');\r\n    const [characterOrderDir, setCharacterOrderDir] = useState('asc');\r\n    const userChangeOrder = (order, dir) => {\r\n        setUserOrderBy(order);\r\n        setUserOrderDir(dir);\r\n    }\r\n    const characterChangeOrder = (order, dir) => {\r\n        setCharacterOrderBy(order);\r\n        setCharacterOrderDir(dir);\r\n    }\r\n    \r\n    const [userShowCustom, setUserShowCustom] = useState(true);\r\n    const [userShowDefault, setUserShowDefault] = useState(true);\r\n    const [userShowConsume, setUserShowConsume] = useState(true);\r\n    const [userShowNonConsume, setUserShowNonConsume] = useState(true);\r\n    const [characterShowCustom, setCharacterShowCustom] = useState(true);\r\n    const [characterShowDefault, setCharacterShowDefault] = useState(true);\r\n    const [characterShowConsume, setCharacterShowConsume] = useState(true);\r\n    const [characterShowNonConsume, setCharacterShowNonConsume] = useState(true);\r\n    const [characterShowEquiped, setCharacterShowEquiped] = useState(true);\r\n    const [characterShowNotEquiped, setCharacterShowNotEquiped] = useState(true);\r\n    const userChangeShow = (showCustom, showDefault, showConsume, showNonConsume) => {\r\n        setUserShowCustom(showCustom);\r\n        setUserShowDefault(showDefault);\r\n        setUserShowConsume(showConsume);\r\n        setUserShowNonConsume(showNonConsume);\r\n    }\r\n    const characterChangeShow = (showCustom, showDefault, showConsume, showNonConsume, showEquiped, showNotEquiped) => {\r\n        setCharacterShowCustom(showCustom);\r\n        setCharacterShowDefault(showDefault);\r\n        setCharacterShowConsume(showConsume);\r\n        setCharacterShowNonConsume(showNonConsume);\r\n        setCharacterShowEquiped(showEquiped);\r\n        setCharacterShowNotEquiped(showNotEquiped);\r\n    }\r\n\r\n    const [editData, setEditData] = useState();\r\n    const [wrapperData, setWrapperData] = useState();\r\n    const [sendData, setSendData] = useState();\r\n    const updateItem = async (updatedItem) => {\r\n        let i = 0;\r\n        for(const item of characterItems) {\r\n            if (item._id == updatedItem) {\r\n                characterItems[i] = updatedItem;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        const userIndex = findIndex(items, {\r\n            _id: updatedItem._id\r\n        });\r\n        if (userIndex > -1) {\r\n            items[userIndex] = updatedItem;\r\n            setItems([...items]);\r\n        }\r\n        setEditData();\r\n        await itemServices.updateItem(updatedItem);\r\n    }\r\n    const updateCharacterItem = async (updatedItem, updatedWrapper, originalWrapper) => {\r\n        const userIndex = findIndex(items, {\r\n            _id: updatedItem._id\r\n        });\r\n        if (userIndex > -1) {\r\n            items[userIndex] = updatedItem;\r\n            setItems([...items]);\r\n        }\r\n\r\n        let i = 0;\r\n        for(const item of characterItems) {\r\n            if (item._id == updatedItem._id) {\r\n                characterItems[i] = updatedItem;\r\n            }\r\n            i++;\r\n        }\r\n        setCharacterItems([...characterItems]);\r\n\r\n        updateWrapper(updatedWrapper, originalWrapper);\r\n        await itemServices.updateItem(updatedItem);\r\n    }\r\n    const updateWrapper = async (updatedWrapper, originalWrapper) => {\r\n        const itemIndex = findIndex(character.items, {\r\n            active: originalWrapper.active,\r\n            usesLeft: originalWrapper.usesLeft,\r\n            recoveryDate: originalWrapper.recoveryDate,\r\n            itemId: updatedWrapper.itemId\r\n        });\r\n        if (itemIndex > -1) {\r\n            const newCharacter = character;\r\n            newCharacter.items[itemIndex] = updatedWrapper;\r\n            setCharacter(newCharacter);\r\n            await characterServices.updateCharacter(newCharacter);\r\n        }\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const cancelEdit = () => {\r\n        setEditData();\r\n    }\r\n    const cancelCharacterEdit = () => {\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const editItem = (item) => {\r\n        setEditData(item);\r\n        setUserFormDisplay(true);\r\n        setCharacterFormDisplay(false);\r\n    }\r\n    const editCharacterItem = (item, wrapper) => {\r\n        setEditData(item);\r\n        setWrapperData(wrapper)\r\n        setUserFormDisplay(false);\r\n        setCharacterFormDisplay(true);\r\n    }\r\n    const createItem = async (createdItem) => {\r\n        const newItem = (await itemServices.createItem(createdItem)).item;\r\n        setItems([...items, newItem]);\r\n        const newUser = user;\r\n        newUser.itemIds.push(newItem._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n        return newItem._id;\r\n    }\r\n    const createCharacterItem = async (newCharacterItem, newItemWrapper) => {\r\n        const newItem = (await itemServices.createItem(newCharacterItem)).item;\r\n        setItems([...items, newItem]);\r\n        setCharacterItems([...characterItems, newItem])\r\n\r\n        const newUser = user;\r\n        newUser.itemIds.push(newItem._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n\r\n        const newCharacter = character;\r\n        newCharacter.items.push({\r\n            active: newItemWrapper.active,\r\n            recoveryDate: newItemWrapper.recoveryDate,\r\n            usesLeft: newItemWrapper.usesLeft,\r\n            itemId: newItem._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n\r\n        return newItem._id;\r\n    }\r\n    const selectItem = async (newCharacterItem) => {\r\n        setCharacterItems([...characterItems, newCharacterItem]);\r\n\r\n        const newCharacter = character;\r\n        newCharacter.items.push({\r\n            active: false,\r\n            recoveryDate: 'Never',\r\n            usesLeft: newCharacterItem.uses,\r\n            itemId: newCharacterItem._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter)\r\n    }\r\n    const deleteItem = async (deletedItem) => {\r\n        if (!deletedItem.isDefault) {\r\n                let itemWrapperIndex = -1;\r\n                do {\r\n                    const itemIdIndex = user.itemIds.indexOf(deletedItem._id);\r\n                    if (itemIdIndex > -1) {\r\n                        const newIdList = without(user.itemIds, user.itemIds[itemIdIndex]);\r\n                        const newUser = user;\r\n                        newUser.itemIds = newIdList;\r\n                        setUser(newUser);\r\n                    }\r\n                    \r\n                    const itemsIndex = findIndex(items, {\r\n                        _id: deletedItem._id\r\n                    });\r\n                    if (itemsIndex > -1) {\r\n                        const newList = without(items, items[itemsIndex]);\r\n                        setItems([...newList]);\r\n                    }\r\n\r\n                    const charItemsIndex = findIndex(characterItems, {\r\n                        _id: deletedItem._id\r\n                    });\r\n                    if (charItemsIndex > -1) {\r\n                        const newCharList = without(characterItems, characterItems[charItemsIndex]);\r\n                        setCharacterItems([...newCharList]);\r\n                    }\r\n        \r\n                    if (character) {\r\n                        itemWrapperIndex = findIndex(character.items, {\r\n                            itemId: deletedItem._id\r\n                        });\r\n                        if (itemWrapperIndex > -1) {\r\n                            const newCharacter = character;\r\n                            newCharacter.items = without(character.items, character.items[itemWrapperIndex]);;\r\n                            setCharacter(newCharacter);\r\n                        };\r\n                    }\r\n                } while (itemWrapperIndex > -1)\r\n                await userServices.updateUser(user);\r\n                await characterServices.updateCharacter(character)\r\n        } else {\r\n            console.log(\"can't delete default\");\r\n        }\r\n    }\r\n    const dropItem = async (dropItem, itemWrapper) => {\r\n        const charItemsIndex = findIndex(characterItems, {\r\n            itemId: dropItem._id\r\n        });\r\n        const newCharList = without(characterItems, characterItems[charItemsIndex]);\r\n        setCharacterItems([...newCharList]);\r\n        const itemWrapperIndex = findIndex(character.items, {\r\n            itemId: itemWrapper.itemId,\r\n            active: itemWrapper.active,\r\n            usesLeft: itemWrapper.usesLeft,\r\n            recoveryDate: itemWrapper.recoveryDate\r\n        });\r\n        const newCharacter = character;\r\n        newCharacter.items = without(character.items, character.items[itemWrapperIndex]);\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n    }\r\n\r\n    let userFilteredItems = [];\r\n    let userOrder;\r\n    userFilteredItems = [...items, ...defaultItems];\r\n    if (userOrderDir === 'asc') {\r\n        userOrder = 1;\r\n    } else {\r\n        userOrder = -1;\r\n    }\r\n    userFilteredItems = userFilteredItems.sort((a, b) => {\r\n        if (\r\n            a[userOrderBy].toLowerCase() <\r\n            b[userOrderBy].toLowerCase()\r\n        ) {\r\n            return -1 * userOrder;\r\n        } else {\r\n            return 1 * userOrder;\r\n        }\r\n        }).filter(eachItem => {\r\n            return ((userShowCustom && !eachItem.isDefault) || \r\n                (userShowDefault && eachItem.isDefault)) && \r\n                ((userShowConsume && eachItem.isConsumed) || \r\n                (userShowNonConsume && !eachItem.isConsumed))\r\n        }).filter(eachItem => {\r\n        return (\r\n            eachItem['name']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachItem['goldValue']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachItem['weight']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachItem['actionType']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase())\r\n        );\r\n    });\r\n\r\n    let characterFilteredItems = [];\r\n    if(character) {\r\n        let characterOrder;\r\n        characterFilteredItems = character.items.map(item => {\r\n            const combinedItem = {\r\n                item: find(characterItems, ['_id', item.itemId]),\r\n                wrapper: item\r\n            }\r\n            return combinedItem\r\n        });\r\n        if (characterOrderDir === 'asc') {\r\n            characterOrder = 1;\r\n        } else {\r\n            characterOrder = -1;\r\n        }\r\n        characterFilteredItems = characterFilteredItems.sort((a, b) => {\r\n            if (\r\n                a.item[characterOrderBy].toLowerCase() <\r\n                b.item[characterOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * characterOrder;\r\n            } else {\r\n                return 1 * characterOrder;\r\n            }\r\n            }).filter(eachItem => {\r\n                return ((characterShowCustom && !eachItem.item.isDefault) || \r\n                    (characterShowDefault && eachItem.item.isDefault)) &&\r\n                    ((characterShowConsume && eachItem.item.isConsumed) ||\r\n                    (characterShowNonConsume && !eachItem.item.isConsumed)) &&\r\n                    ((characterShowEquiped && eachItem.wrapper.active) ||\r\n                    (characterShowNotEquiped && !eachItem.wrapper.active))\r\n            }).filter(eachItem => {\r\n            return (\r\n                eachItem.item['name']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachItem.item['goldValue']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachItem.item['weight']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachItem.item['actionType']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={\"card-addheading bg-primary text-white card-header \" + \r\n            (characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")} onClick={toggleTopList} > \r\n            <div className={topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> Character's Inventory\r\n            </div>\r\n            <div className={!topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> Character's Inventory\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (topHidden? \"\" : \"hidden-list\")}> \r\n            <div className={\" list-holder \" + !topHidden ? \"\" : \"hidden-list\"}>\r\n                <ItemWrapperForm \r\n                    formDisplay={characterFormDisplay}\r\n                    toggleForm={characterToggleForm}\r\n                    createItem={createCharacterItem}\r\n                    updateItem={updateCharacterItem}\r\n                    updateWrapper={updateWrapper}\r\n                    cancelForm={cancelCharacterEdit}\r\n                    editData={editData}\r\n                    wrapperData={wrapperData}/>\r\n                <ItemWrapperSearch \r\n                    orderBy={characterOrderBy}\r\n                    orderDir={characterOrderDir}\r\n                    changeOrder={characterChangeOrder}\r\n                    searchItems={characterSearch}\r\n                    showCustom={characterShowCustom}\r\n                    showDefault={characterShowDefault}\r\n                    showConsume={characterShowConsume}\r\n                    showNonConsume={characterShowNonConsume}\r\n                    showEquiped={characterShowEquiped}\r\n                    showNotEquiped={characterShowNotEquiped}\r\n                    changeShow={characterChangeShow}/>\r\n                <ItemWrapperList \r\n                    items={characterFilteredItems}\r\n                    dropItem={dropItem}\r\n                    deleteItem={deleteItem}\r\n                    editItem={editCharacterItem}/>\r\n            </div>\r\n        </div>\r\n        <div className={\"card-addheading  bg-primary text-white card-header\"} onClick={toggleBottomList} > \r\n            <div className={bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> All Items\r\n            </div>\r\n            <div className={!bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> All Items\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (bottomHidden? \"\" : \"hidden-list\")}>\r\n            <div className={\" list-holder \" + !bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <ItemForm \r\n                    formDisplay={userFormDisplay}\r\n                    toggleForm={userToggleForm}\r\n                    createItem={createItem}\r\n                    updateItem={updateItem}\r\n                    cancelForm={cancelEdit}\r\n                    editData={editData}/>\r\n                <ItemSearch \r\n                    orderBy={userOrderBy}\r\n                    orderDir={userOrderDir}\r\n                    changeOrder={userChangeOrder}\r\n                    searchItems={userSearch}\r\n                    showCustom={userShowCustom}\r\n                    showDefault={userShowDefault}\r\n                    showConsume={userShowConsume}\r\n                    showNonConsume={userShowNonConsume}\r\n                    changeShow={userChangeShow}/>\r\n                <ItemList \r\n                    items={userFilteredItems} \r\n                    selectItem={selectItem}\r\n                    deleteItem={deleteItem}\r\n                    editItem={editItem}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemPage;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTag } from 'react-icons/fa';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Actor from './Actor';\r\n \r\nconst ActorList = ({actors, selectActor, deleteActor, editActor}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"action-list item-list mb-3\">\r\n        {actors.map((actor, index) => (\r\n                <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Actor actor={actor}/>\r\n                    \r\n                    <div className=\"p-2\">\r\n                        <button onClick={() => deleteActor(actor)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \"+\r\n                            ((actor.isDefault || gameServices.isInGame())?\"hidden-button\":\"\")} >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button onClick={() => editActor(actor)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \" + \r\n                            (gameServices.isInGame()?\"hidden-button\":\"\")}>\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button onClick={() => selectActor(actor)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-primary \"+\r\n                            ((characterServices.hasCurrCharacter() && !gameServices.isInGame())?\"\":\"hidden-button\")} >\r\n                            Select <FaTag />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActorList;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaTimesCircle} from 'react-icons/fa';\r\n\r\nconst ActorForm = ({formDisplay, toggleForm, createActor, updateActor, \r\n    editData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actorType, setActorType] = useState(\"NPC\");\r\n    const [initMod, setInitMod] = useState(\"\");\r\n    const [initRaw, setInitRaw] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setTitle(editData.title);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActorType(editData.actorType);\r\n            setInitMod(editData.initMod);\r\n            setInitRaw(editData.initRaw);\r\n        }\r\n    }, [editData])\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setTitle(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setActorType(\"NPC\");\r\n        setInitMod(\"\");\r\n        setInitRaw(\"\");\r\n    }\r\n    const createNewActor = () => {\r\n        return {\r\n            title: title,\r\n            isDefault: false,\r\n            description: description,\r\n            actorType: actorType,\r\n            initMod: initMod,\r\n            initRaw: initRaw\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newActor = createNewActor();\r\n        if (createActor) {\r\n            newActor._id = await createActor(newActor);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        if (isDefault) {\r\n            const newActor = createNewActor();\r\n            if (createActor) {\r\n                newActor._id = await createActor(newActor);\r\n            }\r\n        } else {\r\n            const createdActor = createNewActor();\r\n            createdActor._id = _id;\r\n            if (updateActor) {\r\n               updateActor(createdActor);\r\n            }\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const updateActorType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActorType(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header list-header text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Actor\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"title\" readOnly>\r\n                    Creature's Title:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"title\" placeholder=\"Creature Title\"\r\n                    value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"initMod\" readOnly>\r\n                    Initiative Modifier:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"initMod\" placeholder=\"Initiative Modifier\"\r\n                    value={initMod} onChange={(e) => setInitMod(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"initRaw\" readOnly>\r\n                    Initiative Default (optional):\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"initRaw\" placeholder=\"Default Initiative\"\r\n                    value={initRaw} onChange={(e) => setInitRaw(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"actorType\" readOnly>\r\n                Actor Type:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {actorType} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'PC' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"PC\")} href=\"#\">\r\n                    Player Character\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Pet' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Pet\")} href=\"#\">\r\n                    Pet\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Familiar' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Familiar\")} href=\"#\">\r\n                    Familiar\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Companion' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Companion\")} href=\"#\">\r\n                    Animal Companion\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Ally' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Ally\")} href=\"#\">\r\n                    Ally\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'NPC' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"NPC\")} href=\"#\">\r\n                    NPC\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Enemy' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Enemy\")} href=\"#\" >\r\n                    Enemy\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Lair' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Lair\")} href=\"#\" >\r\n                    Lair Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'LegendaryEnemy' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Legendary\")} href=\"#\" >\r\n                    Legendary Enemy\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'LegendaryAction' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"LegendaryAction\")} href=\"#\" >\r\n                    Legendary Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Environment' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Environment\")} href=\"#\" >\r\n                    Environment\r\n                </button>\r\n            </div>\r\n           \r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Actor Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        Create Actor  <FaPlusCircle />\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        Update Actor<FaCheck />\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel <FaTimesCircle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorForm;","import React, {useState, useContext} from 'react';\r\n\r\nconst ActorSearch = ({orderBy, orderDir, changeOrder, searchActors, \r\n    showCustom, showDefault, showFriendly, showPlayer, showHostile, showNeutral, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchActor form-control col-md-6 text-md-right\" aria-label=\"Search Actors\"\r\n                onChange={e => searchActors(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'title' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('title', orderDir)} href=\"#\">\r\n                        Creature Title\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actorType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actorType', orderDir)} href=\"#\">\r\n                        Creature Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'initMod' ? 'active' : '')}\r\n                        onClick={e => changeOrder('initMod', orderDir)} href=\"#\">\r\n                        Initiative Modifier\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault, showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Default Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault, showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Custom Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showPlayer ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, !showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Player Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showFriendly ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, !showFriendly, showPlayer, showHostile, showNeutral)} href=\"#\">\r\n                        Friendly Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showHostile ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, showPlayer, !showHostile, showNeutral)} href=\"#\">\r\n                        Hostile Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showNeutral ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, showDefault, showFriendly, showPlayer, showHostile, !showNeutral)} href=\"#\">\r\n                        Neutral Characters\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorSearch;","import React, {useState, useEffect} from 'react';\r\nimport {FaPlusCircle, FaCheck, FaWindowClose} from 'react-icons/fa';\r\nimport * as userServices from './../../../Services/user-services';\r\n\r\nconst ActorWrapperForm = ({formDisplay, toggleForm, createActor, updateActor,\r\n    editData, updateWrapper, wrapperData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actorType, setActorType] = useState(\"NPC\");\r\n    const [initMod, setInitMod] = useState(\"\");\r\n    const [initRaw, setInitRaw] = useState(\"\");\r\n\r\n    const [isHidden, setIsHidden] = useState(false);\r\n    const [initActual, setInitActual] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setTitle(editData.title);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActorType(editData.actorType);\r\n            setInitMod(editData.initMod);\r\n            setInitRaw(editData.initRaw);\r\n        }\r\n        if(wrapperData) {\r\n            setIsHidden(wrapperData.isHidden);\r\n            setInitActual(wrapperData.initActual);\r\n            setName(wrapperData.name);\r\n        }\r\n    }, [editData, wrapperData])\r\n\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setTitle(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setActorType(\"NPC\");\r\n        setInitMod(\"\");\r\n        setInitRaw(\"\");\r\n\r\n        setIsHidden(false);\r\n        setInitActual(\"\");\r\n        setName(\"\");\r\n    }\r\n    const makeNewActor = () => {\r\n        return {\r\n            title: title,\r\n            isDefault: false,\r\n            description: description,\r\n            actorType: actorType,\r\n            initMod: initMod,\r\n            initRaw: initRaw\r\n        }\r\n    }\r\n    const makeNewWrapper = () => {\r\n        return {\r\n            isHidden: isHidden,\r\n            initActual: initActual,\r\n            name: name,\r\n            actorId: \"\"\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newActor = makeNewActor();\r\n        const newWrapper = makeNewWrapper();\r\n        if (createActor) {\r\n            newWrapper.actorId = await createActor(newActor, newWrapper);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        const newActor = makeNewActor();\r\n        const newWrapper = makeNewWrapper();\r\n        if (isDefault) {\r\n            if (createActor) {\r\n                newActor._id = await createActor(newActor, newWrapper);\r\n            }\r\n        } else {\r\n            if (updateActor) {\r\n                newActor._id = _id;\r\n                newWrapper.actorId = _id;\r\n                updateActor(newActor, newWrapper, wrapperData);\r\n            }\r\n        }\r\n        resetForm();\r\n    } \r\n    const updateWrapperPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newWrapper = makeNewWrapper();\r\n        newWrapper.actorId= _id;\r\n        if (newWrapper.actorId && updateWrapper) {\r\n            updateWrapper(newWrapper, wrapperData);\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n    const updateActorType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActorType(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Creature\r\n        </div>\r\n        <div className=\"card-body\">            \r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n            <div className=\"form-check col-md-3 text-md-right\" onClick={() => setIsHidden(!isHidden)}>\r\n                <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                Is This Hidden From Others: \r\n                </label>\r\n                <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                    checked={isHidden} onChange={(e) => setIsHidden(e.target.checked)}/>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name: \r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Character's Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"initActual\" readOnly>\r\n                    Initiative Actual\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"initActual\" placeholder=\"Current Initialtive\"\r\n                    value={initActual} onChange={(e) => setInitActual(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                    onClick={updateWrapperPressed}>\r\n                    <FaCheck /> Update Creature\r\n                </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"title\" readOnly>\r\n                    Creature's Title:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"title\" placeholder=\"Creature Title\"\r\n                    value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"initMod\" readOnly>\r\n                    Initiative Modifier:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"initMod\" placeholder=\"Initiative Modifier\"\r\n                    value={initMod} onChange={(e) => setInitMod(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"initRaw\" readOnly>\r\n                    Initiative Default (optional):\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"initRaw\" placeholder=\"Default Initiative\"\r\n                    value={initRaw} onChange={(e) => setInitRaw(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"actorType\" readOnly>\r\n                Actor Type:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {actorType} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'PC' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"PC\")} href=\"#\">\r\n                    Player Character\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Pet' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Pet\")} href=\"#\">\r\n                    Pet\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Familiar' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Familiar\")} href=\"#\">\r\n                    Familiar\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Companion' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Companion\")} href=\"#\">\r\n                    Animal Companion\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Ally' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Ally\")} href=\"#\">\r\n                    Ally\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'NPC' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"NPC\")} href=\"#\">\r\n                    NPC\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Enemy' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Enemy\")} href=\"#\" >\r\n                    Enemy\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Lair' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Lair\")} href=\"#\" >\r\n                    Lair Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'LegendaryEnemy' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Legendary\")} href=\"#\" >\r\n                    Legendary Enemy\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'LegendaryAction' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"LegendaryAction\")} href=\"#\" >\r\n                    Legendary Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actorType === 'Environment' ? 'active' : '')}\r\n                    onClick={(e) => updateActorType(e, \"Environment\")} href=\"#\" >\r\n                    Environment\r\n                </button>\r\n            </div>\r\n           \r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Actor Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        <FaPlusCircle /> Create Creature\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        <FaCheck /> Update Creature\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        <FaWindowClose /> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorWrapperForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport ActorList from './ActorList';\r\nimport ActorForm from './ActorForm';\r\nimport ActorSearch from './ActorSearch';\r\nimport ActorWrapperForm from './ActorWrapperForm';\r\nimport ActorWrapperList from './ActorWrapperList';\r\nimport ActorWrapperSearch from './ActorWrapperSearch';\r\nimport * as actorServices from './../../../Services/actor-services';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as userServices from './../../../Services/user-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport { find, findIndex, without } from 'lodash';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst ActorPage = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [actors, setActors] = contextData.user.actors;\r\n    const [characterActors, setCharacterActors] = contextData.character.actors;\r\n    const [defaultActors, setDefaultActors] = contextData.default.actors;\r\n\r\n    const [user, setUser] = contextData.user.user;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userFormDisplay, setUserFormDisplay] = useState(false);\r\n    const [characterFormDisplay, setCharacterFormDisplay] = useState(false);\r\n    const [bottomHidden, setBottomHidden] = useState(false);\r\n    const [topHidden, setTopHidden] = useState(false);\r\n    const toggleTopList = () => {\r\n        setTopHidden(!topHidden);\r\n    }\r\n    const toggleBottomList = () => {\r\n        setBottomHidden(!bottomHidden);\r\n    }\r\n    const userToggleForm = () => {\r\n        setUserFormDisplay(!userFormDisplay);\r\n    }\r\n    const characterToggleForm = () => {\r\n        setCharacterFormDisplay(!characterFormDisplay);\r\n    }\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n    const [characterQuery, setCharacterQuery] = useState('');\r\n    const userSearch = (query) => {\r\n        setUserQuery(query);\r\n    }\r\n    const characterSearch = (query) => {\r\n        setCharacterQuery(query);\r\n    }\r\n\r\n    const [userOrderBy, setUserOrderBy] = useState('title');\r\n    const [userOrderDir, setUserOrderDir] = useState('asc');\r\n    const [characterOrderBy, setCharacterOrderBy] = useState('title');\r\n    const [characterOrderDir, setCharacterOrderDir] = useState('asc');\r\n    const userChangeOrder = (order, dir) => {\r\n        setUserOrderBy(order);\r\n        setUserOrderDir(dir);\r\n    }\r\n    const characterChangeOrder = (order, dir) => {\r\n        setCharacterOrderBy(order);\r\n        setCharacterOrderDir(dir);\r\n    }\r\n    \r\n    const [userShowCustom, setUserShowCustom] = useState(true);\r\n    const [userShowDefault, setUserShowDefault] = useState(true);\r\n    const [userShowFriendly, setUserShowFriendly] = useState(true);\r\n    const [userShowHostile, setUserShowHostile] = useState(true);\r\n    const [userShowNeutral, setUserShowNeutral] = useState(true);\r\n    const [userShowPlayer, setUserShowPlayer] = useState(true);\r\n    const [characterShowCustom, setCharacterShowCustom] = useState(true);\r\n    const [characterShowDefault, setCharacterShowDefault] = useState(true);\r\n    const [characterShowFriendly, setCharacterShowFriendly] = useState(true);\r\n    const [characterShowHostile, setCharacterShowHostile] = useState(true);\r\n    const [characterShowNeutral, setCharacterShowNeutral] = useState(true);\r\n    const [characterShowPlayer, setCharacterShowPlayer] = useState(true);\r\n    const userChangeShow = (showCustom, showDefault,\r\n        showFriendly, showPlayer, showHostile, showNeutral) => {\r\n        setUserShowCustom(showCustom);\r\n        setUserShowDefault(showDefault);\r\n        setUserShowFriendly(showFriendly);\r\n        setUserShowPlayer(showPlayer);\r\n        setUserShowHostile(showHostile);\r\n        setUserShowNeutral(showNeutral);\r\n    }\r\n    const characterChangeShow = (showCustom, showDefault,\r\n        showFriendly, showPlayer, showHostile, showNeutral) => {\r\n        setCharacterShowCustom(showCustom);\r\n        setCharacterShowDefault(showDefault);\r\n        setCharacterShowFriendly(showFriendly);\r\n        setCharacterShowPlayer(showPlayer);\r\n        setCharacterShowHostile(showHostile);\r\n        setCharacterShowNeutral(showNeutral);\r\n    }\r\n\r\n    const [editData, setEditData] = useState();\r\n    const [wrapperData, setWrapperData] = useState();\r\n    const [sendData, setSendData] = useState();\r\n    const updateActor = async (updatedActor) => {\r\n        let i = 0;\r\n        for(const actor of characterActors) {\r\n            if (actor._id == updatedActor) {\r\n                characterActors[i] = updatedActor;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        const userIndex = findIndex(actors, {\r\n            _id: updatedActor._id\r\n        });\r\n        if (userIndex > -1) {\r\n            actors[userIndex] = updatedActor;\r\n            setActors([...actors]);\r\n        }\r\n        setEditData();\r\n        await actorServices.updateActor(updatedActor);\r\n    }\r\n    const updateCharacterActor = async (updatedActor, updatedWrapper, originalWrapper) => {\r\n        const userIndex = findIndex(actors, {\r\n            _id: updatedActor._id\r\n        });\r\n        if (userIndex > -1) {\r\n            actors[userIndex] = updatedActor;\r\n            setActors([...actors]);\r\n        }\r\n\r\n        let i = 0;\r\n        for(const actor of characterActors) {\r\n            if (actor._id === updatedActor._id) {\r\n                characterActors[i] = updatedActor;\r\n            }\r\n            i++;\r\n        }\r\n        setCharacterActors([...characterActors]);\r\n\r\n        updateWrapper(updatedWrapper, originalWrapper);\r\n        await actorServices.updateActor(updatedActor);\r\n    }\r\n    const updateWrapper = async (updatedWrapper, originalWrapper) => {\r\n        const actorIndex = findIndex(character.actors, {\r\n            actorId: updatedWrapper.actorId,\r\n            isHidden: originalWrapper.isHidden,\r\n            initActual: originalWrapper.initActual,\r\n            name: originalWrapper.name\r\n        });\r\n        if (actorIndex > -1) {\r\n            const newCharacter = character;\r\n            newCharacter.actors[actorIndex] = updatedWrapper;\r\n            setCharacter(newCharacter);\r\n            await characterServices.updateCharacter(newCharacter);\r\n        }\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const cancelEdit = () => {\r\n        setEditData();\r\n    }\r\n    const cancelCharacterEdit = () => {\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const editActor = (actor) => {\r\n        setEditData(actor);\r\n        setUserFormDisplay(true);\r\n        setCharacterFormDisplay(false);\r\n    }\r\n    const editCharacterActor = (actor, wrapper) => {\r\n        setEditData(actor);\r\n        setWrapperData(wrapper)\r\n        setUserFormDisplay(false);\r\n        setCharacterFormDisplay(true);\r\n    }\r\n    const createActor = async (createdActor) => {\r\n        const newActor = (await actorServices.createActor(createdActor)).actor;\r\n        setActors([...actors, newActor]);\r\n        const newUser = user;\r\n        newUser.actorIds.push(newActor._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n        return newActor._id;\r\n    }\r\n    const createCharacterActor = async (newCharacterActor, newActorWrapper) => {\r\n        const newActor = (await actorServices.createActor(newCharacterActor)).actor;\r\n        setActors([...actors, newActor]);\r\n        setCharacterActors([...characterActors, newActor])\r\n\r\n        const newUser = user;\r\n        newUser.actorIds.push(newActor._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n\r\n        const newCharacter = character;\r\n        newCharacter.actors.push({\r\n            isHidden: newActorWrapper.isHidden,\r\n            initActual: newActorWrapper.initActual,\r\n            name: newActorWrapper.name,\r\n            userId: userServices.getUserId(),\r\n            actorId: newActor._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n\r\n        return newActor._id;\r\n    }\r\n    const selectActor = async (newCharacterActor) => {\r\n        setCharacterActors([...characterActors, newCharacterActor]);\r\n\r\n        const newCharacter = character;\r\n        newCharacter.actors.push({\r\n            isHidden: false,\r\n            initActual: newCharacterActor.initRaw,\r\n            name: newCharacterActor.title,\r\n            userId: userServices.getUserId(),\r\n            actorId: newCharacterActor._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter)\r\n    }\r\n    const deleteActor = async (deletedActor) => {\r\n        if (!deletedActor.isDefault) {\r\n                let actorWrapperIndex = -1;\r\n                do {\r\n                    const actorIdIndex = user.actorIds.indexOf(deletedActor._id);\r\n                    if (actorIdIndex > -1) {\r\n                        const newIdList = without(user.actorIds, user.actorIds[actorIdIndex]);\r\n                        const newUser = user;\r\n                        newUser.actorIds = newIdList;\r\n                        setUser(newUser);\r\n                    }\r\n                    \r\n                    const actorsIndex = findIndex(actors, {\r\n                        _id: deletedActor._id\r\n                    });\r\n                    if (actorsIndex > -1) {\r\n                        const newList = without(actors, actors[actorsIndex]);\r\n                        setActors([...newList]);\r\n                    }\r\n\r\n                    const charActorsIndex = findIndex(characterActors, {\r\n                        _id: deletedActor._id\r\n                    });\r\n                    if (charActorsIndex > -1) {\r\n                        const newCharList = without(characterActors, characterActors[charActorsIndex]);\r\n                        setCharacterActors([...newCharList]);\r\n                    }\r\n                    \r\n                    if (character) {\r\n                        actorWrapperIndex = findIndex(character.actors, {\r\n                            actorId: deletedActor._id\r\n                        });\r\n                        if (actorWrapperIndex > -1) {\r\n                            const newCharacter = character;\r\n                            newCharacter.actors = without(character.actors, character.actors[actorWrapperIndex]);;\r\n                            setCharacter(newCharacter);\r\n                        };\r\n                    }\r\n                } while (actorWrapperIndex > -1)\r\n                await userServices.updateUser(user);\r\n                if (character) {\r\n                    await characterServices.updateCharacter(character);\r\n                }\r\n                await actorServices.deleteCustomActor(deletedActor._id);\r\n        } else {\r\n            console.log(\"can't delete default\");\r\n        }\r\n    }\r\n    const dropActor = async (dropActor, actorWrapper) => {\r\n        const charActorsIndex = findIndex(characterActors, {\r\n            actorId: dropActor._id\r\n        });\r\n        const newCharList = without(characterActors, characterActors[charActorsIndex]);\r\n        setCharacterActors([...newCharList]);\r\n        const actorWrapperIndex = findIndex(character.actors, {\r\n            isHidden: actorWrapper.isHidden,\r\n            initActual: actorWrapper.initActual,\r\n            name: actorWrapper.name,\r\n            actorId: actorWrapper.actorId\r\n        });\r\n        const newCharacter = character;\r\n        newCharacter.actors = without(character.actors, character.actors[actorWrapperIndex]);\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n    }\r\n\r\n    let userFilteredActors = [];\r\n    let userOrder;\r\n    userFilteredActors = [...actors, ...defaultActors];\r\n    if (userOrderDir === 'asc') {\r\n        userOrder = 1;\r\n    } else {\r\n        userOrder = -1;\r\n    }\r\n    userFilteredActors = userFilteredActors.sort((a, b) => {\r\n        if (\r\n            a[userOrderBy].toLowerCase() <\r\n            b[userOrderBy].toLowerCase()\r\n        ) {\r\n            return -1 * userOrder;\r\n        } else {\r\n            return 1 * userOrder;\r\n        }\r\n        }).filter(eachActor => {\r\n            return ((userShowCustom && !eachActor.isDefault) || \r\n                (userShowDefault && eachActor.isDefault)) && (\r\n                (userShowFriendly && eachActor.actorType === \"Friendly\") ||\r\n                (userShowFriendly && eachActor.actorType === \"Friendly\") ||\r\n                (userShowHostile && eachActor.actorType === \"Enemy\") ||\r\n                (userShowHostile && eachActor.actorType === \"LegendaryAction\") ||\r\n                (userShowHostile && eachActor.actorType === \"LegendaryEnemy\") ||\r\n                (userShowHostile && eachActor.actorType === \"Lair\") ||\r\n                (userShowNeutral && eachActor.actorType === \"NPC\") ||\r\n                (userShowNeutral && eachActor.actorType === \"Environment\") ||\r\n                (userShowPlayer && eachActor.actorType === \"PC\") ||\r\n                (userShowPlayer && eachActor.actorType === \"Pet\") ||\r\n                (userShowPlayer && eachActor.actorType === \"Companion\"))     \r\n        }).filter(eachActor => {\r\n        return (\r\n            eachActor['title']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachActor['actorType']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachActor['initMod']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase())\r\n        );\r\n    });\r\n\r\n    let characterFilteredActors = [];\r\n    if(character) {\r\n        let characterOrder;\r\n        characterFilteredActors = character.actors.map(actor => {\r\n            const combinedActor = {\r\n                actor: find(characterActors, ['_id', actor.actorId]),\r\n                wrapper: actor\r\n            }\r\n            return combinedActor\r\n        });\r\n        if (characterOrderDir === 'asc') {\r\n            characterOrder = 1;\r\n        } else {\r\n            characterOrder = -1;\r\n        }\r\n        \r\n        characterFilteredActors = characterFilteredActors.sort((a, b) => {\r\n            if (!a.actor || !b.actor) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.actor[characterOrderBy].toLowerCase() <\r\n                b.actor[characterOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * characterOrder;\r\n            } else {\r\n                return 1 * characterOrder;\r\n            }\r\n            }).filter(eachActor => {\r\n                return ((characterShowCustom && !eachActor.actor.isDefault) || \r\n                    (characterShowDefault && eachActor.actor.isDefault)) && (\r\n                    (characterShowFriendly && eachActor.actor.actorType === \"Friendly\") ||\r\n                    (characterShowFriendly && eachActor.actor.actorType === \"Friendly\") ||\r\n                    (characterShowHostile && eachActor.actor.actorType === \"Enemy\") ||\r\n                    (characterShowHostile && eachActor.actor.actorType === \"LegendaryAction\") ||\r\n                    (characterShowHostile && eachActor.actor.actorType === \"LegendaryEnemy\") ||\r\n                    (characterShowHostile && eachActor.actor.actorType === \"Lair\") ||\r\n                    (characterShowNeutral && eachActor.actor.actorType === \"NPC\") ||\r\n                    (characterShowNeutral && eachActor.actor.actorType === \"Environment\") ||\r\n                    (characterShowPlayer && eachActor.actor.actorType === \"PC\") ||\r\n                    (characterShowPlayer && eachActor.actor.actorType === \"Pet\") ||\r\n                    (characterShowPlayer && eachActor.actor.actorType === \"Companion\"))\r\n            }).filter(eachActor => {\r\n                if (!eachActor.actor) {\r\n                    return false;\r\n                }\r\n            return (\r\n                eachActor.actor['title']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachActor.actor['actorType']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachActor.actor['initMod']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachActor.actor['actionType']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachActor.actor['initActual']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachActor.actor['name']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={\"card-addheading bg-primary text-white card-header \" + \r\n            (characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")} onClick={toggleTopList} > \r\n            <div className={topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> Character's Companions\r\n            </div>\r\n            <div className={!topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> Character's Companions\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (topHidden && characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")}> \r\n            <div className={\" list-holder \" + !topHidden ? \"\" : \"hidden-list\"}>\r\n                <ActorWrapperForm \r\n                formDisplay={characterFormDisplay}\r\n                toggleForm={characterToggleForm}\r\n                createActor={createCharacterActor}\r\n                updateActor={updateCharacterActor}\r\n                updateWrapper={updateWrapper}\r\n                cancelForm={cancelCharacterEdit}\r\n                editData={editData}\r\n                wrapperData={wrapperData}/>\r\n            <ActorWrapperSearch \r\n                orderBy={characterOrderBy}\r\n                orderDir={characterOrderDir}\r\n                changeOrder={characterChangeOrder}\r\n                searchActors={characterSearch}\r\n                showCustom={characterShowCustom}\r\n                showDefault={characterShowDefault}\r\n                showFriendly={characterShowFriendly}\r\n                showHostile={characterShowHostile}\r\n                showNeutral={characterShowNeutral}\r\n                showPlayer={characterShowPlayer}\r\n                changeShow={characterChangeShow}/>\r\n            <ActorWrapperList \r\n                actors={characterFilteredActors}\r\n                dropActor={dropActor}\r\n                deleteActor={deleteActor}\r\n                editActor={editCharacterActor}/>\r\n            </div>\r\n        </div>\r\n        <div className={\"card-addheading  bg-primary text-white card-header\"} onClick={toggleBottomList} > \r\n            <div className={bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> All Creatures\r\n            </div>\r\n            <div className={!bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> All Creatures\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (bottomHidden? \"\" : \"hidden-list\")}>\r\n            <div className={\" list-holder \" + !bottomHidden ? \"\" : \"hidden-list\"}>\r\n            <ActorForm \r\n                formDisplay={userFormDisplay}\r\n                toggleForm={userToggleForm}\r\n                createActor={createActor}\r\n                updateActor={updateActor}\r\n                cancelForm={cancelEdit}\r\n                editData={editData}/>\r\n            <ActorSearch \r\n                orderBy={userOrderBy}\r\n                orderDir={userOrderDir}\r\n                changeOrder={userChangeOrder}\r\n                searchActors={userSearch}\r\n                showCustom={userShowCustom}\r\n                showDefault={userShowDefault}\r\n                showFriendly={userShowFriendly}\r\n                showHostile={userShowHostile}\r\n                showNeutral={userShowNeutral}\r\n                showPlayer={userShowPlayer}\r\n                changeShow={userChangeShow}/>\r\n            <ActorList \r\n                actors={userFilteredActors} \r\n                selectActor={selectActor}\r\n                deleteActor={deleteActor}\r\n                editActor={editActor}\r\n                isTop={false}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorPage;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTag } from 'react-icons/fa';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Action from './Action';\r\n \r\nconst ActionList = ({actions, selectAction, deleteAction, editAction}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {actions.map((action, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Action action={action} />\r\n                    \r\n                    <div className=\"mr-3\">\r\n                        <button onClick={() => deleteAction(action)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \"+\r\n                            ((action.isDefault || gameServices.isInGame())?\"hidden-button\":\"\")} >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button onClick={() => editAction(action)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \" + \r\n                            (gameServices.isInGame()?\"hidden-button\":\"\")}>\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button onClick={() => selectAction(action)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-primary \"+\r\n                            ((characterServices.hasCurrCharacter() && !gameServices.isInGame())?\"\":\"hidden-button\")} >\r\n                            Select <FaTag />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActionList;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaTimesCircle} from 'react-icons/fa';\r\n\r\nconst ActionForm = ({formDisplay, toggleForm, createAction, updateAction, \r\n    editData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actionType, setActionType] = useState(\"Action\");\r\n    const [actionClass, setActionClass] = useState(\"All\");\r\n    const [rollType, setRollType] = useState(\"None\");\r\n    const [needsSight, setNeedsSight] = useState(false);\r\n    const [needsSound, setNeedsSound] = useState(false);\r\n    const [needsMovement, setNeedsMovement] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActionType(editData.actionType);\r\n            setActionClass(editData.class);\r\n            setRollType(editData.rollType);\r\n            setNeedsSight(editData.needsSight);\r\n            setNeedsSound(editData.needsSound);\r\n            setNeedsMovement(editData.needsMovement);\r\n        }\r\n    }, [editData])\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setActionType(\"Action\");\r\n        setActionClass(\"All\");\r\n        setRollType(\"None\");\r\n        setNeedsSight(false);\r\n        setNeedsSound(false);\r\n        setNeedsMovement(false);\r\n        setIsDefault(false);\r\n    }\r\n\r\n    const makeNewAction = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            description: description,\r\n            class: actionClass,\r\n            actionType: actionType,\r\n            rollType: rollType,\r\n            needsSight: needsSight,\r\n            needsSound: needsSound,\r\n            needsMovement: needsMovement\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newAction = makeNewAction();\r\n        if (createAction) {\r\n            newAction._id = await createAction(newAction);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        if (isDefault) {\r\n            const newAction = makeNewAction();\r\n            if (createAction) {\r\n                newAction._id = await createAction(newAction);\r\n            }\r\n        } else {\r\n            const newAction = makeNewAction();\r\n            newAction._id = _id;\r\n            if (updateAction) {\r\n               updateAction(newAction);\r\n            }\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const updateActionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionType(newValue);\r\n    }\r\n    const updateClassType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionClass(newValue);\r\n    }\r\n    const updateRollType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setRollType(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Action\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Action Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"actionType\" readOnly>\r\n                Action Type:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {actionType} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Action' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Action\")} href=\"#\">\r\n                    Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Bonus' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Bonus\")} href=\"#\">\r\n                    Bonus Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Attack' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Attack\")} href=\"#\">\r\n                    Attack Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Reaction' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Movement\")} href=\"#\">\r\n                    Movement\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Movement' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Reaction\")} href=\"#\">\r\n                    Reaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Object' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Object\")} href=\"#\">\r\n                    Object Interaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Free' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Free\")} href=\"#\" >\r\n                    Free Action\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"classType\" readOnly>\r\n                    Belongs to Class:\r\n                </label>\r\n                <span>\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                    {actionClass} <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Artificer' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Artificer\")} href=\"#\">\r\n                        Artificer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Barbarian' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Barbarian\")} href=\"#\">\r\n                        Barbarian\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Bard' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Bard\")} href=\"#\">\r\n                        Bard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Cleric' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Cleric\")} href=\"#\">\r\n                        Cleric\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Druid' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Druid\")} href=\"#\">\r\n                        Druid\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Fighter' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Fighter\")} href=\"#\">\r\n                        Fighter\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Monk' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Monk\")} href=\"#\">\r\n                        Monk\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Paladin' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Paladin\")} href=\"#\">\r\n                        Paladin\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Ranger' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Ranger\")} href=\"#\">\r\n                        Ranger\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Sorcerer' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Sorcerer\")} href=\"#\">\r\n                        Sorcerer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Warlock' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Warlock\")} href=\"#\">\r\n                        Warlock\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Wizard' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Wizard\")} href=\"#\">\r\n                        Wizard\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Martial' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Martial\")} href=\"#\">\r\n                        Martial\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Caster' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Caster\")} href=\"#\">\r\n                        Caster\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'All' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"All\")} href=\"#\">\r\n                        All\r\n                    </button>\r\n                </div>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"rollType\" readOnly>\r\n                   Roll Type:\r\n                </label>\r\n                <span>\r\n                    <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                        {rollType} <span className=\"caret\" />\r\n                    </button>\r\n                    <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Attack' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Attack\")} href=\"#\">\r\n                            Attack Roll\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Save' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Save\")} href=\"#\">\r\n                            Saving Throw\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Contest' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Contest\")} href=\"#\">\r\n                            Contest Check\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Skill' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Skill\")} href=\"#\">\r\n                            Skill Check\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Damage' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Damage\")} href=\"#\">\r\n                            Damage\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Other' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Other\")} href=\"#\">\r\n                            Other\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'None' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"None\")} href=\"#\">\r\n                            None\r\n                        </button>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"form-group form-row\">\r\n                <div className=\"form-check col-md-3 text-md-right\" onClick={() => setNeedsSight(!needsSight)}>\r\n                    <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Sight: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsSight} onChange={(e) => setNeedsSight(e.target.checked)}/>\r\n                </div>\r\n                <div className=\"form-check col-md-4 text-md-right\" onClick={() => setNeedsSound(!needsSound)}>                \r\n                    <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Sound: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsSound} onChange={(e) => setNeedsSound(e.target.checked)}/>\r\n                </div>\r\n                <div className=\"form-check col-md-4 text-md-right\" onClick={() => setNeedsMovement(!needsMovement)}>\r\n                    <label className=\"form-check-label col-md-12\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Movement: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsMovement}  onChange={(e) => setNeedsMovement(e.target.checked)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Action Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        Create Action  <FaPlusCircle />\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        Update Action<FaCheck />\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel <FaTimesCircle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionForm;","import React, {useState, useContext} from 'react';\r\n\r\nconst ActionWrapperSearch = ({orderBy, orderDir, changeOrder, searchActions, \r\n    showCustom, showDefault, changeShow}) => {\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchAction form-control col-md-6 text-md-right\" aria-label=\"Search Actions\"\r\n                onChange={e => searchActions(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'actionType' ? 'active' : '')}\r\n                        onClick={e => changeOrder('actionType', orderDir)} href=\"#\">\r\n                        Action Type\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'description' ? 'active' : '')}\r\n                        onClick={e => changeOrder('description', orderDir)} href=\"#\">\r\n                        Description\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault)} href=\"#\">\r\n                        Default Actions\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault)} href=\"#\">\r\n                        Custom Actions\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionWrapperSearch;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaWindowClose} from 'react-icons/fa';\r\nimport * as userServices from './../../../Services/user-services';\r\n\r\nconst ActionWrapperForm = ({formDisplay, toggleForm, createAction, updateAction,\r\n    editData, wrapperData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [actionType, setActionType] = useState(\"Action\");\r\n    const [actionClass, setActionClass] = useState(\"All\");\r\n    const [rollType, setRollType] = useState(\"None\");\r\n    const [needsSight, setNeedsSight] = useState(false);\r\n    const [needsSound, setNeedsSound] = useState(false);\r\n    const [needsMovement, setNeedsMovement] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setActionType(editData.actionType);\r\n            setActionClass(editData.class);\r\n            setRollType(editData.rollType);\r\n            setNeedsSight(editData.needsSight);\r\n            setNeedsSound(editData.needsSound);\r\n            setNeedsMovement(editData.needsMovement);\r\n        }\r\n    }, [editData, wrapperData])\r\n\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setActionType(\"Action\");\r\n        setActionClass(\"All\");\r\n        setRollType(\"None\");\r\n        setNeedsSight(false);\r\n        setNeedsSound(false);\r\n        setNeedsMovement(false);\r\n        setIsDefault(false);\r\n    }\r\n    const makeNewAction = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            description: description,\r\n            class: actionClass,\r\n            actionType: actionType,\r\n            rollType: rollType,\r\n            needsSight: needsSight,\r\n            needsSound: needsSound,\r\n            needsMovement: needsMovement\r\n        }\r\n    }\r\n    const makeNewWrapper = () => {\r\n        return {\r\n            actionId: \"\"\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newAction = makeNewAction();\r\n        const newWrapper = makeNewWrapper();\r\n        if (createAction) {\r\n            newWrapper.actionId = await createAction(newAction, newWrapper);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        const newAction = makeNewAction();\r\n        const newWrapper = makeNewWrapper();\r\n        if (isDefault) {\r\n            if (createAction) {\r\n                newAction._id = await createAction(newAction, newWrapper);\r\n            }\r\n        } else {\r\n            if (updateAction) {\r\n                newAction._id = _id;\r\n                newWrapper.actionId = _id;\r\n                updateAction(newAction, newWrapper);\r\n            }\r\n        }\r\n        resetForm();\r\n    } \r\n\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const updateActionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionType(newValue);\r\n    }\r\n    const updateClassType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setActionClass(newValue);\r\n    }\r\n    const updateRollType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setRollType(newValue);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Action\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Action Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"actionType\" readOnly>\r\n                Action Type:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {actionType} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Action' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Action\")} href=\"#\">\r\n                    Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Bonus' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Bonus\")} href=\"#\">\r\n                    Bonus Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Attack' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Attack\")} href=\"#\">\r\n                    Attack Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Reaction' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Movement\")} href=\"#\">\r\n                    Movement\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Movement' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Reaction\")} href=\"#\">\r\n                    Reaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Object' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Object\")} href=\"#\">\r\n                    Object Interaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (actionType === 'Free' ? 'active' : '')}\r\n                    onClick={(e) => updateActionType(e, \"Free\")} href=\"#\" >\r\n                    Free Action\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"classType\" readOnly>\r\n                    Belongs to Class:\r\n                </label>\r\n                <span>\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                    {actionClass} <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Artificer' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Artificer\")} href=\"#\">\r\n                        Artificer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Barbarian' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Barbarian\")} href=\"#\">\r\n                        Barbarian\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Bard' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Bard\")} href=\"#\">\r\n                        Bard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Cleric' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Cleric\")} href=\"#\">\r\n                        Cleric\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Druid' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Druid\")} href=\"#\">\r\n                        Druid\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Fighter' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Fighter\")} href=\"#\">\r\n                        Fighter\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Monk' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Monk\")} href=\"#\">\r\n                        Monk\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Paladin' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Paladin\")} href=\"#\">\r\n                        Paladin\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Ranger' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Ranger\")} href=\"#\">\r\n                        Ranger\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Sorcerer' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Sorcerer\")} href=\"#\">\r\n                        Sorcerer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Warlock' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Warlock\")} href=\"#\">\r\n                        Warlock\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Wizard' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Wizard\")} href=\"#\">\r\n                        Wizard\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Martial' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Martial\")} href=\"#\">\r\n                        Martial\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'Caster' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"Caster\")} href=\"#\">\r\n                        Caster\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (actionClass === 'All' ? 'active' : '')}\r\n                        onClick={(e) => updateClassType(e, \"All\")} href=\"#\">\r\n                        All\r\n                    </button>\r\n                </div>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"rollType\" readOnly>\r\n                   Roll Type:\r\n                </label>\r\n                <span>\r\n                    <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                        {rollType} <span className=\"caret\" />\r\n                    </button>\r\n                    <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Attack' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Attack\")} href=\"#\">\r\n                            Attack Roll\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Save' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Save\")} href=\"#\">\r\n                            Saving Throw\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Contest' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Contest\")} href=\"#\">\r\n                            Contest Check\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Skill' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Skill\")} href=\"#\">\r\n                            Skill Check\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Damage' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Damage\")} href=\"#\">\r\n                            Damage\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'Other' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"Other\")} href=\"#\">\r\n                            Other\r\n                        </button>\r\n                        <button className={'sort-by dropdown-item ' + (rollType === 'None' ? 'active' : '')}\r\n                            onClick={(e) => updateRollType(e, \"None\")} href=\"#\">\r\n                            None\r\n                        </button>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            \r\n            <div className=\"form-group form-row\">\r\n                <div className=\"form-check col-md-3 text-md-right\" onClick={() => setNeedsSight(!needsSight)}>\r\n                    <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Sight: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsSight} onChange={(e) => setNeedsSight(e.target.checked)}/>\r\n                </div>\r\n                <div className=\"form-check col-md-4 text-md-right\" onClick={() => setNeedsSound(!needsSound)}>                \r\n                    <label className=\"form-check-label col-md-10\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Sound: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsSound} onChange={(e) => setNeedsSound(e.target.checked)}/>\r\n                </div>\r\n                <div className=\"form-check col-md-4 text-md-right\" onClick={() => setNeedsMovement(!needsMovement)}>\r\n                    <label className=\"form-check-label col-md-12\" htmlFor=\"flexCheckChecked\">\r\n                        Needs Movement: \r\n                    </label>\r\n                    <input className=\"form-check-input col-md-3\" type=\"checkbox\"\r\n                        checked={needsMovement}  onChange={(e) => setNeedsMovement(e.target.checked)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Action Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        <FaPlusCircle /> Create Action\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        <FaCheck /> Update Action\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        <FaWindowClose /> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionWrapperForm;\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport ActionList from './ActionList';\r\nimport ActionForm from './ActionForm';\r\nimport ActionSearch from './ActionSearch';\r\nimport ActionWrapperForm from './ActionWrapperForm';\r\nimport ActionWrapperList from './ActionWrapperList';\r\nimport ActionWrapperSearch from './ActionWrapperSearch';\r\nimport * as actionServices from './../../../Services/action-services';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as userServices from './../../../Services/user-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport { find, findIndex, without } from 'lodash';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst ActionPage = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [actions, setActions] = contextData.user.actions;\r\n    const [characterActions, setCharacterActions] = contextData.character.actions;\r\n    const [defaultActions, setDefaultActions] = contextData.default.actions;\r\n\r\n    const [user, setUser] = contextData.user.user;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userFormDisplay, setUserFormDisplay] = useState(false);\r\n    const [characterFormDisplay, setCharacterFormDisplay] = useState(false);\r\n    const [bottomHidden, setBottomHidden] = useState(false);\r\n    const [topHidden, setTopHidden] = useState(false);\r\n    const toggleTopList = () => {\r\n        setTopHidden(!topHidden);\r\n    }\r\n    const toggleBottomList = () => {\r\n        setBottomHidden(!bottomHidden);\r\n    }\r\n    const userToggleForm = () => {\r\n        setUserFormDisplay(!userFormDisplay);\r\n    }\r\n    const characterToggleForm = () => {\r\n        setCharacterFormDisplay(!characterFormDisplay);\r\n    }\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n    const [characterQuery, setCharacterQuery] = useState('');\r\n    const userSearch = (query) => {\r\n        setUserQuery(query);\r\n    }\r\n    const characterSearch = (query) => {\r\n        setCharacterQuery(query);\r\n    }\r\n\r\n    const [userOrderBy, setUserOrderBy] = useState('name');\r\n    const [userOrderDir, setUserOrderDir] = useState('asc');\r\n    const [characterOrderBy, setCharacterOrderBy] = useState('name');\r\n    const [characterOrderDir, setCharacterOrderDir] = useState('asc');\r\n    const userChangeOrder = (order, dir) => {\r\n        setUserOrderBy(order);\r\n        setUserOrderDir(dir);\r\n    }\r\n    const characterChangeOrder = (order, dir) => {\r\n        setCharacterOrderBy(order);\r\n        setCharacterOrderDir(dir);\r\n    }\r\n    \r\n    const [userShowCustom, setUserShowCustom] = useState(true);\r\n    const [userShowDefault, setUserShowDefault] = useState(true);\r\n    const [characterShowCustom, setCharacterShowCustom] = useState(true);\r\n    const [characterShowDefault, setCharacterShowDefault] = useState(true);\r\n    const userChangeShow = (showCustom, showDefault) => {\r\n        setUserShowCustom(showCustom);\r\n        setUserShowDefault(showDefault);\r\n    }\r\n    const characterChangeShow = (showCustom, showDefault) => {\r\n        setCharacterShowCustom(showCustom);\r\n        setCharacterShowDefault(showDefault);\r\n    }\r\n\r\n    const [editData, setEditData] = useState();\r\n    const [wrapperData, setWrapperData] = useState();\r\n    const [sendData, setSendData] = useState();\r\n    const updateAction = async (updatedAction) => {\r\n        let i = 0;\r\n        for(const action of characterActions) {\r\n            if (action._id == updatedAction) {\r\n                characterActions[i] = updatedAction;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        const userIndex = findIndex(actions, {\r\n            _id: updatedAction._id\r\n        });\r\n        if (userIndex > -1) {\r\n            actions[userIndex] = updatedAction;\r\n            setActions([...actions]);\r\n        }\r\n        setEditData();\r\n        await actionServices.updateAction(updatedAction);\r\n    }\r\n    const updateCharacterAction = async (updatedAction, updatedWrapper) => {\r\n        const userIndex = findIndex(actions, {\r\n            _id: updatedAction._id\r\n        });\r\n        if (userIndex > -1) {\r\n            actions[userIndex] = updatedAction;\r\n            setActions([...actions]);\r\n        }\r\n\r\n        let i = 0;\r\n        for(const action of characterActions) {\r\n            if (action._id == updatedAction._id) {\r\n                characterActions[i] = updatedAction;\r\n            }\r\n            i++;\r\n        }\r\n        setCharacterActions([...characterActions]);\r\n\r\n        updateWrapper(updatedWrapper);\r\n        await actionServices.updateAction(updatedAction);\r\n    }\r\n    const updateWrapper = async (updatedWrapper) => {\r\n        const actionIndex = findIndex(character.action, {actionId: updatedWrapper.actionId});\r\n        if (actionIndex > -1) {\r\n            const newCharacter = character;\r\n            newCharacter.actions[actionIndex] = updatedWrapper;\r\n            setCharacter(newCharacter);\r\n            await characterServices.updateCharacter(newCharacter);\r\n        }\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const cancelEdit = () => {\r\n        setEditData();\r\n    }\r\n    const cancelCharacterEdit = () => {\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const editAction = (action) => {\r\n        setEditData(action);\r\n        setUserFormDisplay(true);\r\n        setCharacterFormDisplay(false);\r\n    }\r\n    const editCharacterAction = (action, wrapper) => {\r\n        setEditData(action);\r\n        setWrapperData(wrapper)\r\n        setUserFormDisplay(false);\r\n        setCharacterFormDisplay(true);\r\n    }\r\n    const createAction = async (createdAction) => {\r\n        const newAction = (await actionServices.createAction(createdAction)).action;\r\n        setActions([...actions, newAction]);\r\n        const newUser = user;\r\n        newUser.actionIds.push(newAction._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n        return newAction._id;\r\n    }\r\n    const createCharacterAction = async (newCharacterAction, newActionWrapper) => {\r\n        const newAction = (await actionServices.createAction(newCharacterAction)).action;\r\n        setActions([...actions, newAction]);\r\n        setCharacterActions([...characterActions, newAction])\r\n\r\n        const newUser = user;\r\n        newUser.actionIds.push(newAction._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n\r\n        const newCharacter = character;\r\n        newCharacter.actions.push({actionId: newAction._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n\r\n        return newAction._id;\r\n    }\r\n    const selectAction = async (newCharacterAction) => {\r\n        setCharacterActions([...characterActions, newCharacterAction]);\r\n\r\n        const newCharacter = character;\r\n        newCharacter.actions.push({actionId: newCharacterAction._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter)\r\n    }\r\n    const deleteAction = async (deletedAction) => {\r\n        if (!deletedAction.isDefault) {\r\n                let actionWrapperIndex = -1;\r\n                do {\r\n                    const actionIdIndex = user.actionIds.indexOf(deletedAction._id);\r\n                    if (actionIdIndex > -1) {\r\n                        const newIdList = without(user.actionIds, user.actionIds[actionIdIndex]);\r\n                        const newUser = user;\r\n                        newUser.actionIds = newIdList;\r\n                        setUser(newUser);\r\n                    }\r\n                    \r\n                    const actionsIndex = findIndex(actions, {\r\n                        _id: deletedAction._id\r\n                    });\r\n                    if (actionsIndex > -1) {\r\n                        const newList = without(actions, actions[actionsIndex]);\r\n                        setActions([...newList]);\r\n                    }\r\n\r\n                    const charActionsIndex = findIndex(characterActions, {\r\n                        _id: deletedAction._id\r\n                    });\r\n                    if (charActionsIndex > -1) {\r\n                        const newCharList = without(characterActions, characterActions[charActionsIndex]);\r\n                        setCharacterActions([...newCharList]);\r\n                    }\r\n                    \r\n                    if (character) {\r\n                        actionWrapperIndex = findIndex(character.actions, {\r\n                            actionId: deletedAction._id\r\n                        });\r\n                        if (actionWrapperIndex > -1) {\r\n                            const newCharacter = character;\r\n                            newCharacter.actions = without(character.actions, character.actions[actionWrapperIndex]);;\r\n                            setCharacter(newCharacter);\r\n                        };\r\n                    }\r\n                } while (actionWrapperIndex > -1)\r\n                await userServices.updateUser(user);\r\n                if (character) {\r\n                    await characterServices.updateCharacter(character);\r\n                }\r\n                await actionServices.deleteCustomAction(deletedAction._id);\r\n        } else {\r\n            console.log(\"can't delete default\");\r\n        }\r\n    }\r\n    const dropAction = async (dropAction, actionWrapper) => {\r\n        const charActionsIndex = findIndex(characterActions, {\r\n            actionId: dropAction._id\r\n        });\r\n        const newCharList = without(characterActions, characterActions[charActionsIndex]);\r\n        setCharacterActions([...newCharList]);\r\n        const actionWrapperIndex = findIndex(character.actions, {actionId: actionWrapper.actionId});\r\n        const newCharacter = character;\r\n        newCharacter.actions = without(character.actions, character.actions[actionWrapperIndex]);\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n    }\r\n\r\n    let userFilteredActions = [];\r\n    let userOrder;\r\n    userFilteredActions = [...actions, ...defaultActions];\r\n    if (userOrderDir === 'asc') {\r\n        userOrder = 1;\r\n    } else {\r\n        userOrder = -1;\r\n    }\r\n    userFilteredActions = userFilteredActions.sort((a, b) => {\r\n        if (\r\n            a[userOrderBy].toLowerCase() <\r\n            b[userOrderBy].toLowerCase()\r\n        ) {\r\n            return -1 * userOrder;\r\n        } else {\r\n            return 1 * userOrder;\r\n        }\r\n        }).filter(eachAction => {\r\n            return ((userShowCustom && !eachAction.isDefault) || \r\n                (userShowDefault && eachAction.isDefault))    \r\n        }).filter(eachAction => {\r\n        return (\r\n            eachAction['name']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachAction['actionType']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachAction['description']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase())\r\n        );\r\n    });\r\n\r\n    let characterFilteredActions = [];\r\n    if(character) {\r\n        let characterOrder;\r\n        characterFilteredActions = character.actions.map(action => {\r\n            const combinedAction = {\r\n                action: find(characterActions, ['_id', action.actionId]),\r\n                wrapper: action\r\n            }\r\n            return combinedAction\r\n        });\r\n        if (characterOrderDir === 'asc') {\r\n            characterOrder = 1;\r\n        } else {\r\n            characterOrder = -1;\r\n        }\r\n        characterFilteredActions = characterFilteredActions.sort((a, b) => {\r\n            if (!a.action || !b.action) {\r\n                return false;\r\n            }\r\n            if (\r\n                a.action[characterOrderBy].toLowerCase() <\r\n                b.action[characterOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * characterOrder;\r\n            } else {\r\n                return 1 * characterOrder;\r\n            }\r\n            }).filter(eachAction => {\r\n                if (!eachAction.action) {\r\n                    return false;\r\n                }\r\n                return ((characterShowCustom && !eachAction.action.isDefault) || \r\n                    (characterShowDefault && eachAction.action.isDefault))\r\n            }).filter(eachAction => {\r\n            return (\r\n                eachAction.action['name']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachAction.action['actionType']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachAction.action['description']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={\"card-addheading bg-primary text-white card-header \" + \r\n            (characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")} onClick={toggleTopList} > \r\n            <div className={topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> Character's Actions\r\n            </div>\r\n            <div className={!topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> Character's Actions\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (topHidden? \"\" : \"hidden-list\")}> \r\n            <div className={\" list-holder \" + !topHidden ? \"\" : \"hidden-list\"}>\r\n                    <ActionWrapperForm \r\n                    formDisplay={characterFormDisplay}\r\n                    toggleForm={characterToggleForm}\r\n                    createAction={createCharacterAction}\r\n                    updateAction={updateCharacterAction}\r\n                    cancelForm={cancelCharacterEdit}\r\n                    editData={editData}\r\n                    wrapperData={wrapperData}/>\r\n                <ActionWrapperSearch \r\n                    orderBy={characterOrderBy}\r\n                    orderDir={characterOrderDir}\r\n                    changeOrder={characterChangeOrder}\r\n                    searchActions={characterSearch}\r\n                    changeShow={characterChangeShow}/>\r\n                <ActionWrapperList \r\n                    actions={characterFilteredActions}\r\n                    dropAction={dropAction}\r\n                    deleteAction={deleteAction}\r\n                    editAction={editCharacterAction}/>\r\n            </div>\r\n        </div>\r\n        <div className={\"card-addheading  bg-primary text-white card-header\"} onClick={toggleBottomList} > \r\n            <div className={bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> All Actions\r\n            </div>\r\n            <div className={!bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> All Actions\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (bottomHidden? \"\" : \"hidden-list\")}>\r\n            <div className={\" list-holder \" + !bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <ActionForm \r\n                    formDisplay={userFormDisplay}\r\n                    toggleForm={userToggleForm}\r\n                    createAction={createAction}\r\n                    updateAction={updateAction}\r\n                    cancelForm={cancelEdit}\r\n                    editData={editData}/>\r\n                <ActionSearch \r\n                    orderBy={userOrderBy}\r\n                    orderDir={userOrderDir}\r\n                    changeOrder={userChangeOrder}\r\n                    searchActions={userSearch}\r\n                    showCustom={userShowCustom}\r\n                    showDefault={userShowDefault}\r\n                    changeShow={userChangeShow}/>\r\n                <ActionList \r\n                    actions={userFilteredActions} \r\n                    selectAction={selectAction}\r\n                    deleteAction={deleteAction}\r\n                    editAction={editAction}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionPage;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTag } from 'react-icons/fa';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport Status from './Status';\r\n \r\nconst StatusList = ({status, selectStatus, deleteStatus, editStatus}) => \r\n{\r\n    return (\r\n        <>\r\n        <div className=\"card-list item-list mb-3\">\r\n        {status.map((status, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n                <div className=\"card-info media-body\">\r\n                    <Status status={status} />\r\n                        \r\n                    <div className=\"p-2\">\r\n                        <button onClick={() => deleteStatus(status)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-danger \"+\r\n                            ((status.isDefault || gameServices.isInGame())?\"hidden-button\":\"\")} >\r\n                            Delete <FaTrashAlt />\r\n                        </button>\r\n                        <button onClick={() => editStatus(status)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-warning \" + \r\n                            (gameServices.isInGame()?\"hidden-button\":\"\")}>\r\n                            Edit <FaPencilAlt />\r\n                        </button>\r\n                        <button onClick={() => selectStatus(status)} className={\"col-sm-2 mx-3 card-delete btn btn-sm btn-primary \"+\r\n                            ((characterServices.hasCurrCharacter() && !gameServices.isInGame())?\"\":\"hidden-button\")} >\r\n                            Select <FaTag />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StatusList;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaTimesCircle} from 'react-icons/fa';\r\nimport { without } from 'lodash';\r\n\r\nconst StatusForm = ({formDisplay, toggleForm, createStatus, updateStatus, \r\n    editData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [defaultConditions, setDefaultConditons] = useState([\"None\"]);\r\n    const [customConditions, setCustomConditons] = useState([\"None\"]);\r\n\r\n    const [newCondition, setNewCondition] = useState(\"\");\r\n    const [selectedCondition, setSelectedCondition] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name)\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setDuration(editData.duration);\r\n            setDefaultConditons(editData.defaultConditions);\r\n            setCustomConditons(editData.customConditions);\r\n        }\r\n    }, [editData])\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setDuration(\"\");\r\n        setDefaultConditons([\"None\"]);\r\n        setCustomConditons([\"None\"]);\r\n        setNewCondition(\"\");\r\n        setSelectedCondition(\"\");\r\n    }\r\n    const createNewStatus = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            description: description,\r\n            duration: duration,\r\n            defaultConditions: defaultConditions,\r\n            customConditions: customConditions\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newStatus = createNewStatus();\r\n        if (createStatus) {\r\n            newStatus._id = await createStatus(newStatus);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        if (isDefault) {\r\n            const newStatus = createNewStatus();\r\n            if (createStatus) {\r\n                newStatus._id = await createStatus(newStatus);\r\n            }\r\n        } else {\r\n            const createdStatus = createNewStatus();\r\n            createdStatus._id = _id;\r\n            if (updateStatus) {\r\n               updateStatus(createdStatus);\r\n            }\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const addCustomCondition = (e) => {\r\n        e.preventDefault();\r\n        if (customConditions.length > 0) {\r\n            if (customConditions[0] !== \"None\") {\r\n                setCustomConditons([...customConditions, newCondition]);\r\n                setNewCondition(\"\");\r\n            } else {\r\n                setCustomConditons([newCondition])\r\n                setNewCondition(\"\");\r\n            }\r\n        }\r\n    }\r\n    const addDefaultCondition = (e) => {\r\n        e.preventDefault();\r\n        if (selectedCondition.length > 0) {\r\n            if (defaultConditions[0] != \"None\") {\r\n                setDefaultConditons([...defaultConditions, selectedCondition]);\r\n            } else {\r\n                setDefaultConditons([selectedCondition]);\r\n            }\r\n        }\r\n    }\r\n    const removeCustomCondition = (e) => {\r\n        e.preventDefault();\r\n        if (customConditions.length > 0) {\r\n            if (customConditions.length > 1) {\r\n                customConditions.pop()\r\n                setCustomConditons([...customConditions]);\r\n            } else {\r\n                setCustomConditons([\"None\"]);\r\n            }\r\n        }\r\n    }\r\n    const removeDefaultCondition = (e) => {\r\n        e.preventDefault();\r\n        if (defaultConditions.length > 0) {\r\n            if (defaultConditions.length > 1) {\r\n                defaultConditions.pop();\r\n                setDefaultConditons([...defaultConditions]);\r\n            } else {\r\n                setDefaultConditons([\"None\"]);\r\n            }\r\n        }\r\n    }\r\n    const updateConditionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setSelectedCondition(newValue);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Status\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Status Name:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Status Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"duration\" readOnly>\r\n                    Duration: \r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"duration\" placeholder=\"Duration\"\r\n                    value={duration} onChange={(e) => setDuration(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"selectedCondition\" readOnly>\r\n                Affects:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {selectedCondition} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Movement' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Movement\")} href=\"#\">\r\n                    Movement\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Sight' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Sight\")} href=\"#\">\r\n                    Sight\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Hearing' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Hearing\")} href=\"#\">\r\n                    Hearing\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Speech' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Speech\")} href=\"#\">\r\n                    Speech\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Hands' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Hands\")} href=\"#\">\r\n                    Hands\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Action' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Action\")} href=\"#\">\r\n                    Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Bonus' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Bonus\")} href=\"#\" >\r\n                    Bonus Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Reaction' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Reaction\")} href=\"#\" >\r\n                    Reaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Object' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Object\")} href=\"#\" >\r\n                    Object Interaction\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Health' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Health\")} href=\"#\" >\r\n                    Your Hit Points\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Ability' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Ability\")} href=\"#\" >\r\n                    Your Ability Scores\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Armor' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Armor\")} href=\"#\" >\r\n                    Your Armor Class\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'DC' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"DC\")} href=\"#\" >\r\n                    Your Dice Check Modifiers\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourAttack' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourAttack\")} href=\"#\" >\r\n                    Your Attack Rolls\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourSave' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourSave\")} href=\"#\" >\r\n                    Your Saving Throws\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourSkill' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourSkill\")} href=\"#\" >\r\n                    Your Skill Checks\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourContest' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourContest\")} href=\"#\" >\r\n                    Your Contest Checks\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourDamage' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourDamage\")} href=\"#\" >\r\n                    Your Damage Rolls\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirAttack' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirAttack\")} href=\"#\" >\r\n                    Attack Rolls Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirSave' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirSave\")} href=\"#\" >\r\n                    Saving Throws Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirSkill' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirSkill\")} href=\"#\" >\r\n                    Skill Checks Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirContest' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirContest\")} href=\"#\" >\r\n                    Contest Checks Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirDamage' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirDamage\")} href=\"#\" >\r\n                    Damage Rolls Against You\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row pt-3\">\r\n                <span className=\"label-item col-md-4 text-md-left\">Default Conditions: </span>\r\n                <div className=\"col-sm-4\">\r\n                    {defaultConditions.map((condition, index) => {\r\n                        return (\r\n                            <div key={index} className=\"\">\r\n                                <span className=\"label-item\">\r\n                                    {condition}\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"col-sm-4 py-1\">\r\n                    <button className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={addDefaultCondition}>\r\n                        Add This Condition\r\n                    </button>\r\n                    <button className=\"btn btn-danger d-block ml-auto\"\r\n                        onClick={removeDefaultCondition}>\r\n                        Remove Condition\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Custom Condition:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"customCondition\" id=\"customCondition\"\r\n                    placeholder=\"Status Description...\" value={newCondition} onChange={(e) => setNewCondition(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row pt-3\">\r\n                <span className=\"label-item col-md-4 text-md-left\">Custom Conditions: </span>\r\n                <div className=\"col-sm-4\">\r\n                {customConditions.map((condition, index) => {\r\n                    return (\r\n                        <div key={index} className=\"card-desc\">\r\n                            <span className=\"label-item\">\r\n                                {condition}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <button className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={addCustomCondition}>\r\n                        Add Custom Condition\r\n                    </button>\r\n                    <button className=\"btn btn-danger d-block ml-auto\"\r\n                        onClick={removeCustomCondition}>\r\n                        Remove Condition\r\n                    </button>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Status Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        Create Status  <FaPlusCircle />\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        Update Status<FaCheck />\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel <FaTimesCircle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusForm;","import React, {useState, useContext} from 'react';\r\n\r\nconst ActorSearch = ({orderBy, orderDir, changeOrder, searchActors, showCustom, showDefault, changeShow}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-actions row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchActor form-control col-md-6 text-md-right\" aria-label=\"Search Actors\"\r\n                onChange={e => searchActors(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Status Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'duration' ? 'active' : '')}\r\n                        onClick={e => changeOrder('duration', orderDir)} href=\"#\">\r\n                        Duration\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Filter Out: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + ( showDefault ? 'active' : '')}\r\n                        onClick={e => changeShow(showCustom, !showDefault)} href=\"#\">\r\n                        Default Characters\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + ( showCustom ? 'active' : '')}\r\n                        onClick={e => changeShow(!showCustom, showDefault)} href=\"#\">\r\n                        Custom Characters\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActorSearch;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaWindowClose} from 'react-icons/fa';\r\nimport { without } from 'lodash';\r\n\r\nconst StatusWrapperForm = ({formDisplay, toggleForm, createStatus, updateStatus,\r\n    editData, updateWrapper, wrapperData, cancelForm}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isDefault, setIsDefault] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [defaultConditions, setDefaultConditons] = useState([\"None\"]);\r\n    const [customConditions, setCustomConditons] = useState([\"None\"]);\r\n\r\n    const [newCondition, setNewCondition] = useState(\"\");\r\n    const [selectedCondition, setSelectedCondition] = useState(\"\");\r\n\r\n    const [endDate, setEndDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name)\r\n            setIsDefault(editData.isDefault)\r\n            setDescription(editData.description);\r\n            setDuration(editData.duration);\r\n            setDefaultConditons([...editData.defaultConditions]);\r\n            setCustomConditons([...editData.customConditions]);\r\n        }\r\n        if(wrapperData) {\r\n            setEndDate(wrapperData.endDate);\r\n        }\r\n    }, [editData, wrapperData])\r\n\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setIsDefault(false);\r\n        setDescription(\"\");\r\n        setDuration(\"\");\r\n        setDefaultConditons([\"None\"]);\r\n        setCustomConditons([\"None\"]);\r\n\r\n        setNewCondition(\"\");\r\n        setSelectedCondition(\"\");\r\n\r\n        setEndDate(\"\");\r\n    }\r\n    const makeNewStatus = () => {\r\n        return {\r\n            name: name,\r\n            isDefault: false,\r\n            description: description,\r\n            duration: duration,\r\n            defaultConditions: defaultConditions,\r\n            customConditions: customConditions\r\n        }\r\n    }\r\n    const makeNewWrapper = () => {\r\n        return {\r\n            endDate: endDate,\r\n            statusId: \"\"\r\n        }\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newStatus = makeNewStatus();\r\n        const newWrapper = makeNewWrapper();\r\n        if (createStatus) {\r\n            newWrapper.statusId = await createStatus(newStatus, newWrapper);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = async (e) => {\r\n        e.preventDefault();\r\n        const newStatus = makeNewStatus();\r\n        const newWrapper = makeNewWrapper();\r\n        if (isDefault) {\r\n            if (createStatus) {\r\n                newStatus._id = await createStatus(newStatus, newWrapper);\r\n            }\r\n        } else {\r\n            if (updateStatus) {\r\n                newStatus._id = _id;\r\n                newWrapper.statusId = _id;\r\n                updateStatus(newStatus, newWrapper, wrapperData);\r\n            }\r\n        }\r\n        resetForm();\r\n    } \r\n    const updateWrapperPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newWrapper = makeNewWrapper();\r\n        newWrapper.statusId= _id;\r\n        if (newWrapper.statusId && updateWrapper) {\r\n            updateWrapper(newWrapper, wrapperData);\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const addCustomCondition = (e) => {\r\n        e.preventDefault();\r\n        if (customConditions.length > 0) {\r\n            if (customConditions[0] !== \"None\") {\r\n                setCustomConditons([...customConditions, newCondition]);\r\n                setNewCondition(\"\");\r\n            } else {\r\n                setCustomConditons([newCondition])\r\n                setNewCondition(\"\");\r\n            }\r\n        }\r\n    }\r\n    const addDefaultCondition = (e) => {\r\n        e.preventDefault();\r\n        if (selectedCondition.length > 0) {\r\n            if (defaultConditions[0] != \"None\") {\r\n                setDefaultConditons([...defaultConditions, selectedCondition]);\r\n            } else {\r\n                setDefaultConditons([selectedCondition]);\r\n            }\r\n        }\r\n    }\r\n    const removeCustomCondition = (e) => {\r\n        e.preventDefault();\r\n        if (customConditions.length > 0) {\r\n            if (customConditions.length > 1) {\r\n                customConditions.pop()\r\n                setCustomConditons([...customConditions]);\r\n            } else {\r\n                setCustomConditons([\"None\"]);\r\n            }\r\n        }\r\n    }\r\n    const removeDefaultCondition = (e) => {\r\n        e.preventDefault();\r\n        if (defaultConditions.length > 0) {\r\n            if (defaultConditions.length > 1) {\r\n                defaultConditions.pop();\r\n                setDefaultConditons([...defaultConditions]);\r\n            } else {\r\n                setDefaultConditons([\"None\"]);\r\n            }\r\n        }\r\n    }\r\n    const updateConditionType = (e, newValue) => {\r\n        e.preventDefault();\r\n        setSelectedCondition(newValue);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Status\r\n        </div>\r\n        <div className=\"card-body\">            \r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"endDate\" readOnly>\r\n                    End Date:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"endDate\" placeholder=\"End Date\"\r\n                    value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                    onClick={updateWrapperPressed}>\r\n                    <FaCheck /> Update Status Effect\r\n                </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Status Name:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Status Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"duration\" readOnly>\r\n                    Duration: \r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"duration\" placeholder=\"Duration\"\r\n                    value={duration} onChange={(e) => setDuration(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"selectedCondition\" readOnly>\r\n                Affects:\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"aria-expanded=\"false\">\r\n                {selectedCondition} <span className=\"caret\" />\r\n            </button>\r\n            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Movement' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Movement\")} href=\"#\">\r\n                    Movement\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Sight' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Sight\")} href=\"#\">\r\n                    Sight\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Hearing' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Hearing\")} href=\"#\">\r\n                    Hearing\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Speech' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Speech\")} href=\"#\">\r\n                    Speech\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Hands' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Hands\")} href=\"#\">\r\n                    Hands\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Action' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Action\")} href=\"#\">\r\n                    Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Bonus' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Bonus\")} href=\"#\" >\r\n                    Bonus Action\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Reaction' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Reaction\")} href=\"#\" >\r\n                    Reaction\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Object' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Object\")} href=\"#\" >\r\n                    Object Interaction\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Health' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Health\")} href=\"#\" >\r\n                    Your Hit Points\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Ability' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Ability\")} href=\"#\" >\r\n                    Your Ability Scores\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'Armor' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"Armor\")} href=\"#\" >\r\n                    Your Armor Class\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'DC' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"DC\")} href=\"#\" >\r\n                    Your Dice Check Modifiers\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourAttack' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourAttack\")} href=\"#\" >\r\n                    Your Attack Rolls\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourSave' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourSave\")} href=\"#\" >\r\n                    Your Saving Throws\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourSkill' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourSkill\")} href=\"#\" >\r\n                    Your Skill Checks\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourContest' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourContest\")} href=\"#\" >\r\n                    Your Contest Checks\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'YourDamage' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"YourDamage\")} href=\"#\" >\r\n                    Your Damage Rolls\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirAttack' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirAttack\")} href=\"#\" >\r\n                    Attack Rolls Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirSave' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirSave\")} href=\"#\" >\r\n                    Saving Throws Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirSkill' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirSkill\")} href=\"#\" >\r\n                    Skill Checks Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirContest' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirContest\")} href=\"#\" >\r\n                    Contest Checks Against You\r\n                </button>\r\n                <button className={'sort-by dropdown-item ' + (selectedCondition === 'TheirDamage' ? 'active' : '')}\r\n                    onClick={(e) => updateConditionType(e, \"TheirDamage\")} href=\"#\" >\r\n                    Damage Rolls Against You\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row pt-3\">\r\n                <span className=\"label-item col-md-4 text-md-left\">Default Conditions: </span>\r\n                <div className=\"col-sm-4\">\r\n                    {defaultConditions.map((condition, index) => {\r\n                        return (\r\n                            <div key={index} className=\"\">\r\n                                <span className=\"label-item\">\r\n                                    {condition}\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <button className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={addDefaultCondition}>\r\n                        Add Default Condition\r\n                    </button>\r\n                    <button className=\"btn btn-danger d-block ml-auto\"\r\n                        onClick={removeDefaultCondition}>\r\n                        Remove Condition\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Custom Condition:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"customCondition\" id=\"customCondition\"\r\n                    placeholder=\"Status Description...\" value={newCondition} onChange={(e) => setNewCondition(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group form-row pt-3\">\r\n                <span className=\"label-item col-md-4 text-md-left\">Custom Conditions: </span>\r\n                <div className=\"col-sm-4\">\r\n                {customConditions.map((condition, index) => {\r\n                    return (\r\n                        <div key={index} className=\"card-desc\">\r\n                            <span className=\"label-item\">\r\n                                {condition}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <button className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={addCustomCondition}>\r\n                        Add Custom Condition\r\n                    </button>\r\n                    <button className=\"btn btn-danger d-block ml-auto\"\r\n                        onClick={removeCustomCondition}>\r\n                        Remove Condition\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card-details\">\r\n                <span className=\"label-item\">Custom Conditions: </span>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description:\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Status Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" \r\n                        onClick={createPressed}>\r\n                        <FaPlusCircle /> Create Status Effect\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\"\r\n                        onClick={updatePressed}>\r\n                        <FaCheck /> Update Status Effect\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        <FaWindowClose /> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusWrapperForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport StatusList from './StatusList';\r\nimport StatusForm from './StatusForm';\r\nimport StatusSearch from './StatusSearch';\r\nimport StatusWrapperForm from './StatusWrapperForm';\r\nimport StatusWrapperList from './StatusWrapperList';\r\nimport StatusWrapperSearch from './StatusWrapperSearch';\r\nimport * as statusServices from './../../../Services/status-services';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as userServices from './../../../Services/user-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport { find, findIndex, without } from 'lodash';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst StatusPage = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [status, setStatus] = contextData.user.status;\r\n    const [characterStatus, setCharacterStatus] = contextData.character.status;\r\n    const [defaultStatus, setDefaultStatus] = contextData.default.status;\r\n\r\n    const [user, setUser] = contextData.user.user;\r\n    const [character, setCharacter] = contextData.character.character;\r\n\r\n    const [userFormDisplay, setUserFormDisplay] = useState(false);\r\n    const [characterFormDisplay, setCharacterFormDisplay] = useState(false);\r\n    const [bottomHidden, setBottomHidden] = useState(false);\r\n    const [topHidden, setTopHidden] = useState(false);\r\n    const toggleTopList = () => {\r\n        setTopHidden(!topHidden);\r\n    }\r\n    const toggleBottomList = () => {\r\n        setBottomHidden(!bottomHidden);\r\n    }\r\n    const userToggleForm = () => {\r\n        setUserFormDisplay(!userFormDisplay);\r\n    }\r\n    const characterToggleForm = () => {\r\n        setCharacterFormDisplay(!characterFormDisplay);\r\n    }\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n    const [characterQuery, setCharacterQuery] = useState('');\r\n    const userSearch = (query) => {\r\n        setUserQuery(query);\r\n    }\r\n    const characterSearch = (query) => {\r\n        setCharacterQuery(query);\r\n    }\r\n\r\n    const [userOrderBy, setUserOrderBy] = useState('name');\r\n    const [userOrderDir, setUserOrderDir] = useState('asc');\r\n    const [characterOrderBy, setCharacterOrderBy] = useState('name');\r\n    const [characterOrderDir, setCharacterOrderDir] = useState('asc');\r\n    const userChangeOrder = (order, dir) => {\r\n        setUserOrderBy(order);\r\n        setUserOrderDir(dir);\r\n    }\r\n    const characterChangeOrder = (order, dir) => {\r\n        setCharacterOrderBy(order);\r\n        setCharacterOrderDir(dir);\r\n    }\r\n    \r\n    const [userShowCustom, setUserShowCustom] = useState(true);\r\n    const [userShowDefault, setUserShowDefault] = useState(true);\r\n    const [characterShowCustom, setCharacterShowCustom] = useState(true);\r\n    const [characterShowDefault, setCharacterShowDefault] = useState(true);\r\n    const [characterShowExpired, setCharacterShowExpired] = useState(true);\r\n    const [characterShowActive, setCharacterShowActive] = useState(true);\r\n    const userChangeShow = (showCustom, showDefault) => {\r\n        setUserShowCustom(showCustom);\r\n        setUserShowDefault(showDefault);\r\n    }\r\n    const characterChangeShow = (showCustom, showDefault, showExpired, showActive) => {\r\n        setCharacterShowCustom(showCustom);\r\n        setCharacterShowDefault(showDefault);\r\n        setCharacterShowActive(showActive);\r\n        setCharacterShowExpired(showExpired);\r\n    }\r\n\r\n    const [editData, setEditData] = useState();\r\n    const [wrapperData, setWrapperData] = useState();\r\n    const [sendData, setSendData] = useState();\r\n    const updateStatus = async (updatedStatus) => {\r\n        let i = 0;\r\n        for(const status of characterStatus) {\r\n            if (status._id == updatedStatus) {\r\n                characterStatus[i] = updatedStatus;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        const userIndex = findIndex(status, {\r\n            _id: updatedStatus._id\r\n        });\r\n        if (userIndex > -1) {\r\n            status[userIndex] = updatedStatus;\r\n            setStatus([...status]);\r\n        }\r\n        setEditData();\r\n        await statusServices.updateStatus(updatedStatus);\r\n    }\r\n    const updateCharacterStatus = async (updatedStatus, updatedWrapper, originalWrapper) => {\r\n        const userIndex = findIndex(status, {\r\n            _id: updatedStatus._id\r\n        });\r\n        if (userIndex > -1) {\r\n            status[userIndex] = updatedStatus;\r\n            setStatus([...status]);\r\n        }\r\n\r\n        let i = 0;\r\n        for(const status of characterStatus) {\r\n            if (status._id === updatedStatus._id) {\r\n                characterStatus[i] = updatedStatus;\r\n            }\r\n            i++;\r\n        }\r\n        setCharacterStatus([...characterStatus]);\r\n\r\n        updateWrapper(updatedWrapper, originalWrapper);\r\n        await statusServices.updateStatus(updatedStatus);\r\n    }\r\n    const updateWrapper = async (updatedWrapper, originalWrapper) => {\r\n        const statusIndex = findIndex(character.status, {\r\n            statusId: updatedWrapper.statusId,\r\n            endDate: originalWrapper.endDate\r\n        });\r\n        if (statusIndex > -1) {\r\n            const newCharacter = character;\r\n            newCharacter.status[statusIndex] = updatedWrapper;\r\n            setCharacter(newCharacter);\r\n            await characterServices.updateCharacter(newCharacter);\r\n        }\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const cancelEdit = () => {\r\n        setEditData();\r\n    }\r\n    const cancelCharacterEdit = () => {\r\n        setEditData();\r\n        setWrapperData()\r\n    }\r\n    const editStatus = (status) => {\r\n        setEditData(status);\r\n        setUserFormDisplay(true);\r\n        setCharacterFormDisplay(false);\r\n    }\r\n    const editCharacterStatus = (status, wrapper) => {\r\n        setEditData(status);\r\n        setWrapperData(wrapper)\r\n        setUserFormDisplay(false);\r\n        setCharacterFormDisplay(true);\r\n    }\r\n    const createStatus = async (createdStatus) => {\r\n        const newStatus = (await statusServices.createStatus(createdStatus)).status;\r\n        setStatus([...status, newStatus]);\r\n        const newUser = user;\r\n        newUser.statusIds.push(newStatus._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n        return newStatus._id;\r\n    }\r\n    const createCharacterStatus = async (newCharacterStatus, newStatusWrapper) => {\r\n        const newStatus = (await statusServices.createStatus(newCharacterStatus)).status;\r\n        setStatus([...status, newStatus]);\r\n        setCharacterStatus([...characterStatus, newStatus])\r\n\r\n        const newUser = user;\r\n        newUser.statusIds.push(newStatus._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser)\r\n\r\n        const newCharacter = character;\r\n        newCharacter.status.push({\r\n            endDate: newStatusWrapper.endDate,\r\n            statusId: newStatus._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n\r\n        return newStatus._id;\r\n    }\r\n    const selectStatus = async (newCharacterStatus) => {\r\n        setCharacterStatus([...characterStatus, newCharacterStatus]);\r\n\r\n        const newCharacter = character;\r\n        newCharacter.status.push({\r\n            endDate: newCharacterStatus.duration,\r\n            statusId: newCharacterStatus._id});\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter)\r\n    }\r\n    const deleteStatus = async (deletedStatus) => {\r\n        setEditData();\r\n        setWrapperData();\r\n        setUserFormDisplay(false);\r\n        setCharacterFormDisplay(false);\r\n        if (!deletedStatus.isDefault) {\r\n                let statusWrapperIndex = -1;\r\n                do {\r\n                    const statusIdIndex = user.statusIds.indexOf(deletedStatus._id);\r\n                    if (statusIdIndex > -1) {\r\n                        const newIdList = without(user.statusIds, user.statusIds[statusIdIndex]);\r\n                        const newUser = user;\r\n                        newUser.statusIds = newIdList;\r\n                        setUser(newUser);\r\n                    }\r\n                    \r\n                    const statusIndex = findIndex(status, {\r\n                        _id: deletedStatus._id\r\n                    });\r\n                    if (statusIndex > -1) {\r\n                        const newList = without(status, status[statusIndex]);\r\n                        setStatus([...newList]);\r\n                    }\r\n\r\n                    const charStatusIndex = findIndex(characterStatus, {\r\n                        _id: deletedStatus._id\r\n                    });\r\n                    if (charStatusIndex > -1) {\r\n                        const newCharList = without(characterStatus, characterStatus[charStatusIndex]);\r\n                        setCharacterStatus([...newCharList]);\r\n                    }\r\n                    \r\n                    if (character) {\r\n                        statusWrapperIndex = findIndex(character.status, {\r\n                            statusId: deletedStatus._id\r\n                        });\r\n                        if (statusWrapperIndex > -1) {\r\n                            const newCharacter = character;\r\n                            newCharacter.status = without(character.status, character.status[statusWrapperIndex]);;\r\n                            setCharacter(newCharacter);\r\n                        };\r\n                    }\r\n                } while (statusWrapperIndex > -1)\r\n                await userServices.updateUser(user);\r\n                if (character) {\r\n                    await characterServices.updateCharacter(character);\r\n                }\r\n                await statusServices.deleteCustomStatus(deletedStatus._id);\r\n        } else {\r\n            console.log(\"can't delete default\");\r\n        }\r\n    }\r\n    const dropStatus = async (dropStatus, statusWrapper) => {\r\n        const charStatusIndex = findIndex(characterStatus, {\r\n            statusId: dropStatus._id\r\n        });\r\n        const newCharList = without(characterStatus, characterStatus[charStatusIndex]);\r\n        setCharacterStatus([...newCharList]);\r\n        const statusWrapperIndex = findIndex(character.status, {\r\n            endDate: statusWrapper.endDate,\r\n            statusId: statusWrapper.statusId\r\n        });\r\n        const newCharacter = character;\r\n        newCharacter.status = without(character.status, character.status[statusWrapperIndex]);\r\n        setCharacter(newCharacter);\r\n        await characterServices.updateCharacter(newCharacter);\r\n    }\r\n\r\n    let userFilteredStatus = [];\r\n    let userOrder;\r\n    userFilteredStatus = [...status, ...defaultStatus];\r\n    if (userOrderDir === 'asc') {\r\n        userOrder = 1;\r\n    } else {\r\n        userOrder = -1;\r\n    }\r\n    userFilteredStatus = userFilteredStatus.sort((a, b) => {\r\n        if (\r\n            a[userOrderBy].toLowerCase() <\r\n            b[userOrderBy].toLowerCase()\r\n        ) {\r\n            return -1 * userOrder;\r\n        } else {\r\n            return 1 * userOrder;\r\n        }\r\n        }).filter(eachStatus => {\r\n            return (userShowCustom && !eachStatus.isDefault) || \r\n                (userShowDefault && eachStatus.isDefault)     \r\n        }).filter(eachStatus => {\r\n        return (\r\n            eachStatus['name']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) ||\r\n            eachStatus['duration']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase())\r\n        );\r\n    });\r\n\r\n    let characterFilteredStatus = [];\r\n    if(character) {\r\n        let characterOrder;\r\n        characterFilteredStatus = character.status.map(status => {\r\n            const combinedStatus = {\r\n                status: find(characterStatus, ['_id', status.statusId]),\r\n                wrapper: status\r\n            }\r\n            return combinedStatus\r\n        });\r\n        if (characterOrderDir === 'asc') {\r\n            characterOrder = 1;\r\n        } else {\r\n            characterOrder = -1;\r\n        }\r\n        characterFilteredStatus = characterFilteredStatus.sort((a, b) => {\r\n            if (\r\n                a.status[characterOrderBy].toLowerCase() <\r\n                b.status[characterOrderBy].toLowerCase()\r\n            ) {\r\n                return -1 * characterOrder;\r\n            } else {\r\n                return 1 * characterOrder;\r\n            }\r\n            }).filter(eachStatus => {\r\n                return ((characterShowCustom && !eachStatus.status.isDefault) || \r\n                    (characterShowDefault && eachStatus.status.isDefault)) && (\r\n                    (characterShowExpired && eachStatus.wrapper.endDate >\r\n                        eachStatus.status.duration) ||\r\n                    (characterShowActive && eachStatus.wrapper.endDate < \r\n                        eachStatus.status.duration))\r\n            }).filter(eachStatus => {\r\n            return (\r\n                eachStatus.status['name']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachStatus.status['duration']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase()) ||\r\n                eachStatus.wrapper['endDate']\r\n                .toLowerCase()\r\n                .includes(characterQuery.toLowerCase())\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={\"card-addheading bg-primary text-white card-header \" + \r\n            (characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")} onClick={toggleTopList} > \r\n            <div className={topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> Character's Status Effects\r\n            </div>\r\n            <div className={!topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> Character's Status Effects\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (topHidden? \"\" : \"hidden-list\")}> \r\n            <div className={\" list-holder \" + !topHidden ? \"\" : \"hidden-list\"}>\r\n            <StatusWrapperForm \r\n                formDisplay={characterFormDisplay}\r\n                toggleForm={characterToggleForm}\r\n                createStatus={createCharacterStatus}\r\n                updateStatus={updateCharacterStatus}\r\n                updateWrapper={updateWrapper}\r\n                cancelForm={cancelCharacterEdit}\r\n                editData={editData}\r\n                wrapperData={wrapperData}/>\r\n            <StatusWrapperSearch \r\n                orderBy={characterOrderBy}\r\n                orderDir={characterOrderDir}\r\n                changeOrder={characterChangeOrder}\r\n                searchStatus={characterSearch}\r\n                showCustom={characterShowCustom}\r\n                showDefault={characterShowDefault}\r\n                showExpired={characterShowExpired}\r\n                showActive={characterShowActive}\r\n                changeShow={characterChangeShow}/>\r\n            <StatusWrapperList \r\n                status={characterFilteredStatus}\r\n                dropStatus={dropStatus}\r\n                deleteStatus={deleteStatus}\r\n                editStatus={editCharacterStatus}/>\r\n        </div>\r\n    </div>\r\n    <div className={\"card-addheading  bg-primary text-white card-header\"} onClick={toggleBottomList} > \r\n        <div className={bottomHidden ? \"\" : \"hidden-list\"}>\r\n            <FaChevronDown/> All Status Effects\r\n        </div>\r\n        <div className={!bottomHidden ? \"\" : \"hidden-list\"}>\r\n            <FaChevronUp /> All Status Effects\r\n        </div> \r\n    </div>\r\n    <div className={\"card-addheading list-holder card-header \" + \r\n        (bottomHidden? \"\" : \"hidden-list\")}>\r\n        <div className={\" list-holder \" + !bottomHidden ? \"\" : \"hidden-list\"}>\r\n            <StatusForm \r\n                formDisplay={userFormDisplay}\r\n                toggleForm={userToggleForm}\r\n                createStatus={createStatus}\r\n                updateStatus={updateStatus}\r\n                cancelForm={cancelEdit}\r\n                editData={editData}/>\r\n            <StatusSearch \r\n                orderBy={userOrderBy}\r\n                orderDir={userOrderDir}\r\n                changeOrder={userChangeOrder}\r\n                searchStatus={userSearch}\r\n                showCustom={userShowCustom}\r\n                showDefault={userShowDefault}\r\n                changeShow={userChangeShow}/>\r\n            <StatusList \r\n                status={userFilteredStatus} \r\n                selectStatus={selectStatus}\r\n                deleteStatus={deleteStatus}\r\n                editStatus={editStatus}\r\n                isTop={false}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusPage;","import React, {useState, useContext} from 'react';\r\nimport { FaTrashAlt, FaPencilAlt, FaTag, FaHiking } from 'react-icons/fa';\r\n \r\nconst CharacterList = ({characters, selectCharacter, deleteCharacter, editCharacter}) => {\r\n    return (\r\n        <>\r\n        <div className=\"character-list item-list mb-3\">\r\n        {characters.map((item, index) => (\r\n            <div className=\"card-item col media py-3\" key={index}>\r\n            <div className=\"card-info media-body\">\r\n\r\n                <div className=\"card-head d-flex\">\r\n                    <span className=\"card-name\">\r\n                        <FaHiking />ID: {item._id} -- Name: {item.name}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"card-desc\">\r\n                    <span className=\"label-item\">description: </span>\r\n                    {item.description}\r\n                </div>\r\n\r\n                <div className=\"card-details\">\r\n                    <span className=\"label-item\">Character Class: </span>\r\n                    {item.characterClass}\r\n                </div>\r\n\r\n                <div className=\"card-details\">\r\n                    <span className=\"label-item\">Gold: </span>\r\n                    {item.gold}\r\n                </div>\r\n\r\n                <div className=\"card-details\">\r\n                    <span className=\"label-item\">Age: </span>\r\n                    {item.age}\r\n                </div>\r\n\r\n                <div className=\"mr-3\">\r\n                    <button className=\"card-delete btn btn-sm btn-danger\" \r\n                        onClick={() => deleteCharacter(item)} >\r\n                        Delete <FaTrashAlt />\r\n                    </button>\r\n                    <button className=\"card-delete btn btn-sm btn-warning\" \r\n                        onClick={() => editCharacter(item)} >\r\n                        Edit <FaPencilAlt />\r\n                    </button>\r\n                    <button className=\"card-delete btn btn-sm btn-primary\" \r\n                        onClick={() => selectCharacter(item)} >\r\n                        Select <FaTag />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CharacterList;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlusCircle, FaCheck, FaTimesCircle} from 'react-icons/fa';\r\n\r\nconst CharacterForm = ({formDisplay, toggleForm, createCharacter, updateCharacter, \r\n    selectCharacter, editData, cancelForm, createActor}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [gold, setGold] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [characterClass, setCharacterClass] = useState(\"All\");\r\n    const [characterItems, setCharacterItems] = useState([]);\r\n    const [characterActions, setCharacterActions] = useState([]);\r\n    const [characterStatus, setCharacterStatus] = useState([]);\r\n    const [characterActors, setCharacterActors] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setDescription(editData.description);\r\n            setGold(editData.gold);\r\n            setAge(editData.age);\r\n            setCharacterClass(editData.characterClass);\r\n            setCharacterItems(editData.items);\r\n            setCharacterActions(editData.actions);\r\n            setCharacterActors(editData.actors);\r\n            setCharacterStatus(editData.status);\r\n        }\r\n    }, [editData])\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n        setId(\"\");\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setGold(\"\");\r\n        setAge(\"\");\r\n        setCharacterClass(\"\");\r\n        setCharacterItems([]);\r\n        setCharacterActions([]);\r\n        setCharacterActors([]);\r\n        setCharacterStatus([]);\r\n    }\r\n    const createPressed = async (e) => {\r\n        e.preventDefault();\r\n        const newCharacter = {\r\n            name: name,\r\n            isDefault: false,\r\n            description: description,\r\n            gold: gold,\r\n            age: age,\r\n            characterClass: characterClass,\r\n            items: [],\r\n            actions: [],\r\n            actors: [],\r\n            status: []\r\n        }\r\n        if (createCharacter) {\r\n            newCharacter._id = await createCharacter(newCharacter);\r\n        }\r\n        if (selectCharacter) {\r\n            selectCharacter(newCharacter);\r\n        }\r\n        resetForm();\r\n    }\r\n    const updatePressed = (e) => {\r\n        e.preventDefault();\r\n        const newCharacter = {\r\n            _id: _id,\r\n            name: name,\r\n            description: description,\r\n            gold: gold,\r\n            age: age,\r\n            characterClass: characterClass,\r\n            items: characterItems,\r\n            status: characterStatus,\r\n            actions: characterActions,\r\n            actors: characterActors\r\n        }\r\n        if (updateCharacter) {\r\n            updateCharacter(newCharacter);\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        if (cancelForm) {\r\n            cancelForm();\r\n        }\r\n        resetForm();\r\n    }\r\n\r\n    const updateCharacterClass = (e, newValue) => {\r\n        e.preventDefault();\r\n        setCharacterClass(newValue);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlusCircle /> Create Character\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Character Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"gold\" readOnly>\r\n                    Gold\r\n                </label>\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"number\" className=\"form-control\" name=\"gold\" placeholder={\"Character's Gold\"}\r\n                    value={gold} onChange={(e) => setGold(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"age\" readOnly>\r\n                    Age In Years\r\n                </label>\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"number\" className=\"form-control\" name=\"age\" placeholder={\"Character's Age\"}\r\n                    value={age} onChange={(e) => setAge(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"characterClass\" readOnly>\r\n                    Character Class:\r\n                </label>\r\n                <span>\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                    {characterClass} <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Artificer' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Artificer\")} href=\"#\">\r\n                        Artificer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Barbarian' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Barbarian\")} href=\"#\">\r\n                        Barbarian\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Bard' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Bard\")} href=\"#\">\r\n                        Bard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Cleric' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Cleric\")} href=\"#\">\r\n                        Cleric\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Druid' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Druid\")} href=\"#\">\r\n                        Druid\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Fighter' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Fighter\")} href=\"#\">\r\n                        Fighter\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Monk' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Monk\")} href=\"#\">\r\n                        Monk\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Paladin' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Paladin\")} href=\"#\">\r\n                        Paladin\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Ranger' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Ranger\")} href=\"#\">\r\n                        Ranger\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Sorcerer' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Sorcerer\")} href=\"#\">\r\n                        Sorcerer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Warlock' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Warlock\")} href=\"#\">\r\n                        Warlock\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Wizard' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Wizard\")} href=\"#\">\r\n                        Wizard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Caster' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Caster\")} href=\"#\">\r\n                        Homebrew - Caster\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Martial' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Martial\")} href=\"#\">\r\n                        Homebrew - Martial\r\n                    </button>\r\n                </div>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Character Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                Item Count: {characterItems ? characterItems.length : 0}\r\n            </div>\r\n            <div>\r\n                Action Count: {characterActions ? characterActions.length: 0}\r\n            </div>\r\n            <div>\r\n                Actor Count: {characterActors ? characterActors.length: 0}\r\n            </div>\r\n            <div>\r\n                Status Count: {characterStatus ? characterStatus.length: 0}\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ? \"\" : \"hidden-button\" )}>\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-primary d-block ml-auto\" onClick={createPressed}>\r\n                        Create Character  <FaPlusCircle />\r\n                    </button>\r\n                </div>\r\n                <div className={\"offset-md-2 col-md-10 \"+(!_id ?  \"hidden-button\" : \"\")}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={updatePressed}>\r\n                        Update Character<FaCheck />\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel <FaTimesCircle />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharacterForm;","import React from 'react';\r\n\r\nconst CharacterSearch = ({orderBy, orderDir, changeOrder, searchCharacters}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-characters row justify-content-center my-4\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"SearchCharacter form-control col-md-6 text-md-right\" aria-label=\"Search Characters\"\r\n                onChange={e => searchCharacters(e.target.value)}/>\r\n            <div className=\"btn-group input-group-append col-md-4\">\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\"> \r\n                    Sort by: <span className=\"caret\" />\r\n                </button>\r\n\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'name' ? 'active' : '')}\r\n                        onClick={e =>changeOrder('name', orderDir)} href=\"#\">\r\n                        Name\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderBy === 'characterClass' ? 'active' : '')}\r\n                        onClick={e => changeOrder('characterClass', orderDir)} href=\"#\">\r\n                        Class\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'asc' ? 'active' : '')}\r\n                        onClick={e => changeOrder(orderBy, 'asc')} href=\"#\">\r\n                        Asc\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (orderDir === 'desc' ? 'active' : '')}\r\n                        onClick={e =>changeOrder(orderBy, 'desc')} href=\"#\" >\r\n                        Desc\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharacterSearch;","import React, {useState, useEffect} from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nconst CurrentCharacterForm = ({formDisplay, toggleForm, updateCharacter, editData}) => {\r\n    const [_id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [gold, setGold] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [characterClass, setCharacterClass] = useState(\"All\");\r\n    const [characterItems, setCharacterItems] = useState([]);\r\n    const [characterActions, setCharacterActions] = useState([]);\r\n    const [characterStatus, setCharacterStatus] = useState([]);\r\n    const [characterActors, setCharacterActors] = useState([]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(editData) {\r\n            setId(editData._id);\r\n            setName(editData.name);\r\n            setDescription(editData.description);\r\n            setGold(editData.gold);\r\n            setAge(editData.age);\r\n            setCharacterClass(editData.characterClass);\r\n            setCharacterItems(editData.items);\r\n            setCharacterActions(editData.actions);\r\n            setCharacterActors(editData.actors);\r\n            setCharacterStatus(editData.status);\r\n        }\r\n    }, [editData])\r\n\r\n    const resetForm = () => {\r\n        toggleForm();\r\n    }\r\n    const updatePressed = (e) => {\r\n        e.preventDefault();\r\n        const newCharacter = {\r\n            _id: _id,\r\n            name: name,\r\n            description: description,\r\n            gold: gold,\r\n            age: age,\r\n            characterClass: characterClass,\r\n            items: characterItems,\r\n            status: characterStatus,\r\n            actions: characterActions,\r\n            actors: characterActors\r\n        }\r\n        if (updateCharacter) {\r\n            updateCharacter(newCharacter);\r\n        }\r\n        resetForm();\r\n    }\r\n    const cancelPressed = (e) => {\r\n        e.preventDefault();\r\n        resetForm();\r\n    }\r\n    const updateCharacterClass = (e, newValue) => {\r\n        e.preventDefault();\r\n        setCharacterClass(newValue);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={'card textcenter mt-3 ' + (formDisplay ? '' : 'add-card')}>\r\n        <div className=\"card-addheading card-header bg-primary text-white\" onClick={cancelPressed}>\r\n            <FaPlus /> Edit Character\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <form className=\"cardForm\" noValidate>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"name\" readOnly>\r\n                    Name\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Character Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"gold\" readOnly>\r\n                    Gold\r\n                </label>\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"number\" className=\"form-control\" name=\"gold\" placeholder={\"Character's Gold\"}\r\n                    value={gold} onChange={(e) => setGold(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 col-form-label text-md-right\" htmlFor=\"age\" readOnly>\r\n                    Age In Years\r\n                </label>\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"number\" className=\"form-control\" name=\"age\" placeholder={\"Character's Age\"}\r\n                    value={age} onChange={(e) => setAge(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btn-group col-md-4 col-form-label\">\r\n                <label className=\"text-md-right\" htmlFor=\"characterClass\" readOnly>\r\n                    Character Class:\r\n                </label>\r\n                <span>\r\n                <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"aria-expanded=\"false\" id=\"classToggle\">\r\n                    {characterClass} <span className=\"caret\" />\r\n                </button>\r\n                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Artificer' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Artificer\")} href=\"#\">\r\n                        Artificer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Barbarian' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Barbarian\")} href=\"#\">\r\n                        Barbarian\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Bard' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Bard\")} href=\"#\">\r\n                        Bard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Cleric' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Cleric\")} href=\"#\">\r\n                        Cleric\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Druid' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Druid\")} href=\"#\">\r\n                        Druid\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Fighter' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Fighter\")} href=\"#\">\r\n                        Fighter\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Monk' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Monk\")} href=\"#\">\r\n                        Monk\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Paladin' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Paladin\")} href=\"#\">\r\n                        Paladin\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Ranger' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Ranger\")} href=\"#\">\r\n                        Ranger\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Sorcerer' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Sorcerer\")} href=\"#\">\r\n                        Sorcerer\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Warlock' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Warlock\")} href=\"#\">\r\n                        Warlock\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Wizard' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Wizard\")} href=\"#\">\r\n                        Wizard\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Caster' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Caster\")} href=\"#\">\r\n                        Homebrew - Caster\r\n                    </button>\r\n                    <button className={'sort-by dropdown-item ' + (characterClass === 'Martial' ? 'active' : '')}\r\n                        onClick={(e) => updateCharacterClass(e, \"Martial\")} href=\"#\">\r\n                        Homebrew - Martial\r\n                    </button>\r\n                </div>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"description\">\r\n                    Description\r\n                </label>\r\n                <div className=\"col-md-10\">\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"description\" id=\"description\"\r\n                    placeholder=\"Character Description...\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                Item Count: {characterItems ? characterItems.length : 0}\r\n            </div>\r\n            <div>\r\n                Action Count: {characterActions ? characterActions.length: 0}\r\n            </div>\r\n            <div>\r\n                Actor Count: {characterActors ? characterActors.length: 0}\r\n            </div>\r\n            <div>\r\n                Status Count: {characterStatus ? characterStatus.length: 0}\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0 \">\r\n                <div className={\"offset-md-2 col-md-10 \"}>\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={updatePressed}>\r\n                        Update Character\r\n                    </button>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-10\">\r\n                    <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" onClick={cancelPressed}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CurrentCharacterForm;","import React, {useState, useContext, useEffect} from 'react';\r\nimport {AppContext} from '../../../Services/AppContext';\r\nimport CharacterList from './CharacterList';\r\nimport CharacterForm from './CharacterForm';\r\nimport CharacterSearch from './CharacterSearch';\r\nimport CurrentCharacter from './CurrentCharacter';\r\nimport CurrentCharacterForm from './CurrentCharacterForm';\r\nimport * as characterServices from './../../../Services/character-services';\r\nimport * as userServices from './../../../Services/user-services';\r\nimport * as gameServices from './../../../Services/game-services';\r\nimport { filter, findIndex, without } from 'lodash';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst CharacterPage = () => {\r\n    const contextData = useContext(AppContext)[0];\r\n    const [currentActions, setCurrentActions] = contextData.character.actions;\r\n    const [currentItems, setCurrentItems] = contextData.character.items;\r\n    const [currentActors, setCurrentActors] = contextData.character.actors;\r\n    const [currentStatus, setCurrentStatus] = contextData.character.status;\r\n    const [userActions, setUserActions] = contextData.user.actions;\r\n    const [userItems, setUserItems] = contextData.user.items;\r\n    const [userActors, setUserActors] = contextData.user.actors;\r\n    const [userStatus, setUserStatus] = contextData.user.status;\r\n    const [defaultActions, setDefaultActions] = contextData.default.actions;\r\n    const [defaultItems, setDefaultItems] = contextData.default.items;\r\n    const [defaultActors, setDefaultActors] = contextData.default.actors;\r\n    const [defaultStatus, setDefaultStatus] = contextData.default.status;\r\n\r\n    const [characters, setCharacters] = contextData.user.characters;\r\n    const [currentCharacter, setCurrentCharacter] = contextData.character.character;\r\n    const [user, setUser] = contextData.user.user;\r\n\r\n    const [userFormDisplay, setUserFormDisplay] = useState(false);\r\n    const [currentFormDisplay, setCurrentFormDisplay] = useState(false);\r\n    const [bottomHidden, setBottomHidden] = useState(false);\r\n    const [topHidden, setTopHidden] = useState(false);\r\n    const toggleTopList = () => {\r\n        setTopHidden(!topHidden);\r\n    }\r\n    const toggleBottomList = () => {\r\n        setBottomHidden(!bottomHidden);\r\n    }\r\n    const userToggleForm = () => {\r\n        setUserFormDisplay(!userFormDisplay);\r\n    }\r\n    const currentToggleForm = () => {\r\n        setCurrentFormDisplay(!currentFormDisplay);\r\n    }\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n    const [userOrderBy, setUserOrderBy] = useState('name');\r\n    const [userOrderDir, setUserOrderDir] = useState('asc');\r\n    const userSearch = (query) => {\r\n        setUserQuery(query);\r\n    }\r\n    const userChangeOrder = (order, dir) => {\r\n        setUserOrderBy(order);\r\n        setUserOrderDir(dir);\r\n    }\r\n\r\n    const [editData, setEditData] = useState();\r\n    const updateCurrentCharacter = async (updatedCharacter) => {\r\n        const userIndex = findIndex(characters, {\r\n            _id: updatedCharacter._id\r\n        });\r\n        if (userIndex > -1) {\r\n            characters[userIndex] = updatedCharacter;\r\n            setCharacters([...characters]);\r\n        }\r\n        setCurrentCharacter(updatedCharacter);\r\n        await characterServices.updateCharacter(updatedCharacter);\r\n    }\r\n    const updateCharacter = async (updatedCharacter) => {\r\n        if (currentCharacter && currentCharacter._id === updatedCharacter._id) {\r\n            setCurrentCharacter(updatedCharacter);\r\n        }\r\n        const userIndex = findIndex(characters, {\r\n            _id: updatedCharacter._id\r\n        });\r\n        if (userIndex > -1) {\r\n            characters[userIndex] = updatedCharacter;\r\n            setCharacters([...characters]);\r\n        }\r\n        setEditData();\r\n        await characterServices.updateCharacter(updatedCharacter);\r\n    }\r\n    const cancelEdit = () => {\r\n        setEditData();\r\n    }\r\n    const editCharacter = (character) => {\r\n        setEditData(character);\r\n        setUserFormDisplay(true);\r\n    }\r\n    const editCurrentCharacter = () => {\r\n        setCurrentFormDisplay(true);\r\n    }\r\n    const createCharacter = async (character) => {\r\n        character.username = userServices.getUsername();\r\n        const newCharacter = (await characterServices.createCharacter(character)).character;\r\n        setCharacters([...characters, newCharacter]);\r\n        const newUser = user;\r\n        newUser.characterIds.push(newCharacter._id);\r\n        setUser(newUser);\r\n        await userServices.updateUser(newUser);\r\n        return newCharacter._id;\r\n    }\r\n    const selectCharacter = (newCurrentCharacter) => {\r\n        setCurrentCharacter(newCurrentCharacter);\r\n        const newActions = [];\r\n        for (let action of newCurrentCharacter.actions){\r\n            newActions.push(filter([...userActions, ...defaultActions], (o) => {\r\n                return o._id == action.actionId;\r\n            }));\r\n        }\r\n        const newActors = [];\r\n        for (let actor of newCurrentCharacter.actors){\r\n            newActors.push(filter([...userActors, ...defaultActors], (o) => {\r\n                return o._id == actor.actorId;\r\n            }));\r\n        }\r\n        const newItems = [];\r\n        for (let item of newCurrentCharacter.items){\r\n            newItems.push(filter([...userItems, ...defaultItems], (o) => {\r\n                return o._id == item.itemId;\r\n            }));\r\n        }\r\n        const newStatus = [];\r\n        for (let status of newCurrentCharacter.status){\r\n            newStatus.push(filter([...userStatus, ...defaultStatus], (o) => {\r\n                return o._id == status.statusId;\r\n            }));\r\n        }\r\n        setCurrentActions(newActions);\r\n        setCurrentStatus(newStatus);\r\n        setCurrentItems(newItems);\r\n        setCurrentActors(newActors);\r\n        characterServices.setCharId(newCurrentCharacter._id);\r\n    }\r\n    const deleteCharacter = async (deletedCharacter) => {\r\n        const newList = without(characters, deletedCharacter);\r\n        const newIdList = without(user.characterIds, deletedCharacter._id);\r\n        const newUser = user;\r\n        newUser.characterIds = newIdList;\r\n        setUser(newUser);\r\n        setCharacters([...newList]);\r\n        if (currentCharacter && deletedCharacter._id === currentCharacter._id) {\r\n            dropCharacter();\r\n        }\r\n        await userServices.updateUser(newUser);\r\n        await characterServices.deleteCharacter(deletedCharacter._id);\r\n    }\r\n    const dropCharacter = async () => {\r\n        setCurrentCharacter();\r\n        setCurrentActions([]);\r\n        setCurrentActors([]);\r\n        setCurrentItems([]);\r\n        setCurrentStatus([]);\r\n        setCurrentFormDisplay(false);\r\n        characterServices.clearCharacter();\r\n    }\r\n\r\n    let userFilteredCharacters = [];\r\n    let userOrder;\r\n    userFilteredCharacters = [...characters];\r\n    if (userOrderDir === 'asc') {\r\n        userOrder = 1;\r\n    } else {\r\n        userOrder = -1;\r\n    }\r\n    userFilteredCharacters = userFilteredCharacters.sort((a, b) => {\r\n        if (\r\n            a[userOrderBy].toLowerCase() <\r\n            b[userOrderBy].toLowerCase()\r\n        ) {\r\n            return -1 * userOrder;\r\n        } else {\r\n            return 1 * userOrder;\r\n        }\r\n        }).filter(eachItem => {\r\n        return (\r\n            eachItem['name']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase()) || \r\n            eachItem['characterClass']\r\n            .toLowerCase()\r\n            .includes(userQuery.toLowerCase())\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n        <div className={\"card-addheading bg-primary text-white card-header \" + \r\n            (characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")} onClick={toggleTopList} > \r\n            <div className={topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronDown/> Character's Inventory\r\n            </div>\r\n            <div className={!topHidden ? \"\" : \"hidden-list\"}>\r\n                <FaChevronUp /> Character's Inventory\r\n            </div> \r\n        </div>\r\n        <div className={\"card-addheading list-holder card-header \" + \r\n            (topHidden && characterServices.hasCurrCharacter()? \"\" : \"hidden-list\")}> \r\n            <div className={\" list-holder \" + !topHidden ? \"\" : \"hidden-list\"}>\r\n                <CurrentCharacterForm \r\n                    formDisplay={currentFormDisplay}\r\n                    toggleForm={currentToggleForm}\r\n                    updateCharacter={updateCurrentCharacter}\r\n                    editData={currentCharacter}/>\r\n                <CurrentCharacter\r\n                    deleteCharacter={deleteCharacter}\r\n                    dropCharacter={dropCharacter}\r\n                    editCharacter={editCurrentCharacter}\r\n                    characterData={currentCharacter}\r\n                    currentActions={currentActions}\r\n                    currentActors={currentActors}\r\n                    currentItems={currentItems}\r\n                    currentStatus={currentStatus}/>\r\n                </div>\r\n            </div>\r\n            <div className={\"card-addheading  bg-primary text-white card-header\"} onClick={toggleBottomList} > \r\n                <div className={bottomHidden ? \"\" : \"hidden-list\"}>\r\n                    <FaChevronDown/> All Items\r\n                </div>\r\n                <div className={!bottomHidden ? \"\" : \"hidden-list\"}>\r\n                    <FaChevronUp /> All Items\r\n                </div> \r\n            </div>\r\n            <div className={\"card-addheading list-holder card-header \" + \r\n                (bottomHidden? \"\" : \"hidden-list\")}>\r\n            <div className={\" list-holder \" + !bottomHidden ? \"\" : \"hidden-list\"}>\r\n                <CharacterForm \r\n                    formDisplay={userFormDisplay}\r\n                    toggleForm={userToggleForm}\r\n                    createCharacter={createCharacter}\r\n                    updateCharacter={updateCharacter}\r\n                    selectCharacter={selectCharacter}\r\n                    cancelForm={cancelEdit}\r\n                    editData={editData}/>\r\n                <CharacterSearch\r\n                    orderBy={userOrderBy}\r\n                    orderDir={userOrderDir}\r\n                    changeOrder={userChangeOrder}\r\n                    searchCharacters={userSearch}/>\r\n                <CharacterList \r\n                    characters={userFilteredCharacters} \r\n                    selectCharacter={selectCharacter}\r\n                    deleteCharacter={deleteCharacter}\r\n                    editCharacter={editCharacter}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharacterPage;","import React from 'react';\nimport './css/App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n}  from 'react-router-dom';\nimport Home from './Components/Home';\nimport AboutPage from './Components/Util/About';\nimport Register from './Components/Util/Registration/Register';\nimport Login from './Components/Util/Registration/Login';\nimport PageNotFound from './Components/PageNotFound';\n\nimport NavBar from './Components/Util/NavBar';\nimport DataLoader from './Components/Util/DataLoader';\n\nimport Items from './Components/Shared/Items/ItemPage';\nimport Actors from './Components/Player/Actors/ActorPage';\nimport Actions from './Components/Player/Actions/ActionPage';\nimport Status from './Components/Shared/Status/StatusPage';\nimport Characters from './Components/Player/Characters/CharacterPage';\n// import Games from './Components/Shared/Games/GamePage';\n\nimport {AppProvider} from './Services/AppContext';\n\nfunction App() {\n  return (\n    <AppProvider>\n    <Router>\n      <div className=\"App\">\n        <DataLoader />\n        <NavBar />\n        <div id=\"page-wrapper\">\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/register\" component={Register}/>\n            <Route path=\"/login\" component={Login}/>\n\n            <Route path=\"/items\" component={Items}/>\n            <Route path=\"/status\" component={Status}/>\n            <Route path=\"/actors\" component={Actors}/>\n            <Route path=\"/actions\" component={Actions}/>\n            <Route path=\"/characters\" component={Characters}/>\n            {/* <Route path=\"/games\" component={Games}/> */}\n\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n        </div>\n      </div>\n    </Router>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}